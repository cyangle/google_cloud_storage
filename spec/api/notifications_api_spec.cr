#  Cloud Storage JSON API
#
# Stores and retrieves potentially large, immutable data objects.
#
# The version of the OpenAPI document: v1
#
# Generated by: https://openapi-generator.tech
#

require "../spec_helper"

# Unit tests for GoogleCloudStorage::NotificationsApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe "NotificationsApi" do
  describe "test an instance of NotificationsApi" do
    it "should create an instance of NotificationsApi" do
      api_instance = GoogleCloudStorage::NotificationsApi.new
      api_instance.should be_a(GoogleCloudStorage::NotificationsApi)
    end
  end

  # unit tests for storage_notifications_delete
  # Permanently deletes a notification subscription.
  # @param bucket The parent bucket of the notification.
  # @param notification ID of the notification to delete.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :alt Data format for the response.
  # @option opts [String] :fields Selector specifying which fields to include in a partial response.
  # @option opts [String] :key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
  # @option opts [String] :oauth_token OAuth 2.0 token for the current user.
  # @option opts [Bool] :pretty_print Returns response with indentations and line breaks.
  # @option opts [String] :quota_user An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
  # @option opts [String] :upload_type Upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;, \&quot;resumable\&quot;).
  # @option opts [String] :user_ip Deprecated. Please use quotaUser instead.
  # @option opts [String] :user_project The project to be billed for this request. Required for Requester Pays buckets.
  # @return [nil]
  describe "storage_notifications_delete test" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  # unit tests for storage_notifications_get
  # View a notification configuration.
  # @param bucket The parent bucket of the notification.
  # @param notification Notification ID
  # @param [Hash] opts the optional parameters
  # @option opts [String] :alt Data format for the response.
  # @option opts [String] :fields Selector specifying which fields to include in a partial response.
  # @option opts [String] :key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
  # @option opts [String] :oauth_token OAuth 2.0 token for the current user.
  # @option opts [Bool] :pretty_print Returns response with indentations and line breaks.
  # @option opts [String] :quota_user An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
  # @option opts [String] :upload_type Upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;, \&quot;resumable\&quot;).
  # @option opts [String] :user_ip Deprecated. Please use quotaUser instead.
  # @option opts [String] :user_project The project to be billed for this request. Required for Requester Pays buckets.
  # @return [Notification]
  describe "storage_notifications_get test" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  # unit tests for storage_notifications_insert
  # Creates a notification subscription for a given bucket.
  # @param bucket The parent bucket of the notification.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :alt Data format for the response.
  # @option opts [String] :fields Selector specifying which fields to include in a partial response.
  # @option opts [String] :key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
  # @option opts [String] :oauth_token OAuth 2.0 token for the current user.
  # @option opts [Bool] :pretty_print Returns response with indentations and line breaks.
  # @option opts [String] :quota_user An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
  # @option opts [String] :upload_type Upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;, \&quot;resumable\&quot;).
  # @option opts [String] :user_ip Deprecated. Please use quotaUser instead.
  # @option opts [String] :user_project The project to be billed for this request. Required for Requester Pays buckets.
  # @option opts [Notification] :notification
  # @return [Notification]
  describe "storage_notifications_insert test" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  # unit tests for storage_notifications_list
  # Retrieves a list of notification subscriptions for a given bucket.
  # @param bucket Name of a Google Cloud Storage bucket.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :alt Data format for the response.
  # @option opts [String] :fields Selector specifying which fields to include in a partial response.
  # @option opts [String] :key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
  # @option opts [String] :oauth_token OAuth 2.0 token for the current user.
  # @option opts [Bool] :pretty_print Returns response with indentations and line breaks.
  # @option opts [String] :quota_user An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
  # @option opts [String] :upload_type Upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;, \&quot;resumable\&quot;).
  # @option opts [String] :user_ip Deprecated. Please use quotaUser instead.
  # @option opts [String] :user_project The project to be billed for this request. Required for Requester Pays buckets.
  # @return [Notifications]
  describe "storage_notifications_list test" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end
end
