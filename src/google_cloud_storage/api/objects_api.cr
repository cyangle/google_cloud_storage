#  Cloud Storage JSON API
#
# Stores and retrieves potentially large, immutable data objects.
#
# The version of the OpenAPI document: v1
#
# Generated by: https://openapi-generator.tech
#

require "../../core"

require "../models/channel"
require "../models/compose_request"

require "../models/objects"
require "../models/policy"
require "../models/rewrite_response"
require "../models/test_iam_permissions_response"

module GoogleCloudStorage
  class ObjectsApi
    property api_client : ApiClient

    delegate client_side_validation?, debugging?, to: @api_client.config

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end

    # Concatenates a list of existing objects into a new object in the same bucket.
    # @required @param destination_bucket [String?] Name of the bucket containing the source objects. The destination object is stored in this bucket.
    # @required @param destination_object [String?] Name of the new object. For information about how to URL encode object names to be path safe, see Encoding URI Path Parts.
    # @optional @param alt [String?] Data format for the response.
    # @optional @param fields [String?] Selector specifying which fields to include in a partial response.
    # @optional @param key [String?] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    # @optional @param oauth_token [String?] OAuth 2.0 token for the current user.
    # @optional @param pretty_print [Bool?] Returns response with indentations and line breaks.
    # @optional @param quota_user [String?] An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
    # @optional @param upload_type [String?] Upload protocol for media (e.g. \"media\", \"multipart\", \"resumable\").
    # @optional @param user_ip [String?] Deprecated. Please use quotaUser instead.
    # @optional @param destination_predefined_acl [String?] Apply a predefined set of access controls to the destination object.
    # @optional @param if_generation_match [String?] Makes the operation conditional on whether the object's current generation matches the given value. Setting to 0 makes the operation succeed only if there are no live versions of the object.
    # @optional @param if_metageneration_match [String?] Makes the operation conditional on whether the object's current metageneration matches the given value.
    # @optional @param kms_key_name [String?] Resource name of the Cloud KMS key, of the form projects/my-project/locations/global/keyRings/my-kr/cryptoKeys/my-key, that will be used to encrypt the object. Overrides the object metadata's kms_key_name value, if any.
    # @optional @param user_project [String?] The project to be billed for this request. Required for Requester Pays buckets.
    # @optional @param compose_request [GoogleCloudStorage::ComposeRequest?]
    # @return [GoogleCloudStorage::Object]
    def compose(
      *,
      destination_bucket : String? = nil,
      destination_object : String? = nil,
      alt : String? = nil,
      fields : String? = nil,
      key : String? = nil,
      oauth_token : String? = nil,
      pretty_print : Bool? = nil,
      quota_user : String? = nil,
      upload_type : String? = nil,
      user_ip : String? = nil,
      destination_predefined_acl : String? = nil,
      if_generation_match : String? = nil,
      if_metageneration_match : String? = nil,
      kms_key_name : String? = nil,
      user_project : String? = nil,
      compose_request : GoogleCloudStorage::ComposeRequest? = nil
    ) : GoogleCloudStorage::Object
      data, _status_code, _headers = compose_with_http_info(destination_bucket: destination_bucket, destination_object: destination_object, alt: alt, fields: fields, key: key, oauth_token: oauth_token, pretty_print: pretty_print, quota_user: quota_user, upload_type: upload_type, user_ip: user_ip, destination_predefined_acl: destination_predefined_acl, if_generation_match: if_generation_match, if_metageneration_match: if_metageneration_match, kms_key_name: kms_key_name, user_project: user_project, compose_request: compose_request)
      data
    end

    # Concatenates a list of existing objects into a new object in the same bucket.
    # @required @param destination_bucket [String?] Name of the bucket containing the source objects. The destination object is stored in this bucket.
    # @required @param destination_object [String?] Name of the new object. For information about how to URL encode object names to be path safe, see Encoding URI Path Parts.
    # @optional @param alt [String?] Data format for the response.
    # @optional @param fields [String?] Selector specifying which fields to include in a partial response.
    # @optional @param key [String?] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    # @optional @param oauth_token [String?] OAuth 2.0 token for the current user.
    # @optional @param pretty_print [Bool?] Returns response with indentations and line breaks.
    # @optional @param quota_user [String?] An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
    # @optional @param upload_type [String?] Upload protocol for media (e.g. \"media\", \"multipart\", \"resumable\").
    # @optional @param user_ip [String?] Deprecated. Please use quotaUser instead.
    # @optional @param destination_predefined_acl [String?] Apply a predefined set of access controls to the destination object.
    # @optional @param if_generation_match [String?] Makes the operation conditional on whether the object's current generation matches the given value. Setting to 0 makes the operation succeed only if there are no live versions of the object.
    # @optional @param if_metageneration_match [String?] Makes the operation conditional on whether the object's current metageneration matches the given value.
    # @optional @param kms_key_name [String?] Resource name of the Cloud KMS key, of the form projects/my-project/locations/global/keyRings/my-kr/cryptoKeys/my-key, that will be used to encrypt the object. Overrides the object metadata's kms_key_name value, if any.
    # @optional @param user_project [String?] The project to be billed for this request. Required for Requester Pays buckets.
    # @optional @param compose_request [GoogleCloudStorage::ComposeRequest?]
    # @return [Tuple(GoogleCloudStorage::Object, Integer, Hash)] GoogleCloudStorage::Object, response status code and response headers
    def compose_with_http_info(
      *,
      destination_bucket : String? = nil,
      destination_object : String? = nil,
      alt : String? = nil,
      fields : String? = nil,
      key : String? = nil,
      oauth_token : String? = nil,
      pretty_print : Bool? = nil,
      quota_user : String? = nil,
      upload_type : String? = nil,
      user_ip : String? = nil,
      destination_predefined_acl : String? = nil,
      if_generation_match : String? = nil,
      if_metageneration_match : String? = nil,
      kms_key_name : String? = nil,
      user_project : String? = nil,
      compose_request : GoogleCloudStorage::ComposeRequest? = nil
    ) : Tuple(GoogleCloudStorage::Object, Int32, Hash(String, Array(String) | String))
      request = build_api_request_for_compose(destination_bucket: destination_bucket, destination_object: destination_object, alt: alt, fields: fields, key: key, oauth_token: oauth_token, pretty_print: pretty_print, quota_user: quota_user, upload_type: upload_type, user_ip: user_ip, destination_predefined_acl: destination_predefined_acl, if_generation_match: if_generation_match, if_metageneration_match: if_metageneration_match, kms_key_name: kms_key_name, user_project: user_project, compose_request: compose_request)

      body, status_code, headers = @api_client.execute_api_request(request)

      if debugging?
        Log.debug { "API called: ObjectsApi#compose\nBody: #{body.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      Tuple.new(GoogleCloudStorage::Object.from_json(body), status_code, headers)
    end

    # Concatenates a list of existing objects into a new object in the same bucket.
    # @required @param destination_bucket [String?] Name of the bucket containing the source objects. The destination object is stored in this bucket.
    # @required @param destination_object [String?] Name of the new object. For information about how to URL encode object names to be path safe, see Encoding URI Path Parts.
    # @optional @param alt [String?] Data format for the response.
    # @optional @param fields [String?] Selector specifying which fields to include in a partial response.
    # @optional @param key [String?] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    # @optional @param oauth_token [String?] OAuth 2.0 token for the current user.
    # @optional @param pretty_print [Bool?] Returns response with indentations and line breaks.
    # @optional @param quota_user [String?] An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
    # @optional @param upload_type [String?] Upload protocol for media (e.g. \"media\", \"multipart\", \"resumable\").
    # @optional @param user_ip [String?] Deprecated. Please use quotaUser instead.
    # @optional @param destination_predefined_acl [String?] Apply a predefined set of access controls to the destination object.
    # @optional @param if_generation_match [String?] Makes the operation conditional on whether the object's current generation matches the given value. Setting to 0 makes the operation succeed only if there are no live versions of the object.
    # @optional @param if_metageneration_match [String?] Makes the operation conditional on whether the object's current metageneration matches the given value.
    # @optional @param kms_key_name [String?] Resource name of the Cloud KMS key, of the form projects/my-project/locations/global/keyRings/my-kr/cryptoKeys/my-key, that will be used to encrypt the object. Overrides the object metadata's kms_key_name value, if any.
    # @optional @param user_project [String?] The project to be billed for this request. Required for Requester Pays buckets.
    # @optional @param compose_request [GoogleCloudStorage::ComposeRequest?]
    # @return nil
    def compose(
      *,
      destination_bucket : String? = nil,
      destination_object : String? = nil,
      alt : String? = nil,
      fields : String? = nil,
      key : String? = nil,
      oauth_token : String? = nil,
      pretty_print : Bool? = nil,
      quota_user : String? = nil,
      upload_type : String? = nil,
      user_ip : String? = nil,
      destination_predefined_acl : String? = nil,
      if_generation_match : String? = nil,
      if_metageneration_match : String? = nil,
      kms_key_name : String? = nil,
      user_project : String? = nil,
      compose_request : GoogleCloudStorage::ComposeRequest? = nil,
      &block : Crest::Response ->
    ) : Nil
      build_api_request_for_compose(destination_bucket: destination_bucket, destination_object: destination_object, alt: alt, fields: fields, key: key, oauth_token: oauth_token, pretty_print: pretty_print, quota_user: quota_user, upload_type: upload_type, user_ip: user_ip, destination_predefined_acl: destination_predefined_acl, if_generation_match: if_generation_match, if_metageneration_match: if_metageneration_match, kms_key_name: kms_key_name, user_project: user_project, compose_request: compose_request).execute(&block)
    end

    STORAGE_OBJECTS_COMPOSE_VALID_VALUES_FOR_ALT                        = String.static_array("json", "media")
    STORAGE_OBJECTS_COMPOSE_VALID_VALUES_FOR_DESTINATION_PREDEFINED_ACL = String.static_array("authenticatedRead", "bucketOwnerFullControl", "bucketOwnerRead", "private", "projectPrivate", "publicRead")

    # @return Crest::Request
    def build_api_request_for_compose(
      *,
      destination_bucket : String? = nil,
      destination_object : String? = nil,
      alt : String? = nil,
      fields : String? = nil,
      key : String? = nil,
      oauth_token : String? = nil,
      pretty_print : Bool? = nil,
      quota_user : String? = nil,
      upload_type : String? = nil,
      user_ip : String? = nil,
      destination_predefined_acl : String? = nil,
      if_generation_match : String? = nil,
      if_metageneration_match : String? = nil,
      kms_key_name : String? = nil,
      user_project : String? = nil,
      compose_request : GoogleCloudStorage::ComposeRequest? = nil
    ) : Crest::Request
      if debugging?
        Log.debug { "Calling API: ObjectsApi.compose ..." }
      end

      if client_side_validation?
        raise ArgumentError.new("\"destination_bucket\" is required and cannot be null") if destination_bucket.nil?
        unless (_destination_bucket = destination_bucket).nil?
        end
        raise ArgumentError.new("\"destination_object\" is required and cannot be null") if destination_object.nil?
        unless (_destination_object = destination_object).nil?
        end
        unless (_alt = alt).nil?
          OpenApi::EnumValidator.validate("alt", _alt, STORAGE_OBJECTS_COMPOSE_VALID_VALUES_FOR_ALT)
        end
        unless (_fields = fields).nil?
        end
        unless (_key = key).nil?
        end
        unless (_oauth_token = oauth_token).nil?
        end
        unless (_pretty_print = pretty_print).nil?
        end
        unless (_quota_user = quota_user).nil?
        end
        unless (_upload_type = upload_type).nil?
        end
        unless (_user_ip = user_ip).nil?
        end
        unless (_destination_predefined_acl = destination_predefined_acl).nil?
          OpenApi::EnumValidator.validate("destination_predefined_acl", _destination_predefined_acl, STORAGE_OBJECTS_COMPOSE_VALID_VALUES_FOR_DESTINATION_PREDEFINED_ACL)
        end
        unless (_if_generation_match = if_generation_match).nil?
        end
        unless (_if_metageneration_match = if_metageneration_match).nil?
        end
        unless (_kms_key_name = kms_key_name).nil?
        end
        unless (_user_project = user_project).nil?
        end
        unless (_compose_request = compose_request).nil?
          _compose_request.validate if _compose_request.is_a?(OpenApi::Validatable)
        end
      end

      # resource path
      local_var_path = "/storage/v1/b/{destinationBucket}/o/{destinationObject}/compose".sub("{" + "destinationBucket" + "}", URI.encode_path(destination_bucket.to_s)).sub("{" + "destinationObject" + "}", URI.encode_path(destination_object.to_s))

      # header parameters
      header_params : Hash(String, String) = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])
      # HTTP header "Content-Type"
      header_params["Content-Type"] = @api_client.select_header_content_type(["application/json"])

      # cookie parameters
      cookie_params : Hash(String, String) = Hash(String, String).new

      # query parameters
      query_params : Hash(String, (String | Array(String) | JSON::Any)) = Hash(String, (String | Array(String) | JSON::Any)).new
      query_params["alt"] = alt.to_s if !alt.nil?
      query_params["fields"] = fields.to_s if !fields.nil?
      query_params["key"] = key.to_s if !key.nil?
      query_params["oauth_token"] = oauth_token.to_s if !oauth_token.nil?
      query_params["prettyPrint"] = pretty_print.to_s if !pretty_print.nil?
      query_params["quotaUser"] = quota_user.to_s if !quota_user.nil?
      query_params["uploadType"] = upload_type.to_s if !upload_type.nil?
      query_params["userIp"] = user_ip.to_s if !user_ip.nil?
      query_params["destinationPredefinedAcl"] = destination_predefined_acl.to_s if !destination_predefined_acl.nil?
      query_params["ifGenerationMatch"] = if_generation_match.to_s if !if_generation_match.nil?
      query_params["ifMetagenerationMatch"] = if_metageneration_match.to_s if !if_metageneration_match.nil?
      query_params["kmsKeyName"] = kms_key_name.to_s if !kms_key_name.nil?
      query_params["userProject"] = user_project.to_s if !user_project.nil?

      # form parameters
      form_params : Array(Tuple(String, Crest::ParamsValue)) | Nil = nil

      # http body (model)
      post_body : IO | String | Nil = @api_client.encode(body: compose_request, content_type: header_params["Content-Type"]?) if !compose_request.nil?

      # auth_names
      auth_names = ["Oauth2c", "Oauth2"]

      @api_client.build_api_request(
        http_method: :"POST",
        path: local_var_path,
        operation: "ObjectsApi.storage_objects_compose",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        cookie_params: cookie_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    # Copies a source object to a destination object. Optionally overrides metadata.
    # @required @param source_bucket [String?] Name of the bucket in which to find the source object.
    # @required @param source_object [String?] Name of the source object. For information about how to URL encode object names to be path safe, see Encoding URI Path Parts.
    # @required @param destination_bucket [String?] Name of the bucket in which to store the new object. Overrides the provided object metadata's bucket value, if any.For information about how to URL encode object names to be path safe, see Encoding URI Path Parts.
    # @required @param destination_object [String?] Name of the new object. Required when the object metadata is not otherwise provided. Overrides the object metadata's name value, if any.
    # @optional @param alt [String?] Data format for the response.
    # @optional @param fields [String?] Selector specifying which fields to include in a partial response.
    # @optional @param key [String?] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    # @optional @param oauth_token [String?] OAuth 2.0 token for the current user.
    # @optional @param pretty_print [Bool?] Returns response with indentations and line breaks.
    # @optional @param quota_user [String?] An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
    # @optional @param upload_type [String?] Upload protocol for media (e.g. \"media\", \"multipart\", \"resumable\").
    # @optional @param user_ip [String?] Deprecated. Please use quotaUser instead.
    # @optional @param destination_kms_key_name [String?] Resource name of the Cloud KMS key, of the form projects/my-project/locations/global/keyRings/my-kr/cryptoKeys/my-key, that will be used to encrypt the object. Overrides the object metadata's kms_key_name value, if any.
    # @optional @param destination_predefined_acl [String?] Apply a predefined set of access controls to the destination object.
    # @optional @param if_generation_match [String?] Makes the operation conditional on whether the destination object's current generation matches the given value. Setting to 0 makes the operation succeed only if there are no live versions of the object.
    # @optional @param if_generation_not_match [String?] Makes the operation conditional on whether the destination object's current generation does not match the given value. If no live object exists, the precondition fails. Setting to 0 makes the operation succeed only if there is a live version of the object.
    # @optional @param if_metageneration_match [String?] Makes the operation conditional on whether the destination object's current metageneration matches the given value.
    # @optional @param if_metageneration_not_match [String?] Makes the operation conditional on whether the destination object's current metageneration does not match the given value.
    # @optional @param if_source_generation_match [String?] Makes the operation conditional on whether the source object's current generation matches the given value.
    # @optional @param if_source_generation_not_match [String?] Makes the operation conditional on whether the source object's current generation does not match the given value.
    # @optional @param if_source_metageneration_match [String?] Makes the operation conditional on whether the source object's current metageneration matches the given value.
    # @optional @param if_source_metageneration_not_match [String?] Makes the operation conditional on whether the source object's current metageneration does not match the given value.
    # @optional @param projection [String?] Set of properties to return. Defaults to noAcl, unless the object resource specifies the acl property, when it defaults to full.
    # @optional @param source_generation [String?] If present, selects a specific revision of the source object (as opposed to the latest version, the default).
    # @optional @param user_project [String?] The project to be billed for this request. Required for Requester Pays buckets.
    # @optional @param object [GoogleCloudStorage::Object?]
    # @return [GoogleCloudStorage::Object]
    def copy(
      *,
      source_bucket : String? = nil,
      source_object : String? = nil,
      destination_bucket : String? = nil,
      destination_object : String? = nil,
      alt : String? = nil,
      fields : String? = nil,
      key : String? = nil,
      oauth_token : String? = nil,
      pretty_print : Bool? = nil,
      quota_user : String? = nil,
      upload_type : String? = nil,
      user_ip : String? = nil,
      destination_kms_key_name : String? = nil,
      destination_predefined_acl : String? = nil,
      if_generation_match : String? = nil,
      if_generation_not_match : String? = nil,
      if_metageneration_match : String? = nil,
      if_metageneration_not_match : String? = nil,
      if_source_generation_match : String? = nil,
      if_source_generation_not_match : String? = nil,
      if_source_metageneration_match : String? = nil,
      if_source_metageneration_not_match : String? = nil,
      projection : String? = nil,
      source_generation : String? = nil,
      user_project : String? = nil,
      object : GoogleCloudStorage::Object? = nil
    ) : GoogleCloudStorage::Object
      data, _status_code, _headers = copy_with_http_info(source_bucket: source_bucket, source_object: source_object, destination_bucket: destination_bucket, destination_object: destination_object, alt: alt, fields: fields, key: key, oauth_token: oauth_token, pretty_print: pretty_print, quota_user: quota_user, upload_type: upload_type, user_ip: user_ip, destination_kms_key_name: destination_kms_key_name, destination_predefined_acl: destination_predefined_acl, if_generation_match: if_generation_match, if_generation_not_match: if_generation_not_match, if_metageneration_match: if_metageneration_match, if_metageneration_not_match: if_metageneration_not_match, if_source_generation_match: if_source_generation_match, if_source_generation_not_match: if_source_generation_not_match, if_source_metageneration_match: if_source_metageneration_match, if_source_metageneration_not_match: if_source_metageneration_not_match, projection: projection, source_generation: source_generation, user_project: user_project, object: object)
      data
    end

    # Copies a source object to a destination object. Optionally overrides metadata.
    # @required @param source_bucket [String?] Name of the bucket in which to find the source object.
    # @required @param source_object [String?] Name of the source object. For information about how to URL encode object names to be path safe, see Encoding URI Path Parts.
    # @required @param destination_bucket [String?] Name of the bucket in which to store the new object. Overrides the provided object metadata's bucket value, if any.For information about how to URL encode object names to be path safe, see Encoding URI Path Parts.
    # @required @param destination_object [String?] Name of the new object. Required when the object metadata is not otherwise provided. Overrides the object metadata's name value, if any.
    # @optional @param alt [String?] Data format for the response.
    # @optional @param fields [String?] Selector specifying which fields to include in a partial response.
    # @optional @param key [String?] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    # @optional @param oauth_token [String?] OAuth 2.0 token for the current user.
    # @optional @param pretty_print [Bool?] Returns response with indentations and line breaks.
    # @optional @param quota_user [String?] An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
    # @optional @param upload_type [String?] Upload protocol for media (e.g. \"media\", \"multipart\", \"resumable\").
    # @optional @param user_ip [String?] Deprecated. Please use quotaUser instead.
    # @optional @param destination_kms_key_name [String?] Resource name of the Cloud KMS key, of the form projects/my-project/locations/global/keyRings/my-kr/cryptoKeys/my-key, that will be used to encrypt the object. Overrides the object metadata's kms_key_name value, if any.
    # @optional @param destination_predefined_acl [String?] Apply a predefined set of access controls to the destination object.
    # @optional @param if_generation_match [String?] Makes the operation conditional on whether the destination object's current generation matches the given value. Setting to 0 makes the operation succeed only if there are no live versions of the object.
    # @optional @param if_generation_not_match [String?] Makes the operation conditional on whether the destination object's current generation does not match the given value. If no live object exists, the precondition fails. Setting to 0 makes the operation succeed only if there is a live version of the object.
    # @optional @param if_metageneration_match [String?] Makes the operation conditional on whether the destination object's current metageneration matches the given value.
    # @optional @param if_metageneration_not_match [String?] Makes the operation conditional on whether the destination object's current metageneration does not match the given value.
    # @optional @param if_source_generation_match [String?] Makes the operation conditional on whether the source object's current generation matches the given value.
    # @optional @param if_source_generation_not_match [String?] Makes the operation conditional on whether the source object's current generation does not match the given value.
    # @optional @param if_source_metageneration_match [String?] Makes the operation conditional on whether the source object's current metageneration matches the given value.
    # @optional @param if_source_metageneration_not_match [String?] Makes the operation conditional on whether the source object's current metageneration does not match the given value.
    # @optional @param projection [String?] Set of properties to return. Defaults to noAcl, unless the object resource specifies the acl property, when it defaults to full.
    # @optional @param source_generation [String?] If present, selects a specific revision of the source object (as opposed to the latest version, the default).
    # @optional @param user_project [String?] The project to be billed for this request. Required for Requester Pays buckets.
    # @optional @param object [GoogleCloudStorage::Object?]
    # @return [Tuple(GoogleCloudStorage::Object, Integer, Hash)] GoogleCloudStorage::Object, response status code and response headers
    def copy_with_http_info(
      *,
      source_bucket : String? = nil,
      source_object : String? = nil,
      destination_bucket : String? = nil,
      destination_object : String? = nil,
      alt : String? = nil,
      fields : String? = nil,
      key : String? = nil,
      oauth_token : String? = nil,
      pretty_print : Bool? = nil,
      quota_user : String? = nil,
      upload_type : String? = nil,
      user_ip : String? = nil,
      destination_kms_key_name : String? = nil,
      destination_predefined_acl : String? = nil,
      if_generation_match : String? = nil,
      if_generation_not_match : String? = nil,
      if_metageneration_match : String? = nil,
      if_metageneration_not_match : String? = nil,
      if_source_generation_match : String? = nil,
      if_source_generation_not_match : String? = nil,
      if_source_metageneration_match : String? = nil,
      if_source_metageneration_not_match : String? = nil,
      projection : String? = nil,
      source_generation : String? = nil,
      user_project : String? = nil,
      object : GoogleCloudStorage::Object? = nil
    ) : Tuple(GoogleCloudStorage::Object, Int32, Hash(String, Array(String) | String))
      request = build_api_request_for_copy(source_bucket: source_bucket, source_object: source_object, destination_bucket: destination_bucket, destination_object: destination_object, alt: alt, fields: fields, key: key, oauth_token: oauth_token, pretty_print: pretty_print, quota_user: quota_user, upload_type: upload_type, user_ip: user_ip, destination_kms_key_name: destination_kms_key_name, destination_predefined_acl: destination_predefined_acl, if_generation_match: if_generation_match, if_generation_not_match: if_generation_not_match, if_metageneration_match: if_metageneration_match, if_metageneration_not_match: if_metageneration_not_match, if_source_generation_match: if_source_generation_match, if_source_generation_not_match: if_source_generation_not_match, if_source_metageneration_match: if_source_metageneration_match, if_source_metageneration_not_match: if_source_metageneration_not_match, projection: projection, source_generation: source_generation, user_project: user_project, object: object)

      body, status_code, headers = @api_client.execute_api_request(request)

      if debugging?
        Log.debug { "API called: ObjectsApi#copy\nBody: #{body.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      Tuple.new(GoogleCloudStorage::Object.from_json(body), status_code, headers)
    end

    # Copies a source object to a destination object. Optionally overrides metadata.
    # @required @param source_bucket [String?] Name of the bucket in which to find the source object.
    # @required @param source_object [String?] Name of the source object. For information about how to URL encode object names to be path safe, see Encoding URI Path Parts.
    # @required @param destination_bucket [String?] Name of the bucket in which to store the new object. Overrides the provided object metadata's bucket value, if any.For information about how to URL encode object names to be path safe, see Encoding URI Path Parts.
    # @required @param destination_object [String?] Name of the new object. Required when the object metadata is not otherwise provided. Overrides the object metadata's name value, if any.
    # @optional @param alt [String?] Data format for the response.
    # @optional @param fields [String?] Selector specifying which fields to include in a partial response.
    # @optional @param key [String?] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    # @optional @param oauth_token [String?] OAuth 2.0 token for the current user.
    # @optional @param pretty_print [Bool?] Returns response with indentations and line breaks.
    # @optional @param quota_user [String?] An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
    # @optional @param upload_type [String?] Upload protocol for media (e.g. \"media\", \"multipart\", \"resumable\").
    # @optional @param user_ip [String?] Deprecated. Please use quotaUser instead.
    # @optional @param destination_kms_key_name [String?] Resource name of the Cloud KMS key, of the form projects/my-project/locations/global/keyRings/my-kr/cryptoKeys/my-key, that will be used to encrypt the object. Overrides the object metadata's kms_key_name value, if any.
    # @optional @param destination_predefined_acl [String?] Apply a predefined set of access controls to the destination object.
    # @optional @param if_generation_match [String?] Makes the operation conditional on whether the destination object's current generation matches the given value. Setting to 0 makes the operation succeed only if there are no live versions of the object.
    # @optional @param if_generation_not_match [String?] Makes the operation conditional on whether the destination object's current generation does not match the given value. If no live object exists, the precondition fails. Setting to 0 makes the operation succeed only if there is a live version of the object.
    # @optional @param if_metageneration_match [String?] Makes the operation conditional on whether the destination object's current metageneration matches the given value.
    # @optional @param if_metageneration_not_match [String?] Makes the operation conditional on whether the destination object's current metageneration does not match the given value.
    # @optional @param if_source_generation_match [String?] Makes the operation conditional on whether the source object's current generation matches the given value.
    # @optional @param if_source_generation_not_match [String?] Makes the operation conditional on whether the source object's current generation does not match the given value.
    # @optional @param if_source_metageneration_match [String?] Makes the operation conditional on whether the source object's current metageneration matches the given value.
    # @optional @param if_source_metageneration_not_match [String?] Makes the operation conditional on whether the source object's current metageneration does not match the given value.
    # @optional @param projection [String?] Set of properties to return. Defaults to noAcl, unless the object resource specifies the acl property, when it defaults to full.
    # @optional @param source_generation [String?] If present, selects a specific revision of the source object (as opposed to the latest version, the default).
    # @optional @param user_project [String?] The project to be billed for this request. Required for Requester Pays buckets.
    # @optional @param object [GoogleCloudStorage::Object?]
    # @return nil
    def copy(
      *,
      source_bucket : String? = nil,
      source_object : String? = nil,
      destination_bucket : String? = nil,
      destination_object : String? = nil,
      alt : String? = nil,
      fields : String? = nil,
      key : String? = nil,
      oauth_token : String? = nil,
      pretty_print : Bool? = nil,
      quota_user : String? = nil,
      upload_type : String? = nil,
      user_ip : String? = nil,
      destination_kms_key_name : String? = nil,
      destination_predefined_acl : String? = nil,
      if_generation_match : String? = nil,
      if_generation_not_match : String? = nil,
      if_metageneration_match : String? = nil,
      if_metageneration_not_match : String? = nil,
      if_source_generation_match : String? = nil,
      if_source_generation_not_match : String? = nil,
      if_source_metageneration_match : String? = nil,
      if_source_metageneration_not_match : String? = nil,
      projection : String? = nil,
      source_generation : String? = nil,
      user_project : String? = nil,
      object : GoogleCloudStorage::Object? = nil,
      &block : Crest::Response ->
    ) : Nil
      build_api_request_for_copy(source_bucket: source_bucket, source_object: source_object, destination_bucket: destination_bucket, destination_object: destination_object, alt: alt, fields: fields, key: key, oauth_token: oauth_token, pretty_print: pretty_print, quota_user: quota_user, upload_type: upload_type, user_ip: user_ip, destination_kms_key_name: destination_kms_key_name, destination_predefined_acl: destination_predefined_acl, if_generation_match: if_generation_match, if_generation_not_match: if_generation_not_match, if_metageneration_match: if_metageneration_match, if_metageneration_not_match: if_metageneration_not_match, if_source_generation_match: if_source_generation_match, if_source_generation_not_match: if_source_generation_not_match, if_source_metageneration_match: if_source_metageneration_match, if_source_metageneration_not_match: if_source_metageneration_not_match, projection: projection, source_generation: source_generation, user_project: user_project, object: object).execute(&block)
    end

    STORAGE_OBJECTS_COPY_VALID_VALUES_FOR_ALT                        = String.static_array("json", "media")
    STORAGE_OBJECTS_COPY_VALID_VALUES_FOR_DESTINATION_PREDEFINED_ACL = String.static_array("authenticatedRead", "bucketOwnerFullControl", "bucketOwnerRead", "private", "projectPrivate", "publicRead")
    STORAGE_OBJECTS_COPY_VALID_VALUES_FOR_PROJECTION                 = String.static_array("full", "noAcl")

    # @return Crest::Request
    def build_api_request_for_copy(
      *,
      source_bucket : String? = nil,
      source_object : String? = nil,
      destination_bucket : String? = nil,
      destination_object : String? = nil,
      alt : String? = nil,
      fields : String? = nil,
      key : String? = nil,
      oauth_token : String? = nil,
      pretty_print : Bool? = nil,
      quota_user : String? = nil,
      upload_type : String? = nil,
      user_ip : String? = nil,
      destination_kms_key_name : String? = nil,
      destination_predefined_acl : String? = nil,
      if_generation_match : String? = nil,
      if_generation_not_match : String? = nil,
      if_metageneration_match : String? = nil,
      if_metageneration_not_match : String? = nil,
      if_source_generation_match : String? = nil,
      if_source_generation_not_match : String? = nil,
      if_source_metageneration_match : String? = nil,
      if_source_metageneration_not_match : String? = nil,
      projection : String? = nil,
      source_generation : String? = nil,
      user_project : String? = nil,
      object : GoogleCloudStorage::Object? = nil
    ) : Crest::Request
      if debugging?
        Log.debug { "Calling API: ObjectsApi.copy ..." }
      end

      if client_side_validation?
        raise ArgumentError.new("\"source_bucket\" is required and cannot be null") if source_bucket.nil?
        unless (_source_bucket = source_bucket).nil?
        end
        raise ArgumentError.new("\"source_object\" is required and cannot be null") if source_object.nil?
        unless (_source_object = source_object).nil?
        end
        raise ArgumentError.new("\"destination_bucket\" is required and cannot be null") if destination_bucket.nil?
        unless (_destination_bucket = destination_bucket).nil?
        end
        raise ArgumentError.new("\"destination_object\" is required and cannot be null") if destination_object.nil?
        unless (_destination_object = destination_object).nil?
        end
        unless (_alt = alt).nil?
          OpenApi::EnumValidator.validate("alt", _alt, STORAGE_OBJECTS_COPY_VALID_VALUES_FOR_ALT)
        end
        unless (_fields = fields).nil?
        end
        unless (_key = key).nil?
        end
        unless (_oauth_token = oauth_token).nil?
        end
        unless (_pretty_print = pretty_print).nil?
        end
        unless (_quota_user = quota_user).nil?
        end
        unless (_upload_type = upload_type).nil?
        end
        unless (_user_ip = user_ip).nil?
        end
        unless (_destination_kms_key_name = destination_kms_key_name).nil?
        end
        unless (_destination_predefined_acl = destination_predefined_acl).nil?
          OpenApi::EnumValidator.validate("destination_predefined_acl", _destination_predefined_acl, STORAGE_OBJECTS_COPY_VALID_VALUES_FOR_DESTINATION_PREDEFINED_ACL)
        end
        unless (_if_generation_match = if_generation_match).nil?
        end
        unless (_if_generation_not_match = if_generation_not_match).nil?
        end
        unless (_if_metageneration_match = if_metageneration_match).nil?
        end
        unless (_if_metageneration_not_match = if_metageneration_not_match).nil?
        end
        unless (_if_source_generation_match = if_source_generation_match).nil?
        end
        unless (_if_source_generation_not_match = if_source_generation_not_match).nil?
        end
        unless (_if_source_metageneration_match = if_source_metageneration_match).nil?
        end
        unless (_if_source_metageneration_not_match = if_source_metageneration_not_match).nil?
        end
        unless (_projection = projection).nil?
          OpenApi::EnumValidator.validate("projection", _projection, STORAGE_OBJECTS_COPY_VALID_VALUES_FOR_PROJECTION)
        end
        unless (_source_generation = source_generation).nil?
        end
        unless (_user_project = user_project).nil?
        end
        unless (_object = object).nil?
          _object.validate if _object.is_a?(OpenApi::Validatable)
        end
      end

      # resource path
      local_var_path = "/storage/v1/b/{sourceBucket}/o/{sourceObject}/copyTo/b/{destinationBucket}/o/{destinationObject}".sub("{" + "sourceBucket" + "}", URI.encode_path(source_bucket.to_s)).sub("{" + "sourceObject" + "}", URI.encode_path(source_object.to_s)).sub("{" + "destinationBucket" + "}", URI.encode_path(destination_bucket.to_s)).sub("{" + "destinationObject" + "}", URI.encode_path(destination_object.to_s))

      # header parameters
      header_params : Hash(String, String) = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])
      # HTTP header "Content-Type"
      header_params["Content-Type"] = @api_client.select_header_content_type(["application/json"])

      # cookie parameters
      cookie_params : Hash(String, String) = Hash(String, String).new

      # query parameters
      query_params : Hash(String, (String | Array(String) | JSON::Any)) = Hash(String, (String | Array(String) | JSON::Any)).new
      query_params["alt"] = alt.to_s if !alt.nil?
      query_params["fields"] = fields.to_s if !fields.nil?
      query_params["key"] = key.to_s if !key.nil?
      query_params["oauth_token"] = oauth_token.to_s if !oauth_token.nil?
      query_params["prettyPrint"] = pretty_print.to_s if !pretty_print.nil?
      query_params["quotaUser"] = quota_user.to_s if !quota_user.nil?
      query_params["uploadType"] = upload_type.to_s if !upload_type.nil?
      query_params["userIp"] = user_ip.to_s if !user_ip.nil?
      query_params["destinationKmsKeyName"] = destination_kms_key_name.to_s if !destination_kms_key_name.nil?
      query_params["destinationPredefinedAcl"] = destination_predefined_acl.to_s if !destination_predefined_acl.nil?
      query_params["ifGenerationMatch"] = if_generation_match.to_s if !if_generation_match.nil?
      query_params["ifGenerationNotMatch"] = if_generation_not_match.to_s if !if_generation_not_match.nil?
      query_params["ifMetagenerationMatch"] = if_metageneration_match.to_s if !if_metageneration_match.nil?
      query_params["ifMetagenerationNotMatch"] = if_metageneration_not_match.to_s if !if_metageneration_not_match.nil?
      query_params["ifSourceGenerationMatch"] = if_source_generation_match.to_s if !if_source_generation_match.nil?
      query_params["ifSourceGenerationNotMatch"] = if_source_generation_not_match.to_s if !if_source_generation_not_match.nil?
      query_params["ifSourceMetagenerationMatch"] = if_source_metageneration_match.to_s if !if_source_metageneration_match.nil?
      query_params["ifSourceMetagenerationNotMatch"] = if_source_metageneration_not_match.to_s if !if_source_metageneration_not_match.nil?
      query_params["projection"] = projection.to_s if !projection.nil?
      query_params["sourceGeneration"] = source_generation.to_s if !source_generation.nil?
      query_params["userProject"] = user_project.to_s if !user_project.nil?

      # form parameters
      form_params : Array(Tuple(String, Crest::ParamsValue)) | Nil = nil

      # http body (model)
      post_body : IO | String | Nil = @api_client.encode(body: object, content_type: header_params["Content-Type"]?) if !object.nil?

      # auth_names
      auth_names = ["Oauth2c", "Oauth2"]

      @api_client.build_api_request(
        http_method: :"POST",
        path: local_var_path,
        operation: "ObjectsApi.storage_objects_copy",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        cookie_params: cookie_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    # Deletes an object and its metadata. Deletions are permanent if versioning is not enabled for the bucket, or if the generation parameter is used.
    # @required @param bucket [String?] Name of the bucket in which the object resides.
    # @required @param object [String?] Name of the object. For information about how to URL encode object names to be path safe, see Encoding URI Path Parts.
    # @optional @param alt [String?] Data format for the response.
    # @optional @param fields [String?] Selector specifying which fields to include in a partial response.
    # @optional @param key [String?] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    # @optional @param oauth_token [String?] OAuth 2.0 token for the current user.
    # @optional @param pretty_print [Bool?] Returns response with indentations and line breaks.
    # @optional @param quota_user [String?] An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
    # @optional @param upload_type [String?] Upload protocol for media (e.g. \"media\", \"multipart\", \"resumable\").
    # @optional @param user_ip [String?] Deprecated. Please use quotaUser instead.
    # @optional @param generation [String?] If present, permanently deletes a specific revision of this object (as opposed to the latest version, the default).
    # @optional @param if_generation_match [String?] Makes the operation conditional on whether the object's current generation matches the given value. Setting to 0 makes the operation succeed only if there are no live versions of the object.
    # @optional @param if_generation_not_match [String?] Makes the operation conditional on whether the object's current generation does not match the given value. If no live object exists, the precondition fails. Setting to 0 makes the operation succeed only if there is a live version of the object.
    # @optional @param if_metageneration_match [String?] Makes the operation conditional on whether the object's current metageneration matches the given value.
    # @optional @param if_metageneration_not_match [String?] Makes the operation conditional on whether the object's current metageneration does not match the given value.
    # @optional @param user_project [String?] The project to be billed for this request. Required for Requester Pays buckets.
    # @return [Nil]
    def delete(
      *,
      bucket : String? = nil,
      object : String? = nil,
      alt : String? = nil,
      fields : String? = nil,
      key : String? = nil,
      oauth_token : String? = nil,
      pretty_print : Bool? = nil,
      quota_user : String? = nil,
      upload_type : String? = nil,
      user_ip : String? = nil,
      generation : String? = nil,
      if_generation_match : String? = nil,
      if_generation_not_match : String? = nil,
      if_metageneration_match : String? = nil,
      if_metageneration_not_match : String? = nil,
      user_project : String? = nil
    ) : Nil
      delete_with_http_info(bucket: bucket, object: object, alt: alt, fields: fields, key: key, oauth_token: oauth_token, pretty_print: pretty_print, quota_user: quota_user, upload_type: upload_type, user_ip: user_ip, generation: generation, if_generation_match: if_generation_match, if_generation_not_match: if_generation_not_match, if_metageneration_match: if_metageneration_match, if_metageneration_not_match: if_metageneration_not_match, user_project: user_project)
      nil
    end

    # Deletes an object and its metadata. Deletions are permanent if versioning is not enabled for the bucket, or if the generation parameter is used.
    # @required @param bucket [String?] Name of the bucket in which the object resides.
    # @required @param object [String?] Name of the object. For information about how to URL encode object names to be path safe, see Encoding URI Path Parts.
    # @optional @param alt [String?] Data format for the response.
    # @optional @param fields [String?] Selector specifying which fields to include in a partial response.
    # @optional @param key [String?] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    # @optional @param oauth_token [String?] OAuth 2.0 token for the current user.
    # @optional @param pretty_print [Bool?] Returns response with indentations and line breaks.
    # @optional @param quota_user [String?] An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
    # @optional @param upload_type [String?] Upload protocol for media (e.g. \"media\", \"multipart\", \"resumable\").
    # @optional @param user_ip [String?] Deprecated. Please use quotaUser instead.
    # @optional @param generation [String?] If present, permanently deletes a specific revision of this object (as opposed to the latest version, the default).
    # @optional @param if_generation_match [String?] Makes the operation conditional on whether the object's current generation matches the given value. Setting to 0 makes the operation succeed only if there are no live versions of the object.
    # @optional @param if_generation_not_match [String?] Makes the operation conditional on whether the object's current generation does not match the given value. If no live object exists, the precondition fails. Setting to 0 makes the operation succeed only if there is a live version of the object.
    # @optional @param if_metageneration_match [String?] Makes the operation conditional on whether the object's current metageneration matches the given value.
    # @optional @param if_metageneration_not_match [String?] Makes the operation conditional on whether the object's current metageneration does not match the given value.
    # @optional @param user_project [String?] The project to be billed for this request. Required for Requester Pays buckets.
    # @return [Tuple(Nil, Integer, Hash)] Nil, response status code and response headers
    def delete_with_http_info(
      *,
      bucket : String? = nil,
      object : String? = nil,
      alt : String? = nil,
      fields : String? = nil,
      key : String? = nil,
      oauth_token : String? = nil,
      pretty_print : Bool? = nil,
      quota_user : String? = nil,
      upload_type : String? = nil,
      user_ip : String? = nil,
      generation : String? = nil,
      if_generation_match : String? = nil,
      if_generation_not_match : String? = nil,
      if_metageneration_match : String? = nil,
      if_metageneration_not_match : String? = nil,
      user_project : String? = nil
    ) : Tuple(Nil, Int32, Hash(String, Array(String) | String))
      request = build_api_request_for_delete(bucket: bucket, object: object, alt: alt, fields: fields, key: key, oauth_token: oauth_token, pretty_print: pretty_print, quota_user: quota_user, upload_type: upload_type, user_ip: user_ip, generation: generation, if_generation_match: if_generation_match, if_generation_not_match: if_generation_not_match, if_metageneration_match: if_metageneration_match, if_metageneration_not_match: if_metageneration_not_match, user_project: user_project)

      body, status_code, headers = @api_client.execute_api_request(request)

      if debugging?
        Log.debug { "API called: ObjectsApi#delete\nBody: #{body.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      Tuple.new(nil, status_code, headers)
    end

    # Deletes an object and its metadata. Deletions are permanent if versioning is not enabled for the bucket, or if the generation parameter is used.
    # @required @param bucket [String?] Name of the bucket in which the object resides.
    # @required @param object [String?] Name of the object. For information about how to URL encode object names to be path safe, see Encoding URI Path Parts.
    # @optional @param alt [String?] Data format for the response.
    # @optional @param fields [String?] Selector specifying which fields to include in a partial response.
    # @optional @param key [String?] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    # @optional @param oauth_token [String?] OAuth 2.0 token for the current user.
    # @optional @param pretty_print [Bool?] Returns response with indentations and line breaks.
    # @optional @param quota_user [String?] An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
    # @optional @param upload_type [String?] Upload protocol for media (e.g. \"media\", \"multipart\", \"resumable\").
    # @optional @param user_ip [String?] Deprecated. Please use quotaUser instead.
    # @optional @param generation [String?] If present, permanently deletes a specific revision of this object (as opposed to the latest version, the default).
    # @optional @param if_generation_match [String?] Makes the operation conditional on whether the object's current generation matches the given value. Setting to 0 makes the operation succeed only if there are no live versions of the object.
    # @optional @param if_generation_not_match [String?] Makes the operation conditional on whether the object's current generation does not match the given value. If no live object exists, the precondition fails. Setting to 0 makes the operation succeed only if there is a live version of the object.
    # @optional @param if_metageneration_match [String?] Makes the operation conditional on whether the object's current metageneration matches the given value.
    # @optional @param if_metageneration_not_match [String?] Makes the operation conditional on whether the object's current metageneration does not match the given value.
    # @optional @param user_project [String?] The project to be billed for this request. Required for Requester Pays buckets.
    # @return nil
    def delete(
      *,
      bucket : String? = nil,
      object : String? = nil,
      alt : String? = nil,
      fields : String? = nil,
      key : String? = nil,
      oauth_token : String? = nil,
      pretty_print : Bool? = nil,
      quota_user : String? = nil,
      upload_type : String? = nil,
      user_ip : String? = nil,
      generation : String? = nil,
      if_generation_match : String? = nil,
      if_generation_not_match : String? = nil,
      if_metageneration_match : String? = nil,
      if_metageneration_not_match : String? = nil,
      user_project : String? = nil,
      &block : Crest::Response ->
    ) : Nil
      build_api_request_for_delete(bucket: bucket, object: object, alt: alt, fields: fields, key: key, oauth_token: oauth_token, pretty_print: pretty_print, quota_user: quota_user, upload_type: upload_type, user_ip: user_ip, generation: generation, if_generation_match: if_generation_match, if_generation_not_match: if_generation_not_match, if_metageneration_match: if_metageneration_match, if_metageneration_not_match: if_metageneration_not_match, user_project: user_project).execute(&block)
    end

    STORAGE_OBJECTS_DELETE_VALID_VALUES_FOR_ALT = String.static_array("json", "media")

    # @return Crest::Request
    def build_api_request_for_delete(
      *,
      bucket : String? = nil,
      object : String? = nil,
      alt : String? = nil,
      fields : String? = nil,
      key : String? = nil,
      oauth_token : String? = nil,
      pretty_print : Bool? = nil,
      quota_user : String? = nil,
      upload_type : String? = nil,
      user_ip : String? = nil,
      generation : String? = nil,
      if_generation_match : String? = nil,
      if_generation_not_match : String? = nil,
      if_metageneration_match : String? = nil,
      if_metageneration_not_match : String? = nil,
      user_project : String? = nil
    ) : Crest::Request
      if debugging?
        Log.debug { "Calling API: ObjectsApi.delete ..." }
      end

      if client_side_validation?
        raise ArgumentError.new("\"bucket\" is required and cannot be null") if bucket.nil?
        unless (_bucket = bucket).nil?
        end
        raise ArgumentError.new("\"object\" is required and cannot be null") if object.nil?
        unless (_object = object).nil?
        end
        unless (_alt = alt).nil?
          OpenApi::EnumValidator.validate("alt", _alt, STORAGE_OBJECTS_DELETE_VALID_VALUES_FOR_ALT)
        end
        unless (_fields = fields).nil?
        end
        unless (_key = key).nil?
        end
        unless (_oauth_token = oauth_token).nil?
        end
        unless (_pretty_print = pretty_print).nil?
        end
        unless (_quota_user = quota_user).nil?
        end
        unless (_upload_type = upload_type).nil?
        end
        unless (_user_ip = user_ip).nil?
        end
        unless (_generation = generation).nil?
        end
        unless (_if_generation_match = if_generation_match).nil?
        end
        unless (_if_generation_not_match = if_generation_not_match).nil?
        end
        unless (_if_metageneration_match = if_metageneration_match).nil?
        end
        unless (_if_metageneration_not_match = if_metageneration_not_match).nil?
        end
        unless (_user_project = user_project).nil?
        end
      end

      # resource path
      local_var_path = "/storage/v1/b/{bucket}/o/{object}".sub("{" + "bucket" + "}", URI.encode_path(bucket.to_s)).sub("{" + "object" + "}", URI.encode_path(object.to_s))

      # header parameters
      header_params : Hash(String, String) = Hash(String, String).new

      # cookie parameters
      cookie_params : Hash(String, String) = Hash(String, String).new

      # query parameters
      query_params : Hash(String, (String | Array(String) | JSON::Any)) = Hash(String, (String | Array(String) | JSON::Any)).new
      query_params["alt"] = alt.to_s if !alt.nil?
      query_params["fields"] = fields.to_s if !fields.nil?
      query_params["key"] = key.to_s if !key.nil?
      query_params["oauth_token"] = oauth_token.to_s if !oauth_token.nil?
      query_params["prettyPrint"] = pretty_print.to_s if !pretty_print.nil?
      query_params["quotaUser"] = quota_user.to_s if !quota_user.nil?
      query_params["uploadType"] = upload_type.to_s if !upload_type.nil?
      query_params["userIp"] = user_ip.to_s if !user_ip.nil?
      query_params["generation"] = generation.to_s if !generation.nil?
      query_params["ifGenerationMatch"] = if_generation_match.to_s if !if_generation_match.nil?
      query_params["ifGenerationNotMatch"] = if_generation_not_match.to_s if !if_generation_not_match.nil?
      query_params["ifMetagenerationMatch"] = if_metageneration_match.to_s if !if_metageneration_match.nil?
      query_params["ifMetagenerationNotMatch"] = if_metageneration_not_match.to_s if !if_metageneration_not_match.nil?
      query_params["userProject"] = user_project.to_s if !user_project.nil?

      # form parameters
      form_params : Array(Tuple(String, Crest::ParamsValue)) | Nil = nil

      # http body (model)
      post_body : IO | String | Nil = nil

      # auth_names
      auth_names = ["Oauth2c", "Oauth2"]

      @api_client.build_api_request(
        http_method: :"DELETE",
        path: local_var_path,
        operation: "ObjectsApi.storage_objects_delete",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        cookie_params: cookie_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    # Retrieves an object or its metadata.
    # @required @param bucket [String?] Name of the bucket in which the object resides.
    # @required @param object [String?] Name of the object. For information about how to URL encode object names to be path safe, see Encoding URI Path Parts.
    # @optional @param alt [String?] Data format for the response.
    # @optional @param fields [String?] Selector specifying which fields to include in a partial response.
    # @optional @param key [String?] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    # @optional @param oauth_token [String?] OAuth 2.0 token for the current user.
    # @optional @param pretty_print [Bool?] Returns response with indentations and line breaks.
    # @optional @param quota_user [String?] An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
    # @optional @param upload_type [String?] Upload protocol for media (e.g. \"media\", \"multipart\", \"resumable\").
    # @optional @param user_ip [String?] Deprecated. Please use quotaUser instead.
    # @optional @param generation [String?] If present, selects a specific revision of this object (as opposed to the latest version, the default).
    # @optional @param if_generation_match [String?] Makes the operation conditional on whether the object's current generation matches the given value. Setting to 0 makes the operation succeed only if there are no live versions of the object.
    # @optional @param if_generation_not_match [String?] Makes the operation conditional on whether the object's current generation does not match the given value. If no live object exists, the precondition fails. Setting to 0 makes the operation succeed only if there is a live version of the object.
    # @optional @param if_metageneration_match [String?] Makes the operation conditional on whether the object's current metageneration matches the given value.
    # @optional @param if_metageneration_not_match [String?] Makes the operation conditional on whether the object's current metageneration does not match the given value.
    # @optional @param projection [String?] Set of properties to return. Defaults to noAcl.
    # @optional @param user_project [String?] The project to be billed for this request. Required for Requester Pays buckets.
    # @return [GoogleCloudStorage::Object]
    def get(
      *,
      bucket : String? = nil,
      object : String? = nil,
      alt : String? = nil,
      fields : String? = nil,
      key : String? = nil,
      oauth_token : String? = nil,
      pretty_print : Bool? = nil,
      quota_user : String? = nil,
      upload_type : String? = nil,
      user_ip : String? = nil,
      generation : String? = nil,
      if_generation_match : String? = nil,
      if_generation_not_match : String? = nil,
      if_metageneration_match : String? = nil,
      if_metageneration_not_match : String? = nil,
      projection : String? = nil,
      user_project : String? = nil
    ) : GoogleCloudStorage::Object
      data, _status_code, _headers = get_with_http_info(bucket: bucket, object: object, alt: alt, fields: fields, key: key, oauth_token: oauth_token, pretty_print: pretty_print, quota_user: quota_user, upload_type: upload_type, user_ip: user_ip, generation: generation, if_generation_match: if_generation_match, if_generation_not_match: if_generation_not_match, if_metageneration_match: if_metageneration_match, if_metageneration_not_match: if_metageneration_not_match, projection: projection, user_project: user_project)
      data
    end

    # Retrieves an object or its metadata.
    # @required @param bucket [String?] Name of the bucket in which the object resides.
    # @required @param object [String?] Name of the object. For information about how to URL encode object names to be path safe, see Encoding URI Path Parts.
    # @optional @param alt [String?] Data format for the response.
    # @optional @param fields [String?] Selector specifying which fields to include in a partial response.
    # @optional @param key [String?] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    # @optional @param oauth_token [String?] OAuth 2.0 token for the current user.
    # @optional @param pretty_print [Bool?] Returns response with indentations and line breaks.
    # @optional @param quota_user [String?] An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
    # @optional @param upload_type [String?] Upload protocol for media (e.g. \"media\", \"multipart\", \"resumable\").
    # @optional @param user_ip [String?] Deprecated. Please use quotaUser instead.
    # @optional @param generation [String?] If present, selects a specific revision of this object (as opposed to the latest version, the default).
    # @optional @param if_generation_match [String?] Makes the operation conditional on whether the object's current generation matches the given value. Setting to 0 makes the operation succeed only if there are no live versions of the object.
    # @optional @param if_generation_not_match [String?] Makes the operation conditional on whether the object's current generation does not match the given value. If no live object exists, the precondition fails. Setting to 0 makes the operation succeed only if there is a live version of the object.
    # @optional @param if_metageneration_match [String?] Makes the operation conditional on whether the object's current metageneration matches the given value.
    # @optional @param if_metageneration_not_match [String?] Makes the operation conditional on whether the object's current metageneration does not match the given value.
    # @optional @param projection [String?] Set of properties to return. Defaults to noAcl.
    # @optional @param user_project [String?] The project to be billed for this request. Required for Requester Pays buckets.
    # @return [Tuple(GoogleCloudStorage::Object, Integer, Hash)] GoogleCloudStorage::Object, response status code and response headers
    def get_with_http_info(
      *,
      bucket : String? = nil,
      object : String? = nil,
      alt : String? = nil,
      fields : String? = nil,
      key : String? = nil,
      oauth_token : String? = nil,
      pretty_print : Bool? = nil,
      quota_user : String? = nil,
      upload_type : String? = nil,
      user_ip : String? = nil,
      generation : String? = nil,
      if_generation_match : String? = nil,
      if_generation_not_match : String? = nil,
      if_metageneration_match : String? = nil,
      if_metageneration_not_match : String? = nil,
      projection : String? = nil,
      user_project : String? = nil
    ) : Tuple(GoogleCloudStorage::Object, Int32, Hash(String, Array(String) | String))
      request = build_api_request_for_get(bucket: bucket, object: object, alt: alt, fields: fields, key: key, oauth_token: oauth_token, pretty_print: pretty_print, quota_user: quota_user, upload_type: upload_type, user_ip: user_ip, generation: generation, if_generation_match: if_generation_match, if_generation_not_match: if_generation_not_match, if_metageneration_match: if_metageneration_match, if_metageneration_not_match: if_metageneration_not_match, projection: projection, user_project: user_project)

      body, status_code, headers = @api_client.execute_api_request(request)

      if debugging?
        Log.debug { "API called: ObjectsApi#get\nBody: #{body.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      Tuple.new(GoogleCloudStorage::Object.from_json(body), status_code, headers)
    end

    # Retrieves an object or its metadata.
    # @required @param bucket [String?] Name of the bucket in which the object resides.
    # @required @param object [String?] Name of the object. For information about how to URL encode object names to be path safe, see Encoding URI Path Parts.
    # @optional @param alt [String?] Data format for the response.
    # @optional @param fields [String?] Selector specifying which fields to include in a partial response.
    # @optional @param key [String?] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    # @optional @param oauth_token [String?] OAuth 2.0 token for the current user.
    # @optional @param pretty_print [Bool?] Returns response with indentations and line breaks.
    # @optional @param quota_user [String?] An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
    # @optional @param upload_type [String?] Upload protocol for media (e.g. \"media\", \"multipart\", \"resumable\").
    # @optional @param user_ip [String?] Deprecated. Please use quotaUser instead.
    # @optional @param generation [String?] If present, selects a specific revision of this object (as opposed to the latest version, the default).
    # @optional @param if_generation_match [String?] Makes the operation conditional on whether the object's current generation matches the given value. Setting to 0 makes the operation succeed only if there are no live versions of the object.
    # @optional @param if_generation_not_match [String?] Makes the operation conditional on whether the object's current generation does not match the given value. If no live object exists, the precondition fails. Setting to 0 makes the operation succeed only if there is a live version of the object.
    # @optional @param if_metageneration_match [String?] Makes the operation conditional on whether the object's current metageneration matches the given value.
    # @optional @param if_metageneration_not_match [String?] Makes the operation conditional on whether the object's current metageneration does not match the given value.
    # @optional @param projection [String?] Set of properties to return. Defaults to noAcl.
    # @optional @param user_project [String?] The project to be billed for this request. Required for Requester Pays buckets.
    # @return nil
    def get(
      *,
      bucket : String? = nil,
      object : String? = nil,
      alt : String? = nil,
      fields : String? = nil,
      key : String? = nil,
      oauth_token : String? = nil,
      pretty_print : Bool? = nil,
      quota_user : String? = nil,
      upload_type : String? = nil,
      user_ip : String? = nil,
      generation : String? = nil,
      if_generation_match : String? = nil,
      if_generation_not_match : String? = nil,
      if_metageneration_match : String? = nil,
      if_metageneration_not_match : String? = nil,
      projection : String? = nil,
      user_project : String? = nil,
      &block : Crest::Response ->
    ) : Nil
      build_api_request_for_get(bucket: bucket, object: object, alt: alt, fields: fields, key: key, oauth_token: oauth_token, pretty_print: pretty_print, quota_user: quota_user, upload_type: upload_type, user_ip: user_ip, generation: generation, if_generation_match: if_generation_match, if_generation_not_match: if_generation_not_match, if_metageneration_match: if_metageneration_match, if_metageneration_not_match: if_metageneration_not_match, projection: projection, user_project: user_project).execute(&block)
    end

    STORAGE_OBJECTS_GET_VALID_VALUES_FOR_ALT        = String.static_array("json", "media")
    STORAGE_OBJECTS_GET_VALID_VALUES_FOR_PROJECTION = String.static_array("full", "noAcl")

    # @return Crest::Request
    def build_api_request_for_get(
      *,
      bucket : String? = nil,
      object : String? = nil,
      alt : String? = nil,
      fields : String? = nil,
      key : String? = nil,
      oauth_token : String? = nil,
      pretty_print : Bool? = nil,
      quota_user : String? = nil,
      upload_type : String? = nil,
      user_ip : String? = nil,
      generation : String? = nil,
      if_generation_match : String? = nil,
      if_generation_not_match : String? = nil,
      if_metageneration_match : String? = nil,
      if_metageneration_not_match : String? = nil,
      projection : String? = nil,
      user_project : String? = nil
    ) : Crest::Request
      if debugging?
        Log.debug { "Calling API: ObjectsApi.get ..." }
      end

      if client_side_validation?
        raise ArgumentError.new("\"bucket\" is required and cannot be null") if bucket.nil?
        unless (_bucket = bucket).nil?
        end
        raise ArgumentError.new("\"object\" is required and cannot be null") if object.nil?
        unless (_object = object).nil?
        end
        unless (_alt = alt).nil?
          OpenApi::EnumValidator.validate("alt", _alt, STORAGE_OBJECTS_GET_VALID_VALUES_FOR_ALT)
        end
        unless (_fields = fields).nil?
        end
        unless (_key = key).nil?
        end
        unless (_oauth_token = oauth_token).nil?
        end
        unless (_pretty_print = pretty_print).nil?
        end
        unless (_quota_user = quota_user).nil?
        end
        unless (_upload_type = upload_type).nil?
        end
        unless (_user_ip = user_ip).nil?
        end
        unless (_generation = generation).nil?
        end
        unless (_if_generation_match = if_generation_match).nil?
        end
        unless (_if_generation_not_match = if_generation_not_match).nil?
        end
        unless (_if_metageneration_match = if_metageneration_match).nil?
        end
        unless (_if_metageneration_not_match = if_metageneration_not_match).nil?
        end
        unless (_projection = projection).nil?
          OpenApi::EnumValidator.validate("projection", _projection, STORAGE_OBJECTS_GET_VALID_VALUES_FOR_PROJECTION)
        end
        unless (_user_project = user_project).nil?
        end
      end

      # resource path
      local_var_path = "/storage/v1/b/{bucket}/o/{object}".sub("{" + "bucket" + "}", URI.encode_path(bucket.to_s)).sub("{" + "object" + "}", URI.encode_path(object.to_s))

      # header parameters
      header_params : Hash(String, String) = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # cookie parameters
      cookie_params : Hash(String, String) = Hash(String, String).new

      # query parameters
      query_params : Hash(String, (String | Array(String) | JSON::Any)) = Hash(String, (String | Array(String) | JSON::Any)).new
      query_params["alt"] = alt.to_s if !alt.nil?
      query_params["fields"] = fields.to_s if !fields.nil?
      query_params["key"] = key.to_s if !key.nil?
      query_params["oauth_token"] = oauth_token.to_s if !oauth_token.nil?
      query_params["prettyPrint"] = pretty_print.to_s if !pretty_print.nil?
      query_params["quotaUser"] = quota_user.to_s if !quota_user.nil?
      query_params["uploadType"] = upload_type.to_s if !upload_type.nil?
      query_params["userIp"] = user_ip.to_s if !user_ip.nil?
      query_params["generation"] = generation.to_s if !generation.nil?
      query_params["ifGenerationMatch"] = if_generation_match.to_s if !if_generation_match.nil?
      query_params["ifGenerationNotMatch"] = if_generation_not_match.to_s if !if_generation_not_match.nil?
      query_params["ifMetagenerationMatch"] = if_metageneration_match.to_s if !if_metageneration_match.nil?
      query_params["ifMetagenerationNotMatch"] = if_metageneration_not_match.to_s if !if_metageneration_not_match.nil?
      query_params["projection"] = projection.to_s if !projection.nil?
      query_params["userProject"] = user_project.to_s if !user_project.nil?

      # form parameters
      form_params : Array(Tuple(String, Crest::ParamsValue)) | Nil = nil

      # http body (model)
      post_body : IO | String | Nil = nil

      # auth_names
      auth_names = ["Oauth2c", "Oauth2"]

      @api_client.build_api_request(
        http_method: :"GET",
        path: local_var_path,
        operation: "ObjectsApi.storage_objects_get",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        cookie_params: cookie_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    # Returns an IAM policy for the specified object.
    # @required @param bucket [String?] Name of the bucket in which the object resides.
    # @required @param object [String?] Name of the object. For information about how to URL encode object names to be path safe, see Encoding URI Path Parts.
    # @optional @param alt [String?] Data format for the response.
    # @optional @param fields [String?] Selector specifying which fields to include in a partial response.
    # @optional @param key [String?] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    # @optional @param oauth_token [String?] OAuth 2.0 token for the current user.
    # @optional @param pretty_print [Bool?] Returns response with indentations and line breaks.
    # @optional @param quota_user [String?] An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
    # @optional @param upload_type [String?] Upload protocol for media (e.g. \"media\", \"multipart\", \"resumable\").
    # @optional @param user_ip [String?] Deprecated. Please use quotaUser instead.
    # @optional @param generation [String?] If present, selects a specific revision of this object (as opposed to the latest version, the default).
    # @optional @param user_project [String?] The project to be billed for this request. Required for Requester Pays buckets.
    # @return [GoogleCloudStorage::Policy]
    def get_iam_policy(
      *,
      bucket : String? = nil,
      object : String? = nil,
      alt : String? = nil,
      fields : String? = nil,
      key : String? = nil,
      oauth_token : String? = nil,
      pretty_print : Bool? = nil,
      quota_user : String? = nil,
      upload_type : String? = nil,
      user_ip : String? = nil,
      generation : String? = nil,
      user_project : String? = nil
    ) : GoogleCloudStorage::Policy
      data, _status_code, _headers = get_iam_policy_with_http_info(bucket: bucket, object: object, alt: alt, fields: fields, key: key, oauth_token: oauth_token, pretty_print: pretty_print, quota_user: quota_user, upload_type: upload_type, user_ip: user_ip, generation: generation, user_project: user_project)
      data
    end

    # Returns an IAM policy for the specified object.
    # @required @param bucket [String?] Name of the bucket in which the object resides.
    # @required @param object [String?] Name of the object. For information about how to URL encode object names to be path safe, see Encoding URI Path Parts.
    # @optional @param alt [String?] Data format for the response.
    # @optional @param fields [String?] Selector specifying which fields to include in a partial response.
    # @optional @param key [String?] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    # @optional @param oauth_token [String?] OAuth 2.0 token for the current user.
    # @optional @param pretty_print [Bool?] Returns response with indentations and line breaks.
    # @optional @param quota_user [String?] An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
    # @optional @param upload_type [String?] Upload protocol for media (e.g. \"media\", \"multipart\", \"resumable\").
    # @optional @param user_ip [String?] Deprecated. Please use quotaUser instead.
    # @optional @param generation [String?] If present, selects a specific revision of this object (as opposed to the latest version, the default).
    # @optional @param user_project [String?] The project to be billed for this request. Required for Requester Pays buckets.
    # @return [Tuple(GoogleCloudStorage::Policy, Integer, Hash)] GoogleCloudStorage::Policy, response status code and response headers
    def get_iam_policy_with_http_info(
      *,
      bucket : String? = nil,
      object : String? = nil,
      alt : String? = nil,
      fields : String? = nil,
      key : String? = nil,
      oauth_token : String? = nil,
      pretty_print : Bool? = nil,
      quota_user : String? = nil,
      upload_type : String? = nil,
      user_ip : String? = nil,
      generation : String? = nil,
      user_project : String? = nil
    ) : Tuple(GoogleCloudStorage::Policy, Int32, Hash(String, Array(String) | String))
      request = build_api_request_for_get_iam_policy(bucket: bucket, object: object, alt: alt, fields: fields, key: key, oauth_token: oauth_token, pretty_print: pretty_print, quota_user: quota_user, upload_type: upload_type, user_ip: user_ip, generation: generation, user_project: user_project)

      body, status_code, headers = @api_client.execute_api_request(request)

      if debugging?
        Log.debug { "API called: ObjectsApi#get_iam_policy\nBody: #{body.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      Tuple.new(GoogleCloudStorage::Policy.from_json(body), status_code, headers)
    end

    # Returns an IAM policy for the specified object.
    # @required @param bucket [String?] Name of the bucket in which the object resides.
    # @required @param object [String?] Name of the object. For information about how to URL encode object names to be path safe, see Encoding URI Path Parts.
    # @optional @param alt [String?] Data format for the response.
    # @optional @param fields [String?] Selector specifying which fields to include in a partial response.
    # @optional @param key [String?] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    # @optional @param oauth_token [String?] OAuth 2.0 token for the current user.
    # @optional @param pretty_print [Bool?] Returns response with indentations and line breaks.
    # @optional @param quota_user [String?] An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
    # @optional @param upload_type [String?] Upload protocol for media (e.g. \"media\", \"multipart\", \"resumable\").
    # @optional @param user_ip [String?] Deprecated. Please use quotaUser instead.
    # @optional @param generation [String?] If present, selects a specific revision of this object (as opposed to the latest version, the default).
    # @optional @param user_project [String?] The project to be billed for this request. Required for Requester Pays buckets.
    # @return nil
    def get_iam_policy(
      *,
      bucket : String? = nil,
      object : String? = nil,
      alt : String? = nil,
      fields : String? = nil,
      key : String? = nil,
      oauth_token : String? = nil,
      pretty_print : Bool? = nil,
      quota_user : String? = nil,
      upload_type : String? = nil,
      user_ip : String? = nil,
      generation : String? = nil,
      user_project : String? = nil,
      &block : Crest::Response ->
    ) : Nil
      build_api_request_for_get_iam_policy(bucket: bucket, object: object, alt: alt, fields: fields, key: key, oauth_token: oauth_token, pretty_print: pretty_print, quota_user: quota_user, upload_type: upload_type, user_ip: user_ip, generation: generation, user_project: user_project).execute(&block)
    end

    STORAGE_OBJECTS_GET_IAM_POLICY_VALID_VALUES_FOR_ALT = String.static_array("json", "media")

    # @return Crest::Request
    def build_api_request_for_get_iam_policy(
      *,
      bucket : String? = nil,
      object : String? = nil,
      alt : String? = nil,
      fields : String? = nil,
      key : String? = nil,
      oauth_token : String? = nil,
      pretty_print : Bool? = nil,
      quota_user : String? = nil,
      upload_type : String? = nil,
      user_ip : String? = nil,
      generation : String? = nil,
      user_project : String? = nil
    ) : Crest::Request
      if debugging?
        Log.debug { "Calling API: ObjectsApi.get_iam_policy ..." }
      end

      if client_side_validation?
        raise ArgumentError.new("\"bucket\" is required and cannot be null") if bucket.nil?
        unless (_bucket = bucket).nil?
        end
        raise ArgumentError.new("\"object\" is required and cannot be null") if object.nil?
        unless (_object = object).nil?
        end
        unless (_alt = alt).nil?
          OpenApi::EnumValidator.validate("alt", _alt, STORAGE_OBJECTS_GET_IAM_POLICY_VALID_VALUES_FOR_ALT)
        end
        unless (_fields = fields).nil?
        end
        unless (_key = key).nil?
        end
        unless (_oauth_token = oauth_token).nil?
        end
        unless (_pretty_print = pretty_print).nil?
        end
        unless (_quota_user = quota_user).nil?
        end
        unless (_upload_type = upload_type).nil?
        end
        unless (_user_ip = user_ip).nil?
        end
        unless (_generation = generation).nil?
        end
        unless (_user_project = user_project).nil?
        end
      end

      # resource path
      local_var_path = "/storage/v1/b/{bucket}/o/{object}/iam".sub("{" + "bucket" + "}", URI.encode_path(bucket.to_s)).sub("{" + "object" + "}", URI.encode_path(object.to_s))

      # header parameters
      header_params : Hash(String, String) = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # cookie parameters
      cookie_params : Hash(String, String) = Hash(String, String).new

      # query parameters
      query_params : Hash(String, (String | Array(String) | JSON::Any)) = Hash(String, (String | Array(String) | JSON::Any)).new
      query_params["alt"] = alt.to_s if !alt.nil?
      query_params["fields"] = fields.to_s if !fields.nil?
      query_params["key"] = key.to_s if !key.nil?
      query_params["oauth_token"] = oauth_token.to_s if !oauth_token.nil?
      query_params["prettyPrint"] = pretty_print.to_s if !pretty_print.nil?
      query_params["quotaUser"] = quota_user.to_s if !quota_user.nil?
      query_params["uploadType"] = upload_type.to_s if !upload_type.nil?
      query_params["userIp"] = user_ip.to_s if !user_ip.nil?
      query_params["generation"] = generation.to_s if !generation.nil?
      query_params["userProject"] = user_project.to_s if !user_project.nil?

      # form parameters
      form_params : Array(Tuple(String, Crest::ParamsValue)) | Nil = nil

      # http body (model)
      post_body : IO | String | Nil = nil

      # auth_names
      auth_names = ["Oauth2c", "Oauth2"]

      @api_client.build_api_request(
        http_method: :"GET",
        path: local_var_path,
        operation: "ObjectsApi.storage_objects_get_iam_policy",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        cookie_params: cookie_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    # Stores a new object and metadata.
    # @required @param bucket [String?] Name of the bucket in which to store the new object. Overrides the provided object metadata's bucket value, if any.
    # @optional @param alt [String?] Data format for the response.
    # @optional @param fields [String?] Selector specifying which fields to include in a partial response.
    # @optional @param key [String?] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    # @optional @param oauth_token [String?] OAuth 2.0 token for the current user.
    # @optional @param pretty_print [Bool?] Returns response with indentations and line breaks.
    # @optional @param quota_user [String?] An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
    # @optional @param upload_type [String?] Upload protocol for media (e.g. \"media\", \"multipart\", \"resumable\").
    # @optional @param user_ip [String?] Deprecated. Please use quotaUser instead.
    # @optional @param content_encoding [String?] If set, sets the contentEncoding property of the final object to this value. Setting this parameter is equivalent to setting the contentEncoding metadata property. This can be useful when uploading an object with uploadType=media to indicate the encoding of the content being uploaded.
    # @optional @param if_generation_match [String?] Makes the operation conditional on whether the object's current generation matches the given value. Setting to 0 makes the operation succeed only if there are no live versions of the object.
    # @optional @param if_generation_not_match [String?] Makes the operation conditional on whether the object's current generation does not match the given value. If no live object exists, the precondition fails. Setting to 0 makes the operation succeed only if there is a live version of the object.
    # @optional @param if_metageneration_match [String?] Makes the operation conditional on whether the object's current metageneration matches the given value.
    # @optional @param if_metageneration_not_match [String?] Makes the operation conditional on whether the object's current metageneration does not match the given value.
    # @optional @param kms_key_name [String?] Resource name of the Cloud KMS key, of the form projects/my-project/locations/global/keyRings/my-kr/cryptoKeys/my-key, that will be used to encrypt the object. Overrides the object metadata's kms_key_name value, if any.
    # @optional @param name [String?] Name of the object. Required when the object metadata is not otherwise provided. Overrides the object metadata's name value, if any. For information about how to URL encode object names to be path safe, see Encoding URI Path Parts.
    # @optional @param predefined_acl [String?] Apply a predefined set of access controls to this object.
    # @optional @param projection [String?] Set of properties to return. Defaults to noAcl, unless the object resource specifies the acl property, when it defaults to full.
    # @optional @param user_project [String?] The project to be billed for this request. Required for Requester Pays buckets.
    # @optional @param body [::File?]
    # @return [GoogleCloudStorage::Object]
    def insert(
      *,
      bucket : String? = nil,
      alt : String? = nil,
      fields : String? = nil,
      key : String? = nil,
      oauth_token : String? = nil,
      pretty_print : Bool? = nil,
      quota_user : String? = nil,
      upload_type : String? = nil,
      user_ip : String? = nil,
      content_encoding : String? = nil,
      if_generation_match : String? = nil,
      if_generation_not_match : String? = nil,
      if_metageneration_match : String? = nil,
      if_metageneration_not_match : String? = nil,
      kms_key_name : String? = nil,
      name : String? = nil,
      predefined_acl : String? = nil,
      projection : String? = nil,
      user_project : String? = nil,
      body : IO | String? = nil
    ) : GoogleCloudStorage::Object
      data, _status_code, _headers = insert_with_http_info(bucket: bucket, alt: alt, fields: fields, key: key, oauth_token: oauth_token, pretty_print: pretty_print, quota_user: quota_user, upload_type: upload_type, user_ip: user_ip, content_encoding: content_encoding, if_generation_match: if_generation_match, if_generation_not_match: if_generation_not_match, if_metageneration_match: if_metageneration_match, if_metageneration_not_match: if_metageneration_not_match, kms_key_name: kms_key_name, name: name, predefined_acl: predefined_acl, projection: projection, user_project: user_project, body: body)
      data
    end

    # Stores a new object and metadata.
    # @required @param bucket [String?] Name of the bucket in which to store the new object. Overrides the provided object metadata's bucket value, if any.
    # @optional @param alt [String?] Data format for the response.
    # @optional @param fields [String?] Selector specifying which fields to include in a partial response.
    # @optional @param key [String?] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    # @optional @param oauth_token [String?] OAuth 2.0 token for the current user.
    # @optional @param pretty_print [Bool?] Returns response with indentations and line breaks.
    # @optional @param quota_user [String?] An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
    # @optional @param upload_type [String?] Upload protocol for media (e.g. \"media\", \"multipart\", \"resumable\").
    # @optional @param user_ip [String?] Deprecated. Please use quotaUser instead.
    # @optional @param content_encoding [String?] If set, sets the contentEncoding property of the final object to this value. Setting this parameter is equivalent to setting the contentEncoding metadata property. This can be useful when uploading an object with uploadType=media to indicate the encoding of the content being uploaded.
    # @optional @param if_generation_match [String?] Makes the operation conditional on whether the object's current generation matches the given value. Setting to 0 makes the operation succeed only if there are no live versions of the object.
    # @optional @param if_generation_not_match [String?] Makes the operation conditional on whether the object's current generation does not match the given value. If no live object exists, the precondition fails. Setting to 0 makes the operation succeed only if there is a live version of the object.
    # @optional @param if_metageneration_match [String?] Makes the operation conditional on whether the object's current metageneration matches the given value.
    # @optional @param if_metageneration_not_match [String?] Makes the operation conditional on whether the object's current metageneration does not match the given value.
    # @optional @param kms_key_name [String?] Resource name of the Cloud KMS key, of the form projects/my-project/locations/global/keyRings/my-kr/cryptoKeys/my-key, that will be used to encrypt the object. Overrides the object metadata's kms_key_name value, if any.
    # @optional @param name [String?] Name of the object. Required when the object metadata is not otherwise provided. Overrides the object metadata's name value, if any. For information about how to URL encode object names to be path safe, see Encoding URI Path Parts.
    # @optional @param predefined_acl [String?] Apply a predefined set of access controls to this object.
    # @optional @param projection [String?] Set of properties to return. Defaults to noAcl, unless the object resource specifies the acl property, when it defaults to full.
    # @optional @param user_project [String?] The project to be billed for this request. Required for Requester Pays buckets.
    # @optional @param body [::File?]
    # @return [Tuple(GoogleCloudStorage::Object, Integer, Hash)] GoogleCloudStorage::Object, response status code and response headers
    def insert_with_http_info(
      *,
      bucket : String? = nil,
      alt : String? = nil,
      fields : String? = nil,
      key : String? = nil,
      oauth_token : String? = nil,
      pretty_print : Bool? = nil,
      quota_user : String? = nil,
      upload_type : String? = nil,
      user_ip : String? = nil,
      content_encoding : String? = nil,
      if_generation_match : String? = nil,
      if_generation_not_match : String? = nil,
      if_metageneration_match : String? = nil,
      if_metageneration_not_match : String? = nil,
      kms_key_name : String? = nil,
      name : String? = nil,
      predefined_acl : String? = nil,
      projection : String? = nil,
      user_project : String? = nil,
      body : IO | String? = nil
    ) : Tuple(GoogleCloudStorage::Object, Int32, Hash(String, Array(String) | String))
      request = build_api_request_for_insert(bucket: bucket, alt: alt, fields: fields, key: key, oauth_token: oauth_token, pretty_print: pretty_print, quota_user: quota_user, upload_type: upload_type, user_ip: user_ip, content_encoding: content_encoding, if_generation_match: if_generation_match, if_generation_not_match: if_generation_not_match, if_metageneration_match: if_metageneration_match, if_metageneration_not_match: if_metageneration_not_match, kms_key_name: kms_key_name, name: name, predefined_acl: predefined_acl, projection: projection, user_project: user_project, body: body)

      body, status_code, headers = @api_client.execute_api_request(request)

      if debugging?
        Log.debug { "API called: ObjectsApi#insert\nBody: #{body.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      Tuple.new(GoogleCloudStorage::Object.from_json(body), status_code, headers)
    end

    # Stores a new object and metadata.
    # @required @param bucket [String?] Name of the bucket in which to store the new object. Overrides the provided object metadata's bucket value, if any.
    # @optional @param alt [String?] Data format for the response.
    # @optional @param fields [String?] Selector specifying which fields to include in a partial response.
    # @optional @param key [String?] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    # @optional @param oauth_token [String?] OAuth 2.0 token for the current user.
    # @optional @param pretty_print [Bool?] Returns response with indentations and line breaks.
    # @optional @param quota_user [String?] An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
    # @optional @param upload_type [String?] Upload protocol for media (e.g. \"media\", \"multipart\", \"resumable\").
    # @optional @param user_ip [String?] Deprecated. Please use quotaUser instead.
    # @optional @param content_encoding [String?] If set, sets the contentEncoding property of the final object to this value. Setting this parameter is equivalent to setting the contentEncoding metadata property. This can be useful when uploading an object with uploadType=media to indicate the encoding of the content being uploaded.
    # @optional @param if_generation_match [String?] Makes the operation conditional on whether the object's current generation matches the given value. Setting to 0 makes the operation succeed only if there are no live versions of the object.
    # @optional @param if_generation_not_match [String?] Makes the operation conditional on whether the object's current generation does not match the given value. If no live object exists, the precondition fails. Setting to 0 makes the operation succeed only if there is a live version of the object.
    # @optional @param if_metageneration_match [String?] Makes the operation conditional on whether the object's current metageneration matches the given value.
    # @optional @param if_metageneration_not_match [String?] Makes the operation conditional on whether the object's current metageneration does not match the given value.
    # @optional @param kms_key_name [String?] Resource name of the Cloud KMS key, of the form projects/my-project/locations/global/keyRings/my-kr/cryptoKeys/my-key, that will be used to encrypt the object. Overrides the object metadata's kms_key_name value, if any.
    # @optional @param name [String?] Name of the object. Required when the object metadata is not otherwise provided. Overrides the object metadata's name value, if any. For information about how to URL encode object names to be path safe, see Encoding URI Path Parts.
    # @optional @param predefined_acl [String?] Apply a predefined set of access controls to this object.
    # @optional @param projection [String?] Set of properties to return. Defaults to noAcl, unless the object resource specifies the acl property, when it defaults to full.
    # @optional @param user_project [String?] The project to be billed for this request. Required for Requester Pays buckets.
    # @optional @param body [::File?]
    # @return nil
    def insert(
      *,
      bucket : String? = nil,
      alt : String? = nil,
      fields : String? = nil,
      key : String? = nil,
      oauth_token : String? = nil,
      pretty_print : Bool? = nil,
      quota_user : String? = nil,
      upload_type : String? = nil,
      user_ip : String? = nil,
      content_encoding : String? = nil,
      if_generation_match : String? = nil,
      if_generation_not_match : String? = nil,
      if_metageneration_match : String? = nil,
      if_metageneration_not_match : String? = nil,
      kms_key_name : String? = nil,
      name : String? = nil,
      predefined_acl : String? = nil,
      projection : String? = nil,
      user_project : String? = nil,
      body : IO | String? = nil,
      &block : Crest::Response ->
    ) : Nil
      build_api_request_for_insert(bucket: bucket, alt: alt, fields: fields, key: key, oauth_token: oauth_token, pretty_print: pretty_print, quota_user: quota_user, upload_type: upload_type, user_ip: user_ip, content_encoding: content_encoding, if_generation_match: if_generation_match, if_generation_not_match: if_generation_not_match, if_metageneration_match: if_metageneration_match, if_metageneration_not_match: if_metageneration_not_match, kms_key_name: kms_key_name, name: name, predefined_acl: predefined_acl, projection: projection, user_project: user_project, body: body).execute(&block)
    end

    STORAGE_OBJECTS_INSERT_VALID_VALUES_FOR_ALT            = String.static_array("json", "media")
    STORAGE_OBJECTS_INSERT_VALID_VALUES_FOR_PREDEFINED_ACL = String.static_array("authenticatedRead", "bucketOwnerFullControl", "bucketOwnerRead", "private", "projectPrivate", "publicRead")
    STORAGE_OBJECTS_INSERT_VALID_VALUES_FOR_PROJECTION     = String.static_array("full", "noAcl")

    # @return Crest::Request
    def build_api_request_for_insert(
      *,
      bucket : String? = nil,
      alt : String? = nil,
      fields : String? = nil,
      key : String? = nil,
      oauth_token : String? = nil,
      pretty_print : Bool? = nil,
      quota_user : String? = nil,
      upload_type : String? = nil,
      user_ip : String? = nil,
      content_encoding : String? = nil,
      if_generation_match : String? = nil,
      if_generation_not_match : String? = nil,
      if_metageneration_match : String? = nil,
      if_metageneration_not_match : String? = nil,
      kms_key_name : String? = nil,
      name : String? = nil,
      predefined_acl : String? = nil,
      projection : String? = nil,
      user_project : String? = nil,
      body : IO | String? = nil
    ) : Crest::Request
      if debugging?
        Log.debug { "Calling API: ObjectsApi.insert ..." }
      end

      if client_side_validation?
        raise ArgumentError.new("\"bucket\" is required and cannot be null") if bucket.nil?
        unless (_bucket = bucket).nil?
        end
        unless (_alt = alt).nil?
          OpenApi::EnumValidator.validate("alt", _alt, STORAGE_OBJECTS_INSERT_VALID_VALUES_FOR_ALT)
        end
        unless (_fields = fields).nil?
        end
        unless (_key = key).nil?
        end
        unless (_oauth_token = oauth_token).nil?
        end
        unless (_pretty_print = pretty_print).nil?
        end
        unless (_quota_user = quota_user).nil?
        end
        unless (_upload_type = upload_type).nil?
        end
        unless (_user_ip = user_ip).nil?
        end
        unless (_content_encoding = content_encoding).nil?
        end
        unless (_if_generation_match = if_generation_match).nil?
        end
        unless (_if_generation_not_match = if_generation_not_match).nil?
        end
        unless (_if_metageneration_match = if_metageneration_match).nil?
        end
        unless (_if_metageneration_not_match = if_metageneration_not_match).nil?
        end
        unless (_kms_key_name = kms_key_name).nil?
        end
        unless (_name = name).nil?
        end
        unless (_predefined_acl = predefined_acl).nil?
          OpenApi::EnumValidator.validate("predefined_acl", _predefined_acl, STORAGE_OBJECTS_INSERT_VALID_VALUES_FOR_PREDEFINED_ACL)
        end
        unless (_projection = projection).nil?
          OpenApi::EnumValidator.validate("projection", _projection, STORAGE_OBJECTS_INSERT_VALID_VALUES_FOR_PROJECTION)
        end
        unless (_user_project = user_project).nil?
        end
        unless (_body = body).nil?
        end
      end

      # resource path
      local_var_path = "/upload/storage/v1/b/{bucket}/o".sub("{" + "bucket" + "}", URI.encode_path(bucket.to_s))

      # header parameters
      header_params : Hash(String, String) = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])
      # HTTP header "Content-Type"
      header_params["Content-Type"] = @api_client.select_header_content_type(["application/octet-stream"])

      # cookie parameters
      cookie_params : Hash(String, String) = Hash(String, String).new

      # query parameters
      query_params : Hash(String, (String | Array(String) | JSON::Any)) = Hash(String, (String | Array(String) | JSON::Any)).new
      query_params["alt"] = alt.to_s if !alt.nil?
      query_params["fields"] = fields.to_s if !fields.nil?
      query_params["key"] = key.to_s if !key.nil?
      query_params["oauth_token"] = oauth_token.to_s if !oauth_token.nil?
      query_params["prettyPrint"] = pretty_print.to_s if !pretty_print.nil?
      query_params["quotaUser"] = quota_user.to_s if !quota_user.nil?
      query_params["uploadType"] = upload_type.to_s if !upload_type.nil?
      query_params["userIp"] = user_ip.to_s if !user_ip.nil?
      query_params["contentEncoding"] = content_encoding.to_s if !content_encoding.nil?
      query_params["ifGenerationMatch"] = if_generation_match.to_s if !if_generation_match.nil?
      query_params["ifGenerationNotMatch"] = if_generation_not_match.to_s if !if_generation_not_match.nil?
      query_params["ifMetagenerationMatch"] = if_metageneration_match.to_s if !if_metageneration_match.nil?
      query_params["ifMetagenerationNotMatch"] = if_metageneration_not_match.to_s if !if_metageneration_not_match.nil?
      query_params["kmsKeyName"] = kms_key_name.to_s if !kms_key_name.nil?
      query_params["name"] = name.to_s if !name.nil?
      query_params["predefinedAcl"] = predefined_acl.to_s if !predefined_acl.nil?
      query_params["projection"] = projection.to_s if !projection.nil?
      query_params["userProject"] = user_project.to_s if !user_project.nil?

      # form parameters
      form_params : Array(Tuple(String, Crest::ParamsValue)) | Nil = nil

      # http body (model)
      post_body : IO | String | Nil = body

      # auth_names
      auth_names = ["Oauth2c", "Oauth2"]

      @api_client.build_api_request(
        http_method: :"POST",
        path: local_var_path,
        operation: "ObjectsApi.storage_objects_insert",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        cookie_params: cookie_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    # Retrieves a list of objects matching the criteria.
    # @required @param bucket [String?] Name of the bucket in which to look for objects.
    # @optional @param alt [String?] Data format for the response.
    # @optional @param fields [String?] Selector specifying which fields to include in a partial response.
    # @optional @param key [String?] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    # @optional @param oauth_token [String?] OAuth 2.0 token for the current user.
    # @optional @param pretty_print [Bool?] Returns response with indentations and line breaks.
    # @optional @param quota_user [String?] An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
    # @optional @param upload_type [String?] Upload protocol for media (e.g. \"media\", \"multipart\", \"resumable\").
    # @optional @param user_ip [String?] Deprecated. Please use quotaUser instead.
    # @optional @param delimiter [String?] Returns results in a directory-like mode. items will contain only objects whose names, aside from the prefix, do not contain delimiter. Objects whose names, aside from the prefix, contain delimiter will have their name, truncated after the delimiter, returned in prefixes. Duplicate prefixes are omitted.
    # @optional @param end_offset [String?] Filter results to objects whose names are lexicographically before endOffset. If startOffset is also set, the objects listed will have names between startOffset (inclusive) and endOffset (exclusive).
    # @optional @param include_trailing_delimiter [Bool?] If true, objects that end in exactly one instance of delimiter will have their metadata included in items in addition to prefixes.
    # @optional @param max_results [Int32?] Maximum number of items plus prefixes to return in a single page of responses. As duplicate prefixes are omitted, fewer total results may be returned than requested. The service will use this parameter or 1,000 items, whichever is smaller.
    # @optional @param page_token [String?] A previously-returned page token representing part of the larger set of results to view.
    # @optional @param prefix [String?] Filter results to objects whose names begin with this prefix.
    # @optional @param projection [String?] Set of properties to return. Defaults to noAcl.
    # @optional @param start_offset [String?] Filter results to objects whose names are lexicographically equal to or after startOffset. If endOffset is also set, the objects listed will have names between startOffset (inclusive) and endOffset (exclusive).
    # @optional @param user_project [String?] The project to be billed for this request. Required for Requester Pays buckets.
    # @optional @param versions [Bool?] If true, lists all versions of an object as distinct results. The default is false. For more information, see Object Versioning.
    # @return [GoogleCloudStorage::Objects]
    def list(
      *,
      bucket : String? = nil,
      alt : String? = nil,
      fields : String? = nil,
      key : String? = nil,
      oauth_token : String? = nil,
      pretty_print : Bool? = nil,
      quota_user : String? = nil,
      upload_type : String? = nil,
      user_ip : String? = nil,
      delimiter : String? = nil,
      end_offset : String? = nil,
      include_trailing_delimiter : Bool? = nil,
      max_results : Int32? = nil,
      page_token : String? = nil,
      prefix : String? = nil,
      projection : String? = nil,
      start_offset : String? = nil,
      user_project : String? = nil,
      versions : Bool? = nil
    ) : GoogleCloudStorage::Objects
      data, _status_code, _headers = list_with_http_info(bucket: bucket, alt: alt, fields: fields, key: key, oauth_token: oauth_token, pretty_print: pretty_print, quota_user: quota_user, upload_type: upload_type, user_ip: user_ip, delimiter: delimiter, end_offset: end_offset, include_trailing_delimiter: include_trailing_delimiter, max_results: max_results, page_token: page_token, prefix: prefix, projection: projection, start_offset: start_offset, user_project: user_project, versions: versions)
      data
    end

    # Retrieves a list of objects matching the criteria.
    # @required @param bucket [String?] Name of the bucket in which to look for objects.
    # @optional @param alt [String?] Data format for the response.
    # @optional @param fields [String?] Selector specifying which fields to include in a partial response.
    # @optional @param key [String?] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    # @optional @param oauth_token [String?] OAuth 2.0 token for the current user.
    # @optional @param pretty_print [Bool?] Returns response with indentations and line breaks.
    # @optional @param quota_user [String?] An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
    # @optional @param upload_type [String?] Upload protocol for media (e.g. \"media\", \"multipart\", \"resumable\").
    # @optional @param user_ip [String?] Deprecated. Please use quotaUser instead.
    # @optional @param delimiter [String?] Returns results in a directory-like mode. items will contain only objects whose names, aside from the prefix, do not contain delimiter. Objects whose names, aside from the prefix, contain delimiter will have their name, truncated after the delimiter, returned in prefixes. Duplicate prefixes are omitted.
    # @optional @param end_offset [String?] Filter results to objects whose names are lexicographically before endOffset. If startOffset is also set, the objects listed will have names between startOffset (inclusive) and endOffset (exclusive).
    # @optional @param include_trailing_delimiter [Bool?] If true, objects that end in exactly one instance of delimiter will have their metadata included in items in addition to prefixes.
    # @optional @param max_results [Int32?] Maximum number of items plus prefixes to return in a single page of responses. As duplicate prefixes are omitted, fewer total results may be returned than requested. The service will use this parameter or 1,000 items, whichever is smaller.
    # @optional @param page_token [String?] A previously-returned page token representing part of the larger set of results to view.
    # @optional @param prefix [String?] Filter results to objects whose names begin with this prefix.
    # @optional @param projection [String?] Set of properties to return. Defaults to noAcl.
    # @optional @param start_offset [String?] Filter results to objects whose names are lexicographically equal to or after startOffset. If endOffset is also set, the objects listed will have names between startOffset (inclusive) and endOffset (exclusive).
    # @optional @param user_project [String?] The project to be billed for this request. Required for Requester Pays buckets.
    # @optional @param versions [Bool?] If true, lists all versions of an object as distinct results. The default is false. For more information, see Object Versioning.
    # @return [Tuple(GoogleCloudStorage::Objects, Integer, Hash)] GoogleCloudStorage::Objects, response status code and response headers
    def list_with_http_info(
      *,
      bucket : String? = nil,
      alt : String? = nil,
      fields : String? = nil,
      key : String? = nil,
      oauth_token : String? = nil,
      pretty_print : Bool? = nil,
      quota_user : String? = nil,
      upload_type : String? = nil,
      user_ip : String? = nil,
      delimiter : String? = nil,
      end_offset : String? = nil,
      include_trailing_delimiter : Bool? = nil,
      max_results : Int32? = nil,
      page_token : String? = nil,
      prefix : String? = nil,
      projection : String? = nil,
      start_offset : String? = nil,
      user_project : String? = nil,
      versions : Bool? = nil
    ) : Tuple(GoogleCloudStorage::Objects, Int32, Hash(String, Array(String) | String))
      request = build_api_request_for_list(bucket: bucket, alt: alt, fields: fields, key: key, oauth_token: oauth_token, pretty_print: pretty_print, quota_user: quota_user, upload_type: upload_type, user_ip: user_ip, delimiter: delimiter, end_offset: end_offset, include_trailing_delimiter: include_trailing_delimiter, max_results: max_results, page_token: page_token, prefix: prefix, projection: projection, start_offset: start_offset, user_project: user_project, versions: versions)

      body, status_code, headers = @api_client.execute_api_request(request)

      if debugging?
        Log.debug { "API called: ObjectsApi#list\nBody: #{body.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      Tuple.new(GoogleCloudStorage::Objects.from_json(body), status_code, headers)
    end

    # Retrieves a list of objects matching the criteria.
    # @required @param bucket [String?] Name of the bucket in which to look for objects.
    # @optional @param alt [String?] Data format for the response.
    # @optional @param fields [String?] Selector specifying which fields to include in a partial response.
    # @optional @param key [String?] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    # @optional @param oauth_token [String?] OAuth 2.0 token for the current user.
    # @optional @param pretty_print [Bool?] Returns response with indentations and line breaks.
    # @optional @param quota_user [String?] An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
    # @optional @param upload_type [String?] Upload protocol for media (e.g. \"media\", \"multipart\", \"resumable\").
    # @optional @param user_ip [String?] Deprecated. Please use quotaUser instead.
    # @optional @param delimiter [String?] Returns results in a directory-like mode. items will contain only objects whose names, aside from the prefix, do not contain delimiter. Objects whose names, aside from the prefix, contain delimiter will have their name, truncated after the delimiter, returned in prefixes. Duplicate prefixes are omitted.
    # @optional @param end_offset [String?] Filter results to objects whose names are lexicographically before endOffset. If startOffset is also set, the objects listed will have names between startOffset (inclusive) and endOffset (exclusive).
    # @optional @param include_trailing_delimiter [Bool?] If true, objects that end in exactly one instance of delimiter will have their metadata included in items in addition to prefixes.
    # @optional @param max_results [Int32?] Maximum number of items plus prefixes to return in a single page of responses. As duplicate prefixes are omitted, fewer total results may be returned than requested. The service will use this parameter or 1,000 items, whichever is smaller.
    # @optional @param page_token [String?] A previously-returned page token representing part of the larger set of results to view.
    # @optional @param prefix [String?] Filter results to objects whose names begin with this prefix.
    # @optional @param projection [String?] Set of properties to return. Defaults to noAcl.
    # @optional @param start_offset [String?] Filter results to objects whose names are lexicographically equal to or after startOffset. If endOffset is also set, the objects listed will have names between startOffset (inclusive) and endOffset (exclusive).
    # @optional @param user_project [String?] The project to be billed for this request. Required for Requester Pays buckets.
    # @optional @param versions [Bool?] If true, lists all versions of an object as distinct results. The default is false. For more information, see Object Versioning.
    # @return nil
    def list(
      *,
      bucket : String? = nil,
      alt : String? = nil,
      fields : String? = nil,
      key : String? = nil,
      oauth_token : String? = nil,
      pretty_print : Bool? = nil,
      quota_user : String? = nil,
      upload_type : String? = nil,
      user_ip : String? = nil,
      delimiter : String? = nil,
      end_offset : String? = nil,
      include_trailing_delimiter : Bool? = nil,
      max_results : Int32? = nil,
      page_token : String? = nil,
      prefix : String? = nil,
      projection : String? = nil,
      start_offset : String? = nil,
      user_project : String? = nil,
      versions : Bool? = nil,
      &block : Crest::Response ->
    ) : Nil
      build_api_request_for_list(bucket: bucket, alt: alt, fields: fields, key: key, oauth_token: oauth_token, pretty_print: pretty_print, quota_user: quota_user, upload_type: upload_type, user_ip: user_ip, delimiter: delimiter, end_offset: end_offset, include_trailing_delimiter: include_trailing_delimiter, max_results: max_results, page_token: page_token, prefix: prefix, projection: projection, start_offset: start_offset, user_project: user_project, versions: versions).execute(&block)
    end

    STORAGE_OBJECTS_LIST_VALID_VALUES_FOR_ALT        = String.static_array("json", "media")
    STORAGE_OBJECTS_LIST_MIN_FOR_MAX_RESULTS         = Int32.new("0")
    STORAGE_OBJECTS_LIST_VALID_VALUES_FOR_PROJECTION = String.static_array("full", "noAcl")

    # @return Crest::Request
    def build_api_request_for_list(
      *,
      bucket : String? = nil,
      alt : String? = nil,
      fields : String? = nil,
      key : String? = nil,
      oauth_token : String? = nil,
      pretty_print : Bool? = nil,
      quota_user : String? = nil,
      upload_type : String? = nil,
      user_ip : String? = nil,
      delimiter : String? = nil,
      end_offset : String? = nil,
      include_trailing_delimiter : Bool? = nil,
      max_results : Int32? = nil,
      page_token : String? = nil,
      prefix : String? = nil,
      projection : String? = nil,
      start_offset : String? = nil,
      user_project : String? = nil,
      versions : Bool? = nil
    ) : Crest::Request
      if debugging?
        Log.debug { "Calling API: ObjectsApi.list ..." }
      end

      if client_side_validation?
        raise ArgumentError.new("\"bucket\" is required and cannot be null") if bucket.nil?
        unless (_bucket = bucket).nil?
        end
        unless (_alt = alt).nil?
          OpenApi::EnumValidator.validate("alt", _alt, STORAGE_OBJECTS_LIST_VALID_VALUES_FOR_ALT)
        end
        unless (_fields = fields).nil?
        end
        unless (_key = key).nil?
        end
        unless (_oauth_token = oauth_token).nil?
        end
        unless (_pretty_print = pretty_print).nil?
        end
        unless (_quota_user = quota_user).nil?
        end
        unless (_upload_type = upload_type).nil?
        end
        unless (_user_ip = user_ip).nil?
        end
        unless (_delimiter = delimiter).nil?
        end
        unless (_end_offset = end_offset).nil?
        end
        unless (_include_trailing_delimiter = include_trailing_delimiter).nil?
        end
        unless (_max_results = max_results).nil?
          OpenApi::PrimitiveValidator.validate_min_number("max_results", _max_results, STORAGE_OBJECTS_LIST_MIN_FOR_MAX_RESULTS)
        end
        unless (_page_token = page_token).nil?
        end
        unless (_prefix = prefix).nil?
        end
        unless (_projection = projection).nil?
          OpenApi::EnumValidator.validate("projection", _projection, STORAGE_OBJECTS_LIST_VALID_VALUES_FOR_PROJECTION)
        end
        unless (_start_offset = start_offset).nil?
        end
        unless (_user_project = user_project).nil?
        end
        unless (_versions = versions).nil?
        end
      end

      # resource path
      local_var_path = "/storage/v1/b/{bucket}/o".sub("{" + "bucket" + "}", URI.encode_path(bucket.to_s))

      # header parameters
      header_params : Hash(String, String) = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # cookie parameters
      cookie_params : Hash(String, String) = Hash(String, String).new

      # query parameters
      query_params : Hash(String, (String | Array(String) | JSON::Any)) = Hash(String, (String | Array(String) | JSON::Any)).new
      query_params["alt"] = alt.to_s if !alt.nil?
      query_params["fields"] = fields.to_s if !fields.nil?
      query_params["key"] = key.to_s if !key.nil?
      query_params["oauth_token"] = oauth_token.to_s if !oauth_token.nil?
      query_params["prettyPrint"] = pretty_print.to_s if !pretty_print.nil?
      query_params["quotaUser"] = quota_user.to_s if !quota_user.nil?
      query_params["uploadType"] = upload_type.to_s if !upload_type.nil?
      query_params["userIp"] = user_ip.to_s if !user_ip.nil?
      query_params["delimiter"] = delimiter.to_s if !delimiter.nil?
      query_params["endOffset"] = end_offset.to_s if !end_offset.nil?
      query_params["includeTrailingDelimiter"] = include_trailing_delimiter.to_s if !include_trailing_delimiter.nil?
      query_params["maxResults"] = max_results.to_s if !max_results.nil?
      query_params["pageToken"] = page_token.to_s if !page_token.nil?
      query_params["prefix"] = prefix.to_s if !prefix.nil?
      query_params["projection"] = projection.to_s if !projection.nil?
      query_params["startOffset"] = start_offset.to_s if !start_offset.nil?
      query_params["userProject"] = user_project.to_s if !user_project.nil?
      query_params["versions"] = versions.to_s if !versions.nil?

      # form parameters
      form_params : Array(Tuple(String, Crest::ParamsValue)) | Nil = nil

      # http body (model)
      post_body : IO | String | Nil = nil

      # auth_names
      auth_names = ["Oauth2c", "Oauth2"]

      @api_client.build_api_request(
        http_method: :"GET",
        path: local_var_path,
        operation: "ObjectsApi.storage_objects_list",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        cookie_params: cookie_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    # Patches an object's metadata.
    # @required @param bucket [String?] Name of the bucket in which the object resides.
    # @required @param object [String?] Name of the object. For information about how to URL encode object names to be path safe, see Encoding URI Path Parts.
    # @optional @param alt [String?] Data format for the response.
    # @optional @param fields [String?] Selector specifying which fields to include in a partial response.
    # @optional @param key [String?] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    # @optional @param oauth_token [String?] OAuth 2.0 token for the current user.
    # @optional @param pretty_print [Bool?] Returns response with indentations and line breaks.
    # @optional @param quota_user [String?] An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
    # @optional @param upload_type [String?] Upload protocol for media (e.g. \"media\", \"multipart\", \"resumable\").
    # @optional @param user_ip [String?] Deprecated. Please use quotaUser instead.
    # @optional @param generation [String?] If present, selects a specific revision of this object (as opposed to the latest version, the default).
    # @optional @param if_generation_match [String?] Makes the operation conditional on whether the object's current generation matches the given value. Setting to 0 makes the operation succeed only if there are no live versions of the object.
    # @optional @param if_generation_not_match [String?] Makes the operation conditional on whether the object's current generation does not match the given value. If no live object exists, the precondition fails. Setting to 0 makes the operation succeed only if there is a live version of the object.
    # @optional @param if_metageneration_match [String?] Makes the operation conditional on whether the object's current metageneration matches the given value.
    # @optional @param if_metageneration_not_match [String?] Makes the operation conditional on whether the object's current metageneration does not match the given value.
    # @optional @param predefined_acl [String?] Apply a predefined set of access controls to this object.
    # @optional @param projection [String?] Set of properties to return. Defaults to full.
    # @optional @param user_project [String?] The project to be billed for this request, for Requester Pays buckets.
    # @optional @param object2 [GoogleCloudStorage::Object?]
    # @return [GoogleCloudStorage::Object]
    def patch(
      *,
      bucket : String? = nil,
      object : String? = nil,
      alt : String? = nil,
      fields : String? = nil,
      key : String? = nil,
      oauth_token : String? = nil,
      pretty_print : Bool? = nil,
      quota_user : String? = nil,
      upload_type : String? = nil,
      user_ip : String? = nil,
      generation : String? = nil,
      if_generation_match : String? = nil,
      if_generation_not_match : String? = nil,
      if_metageneration_match : String? = nil,
      if_metageneration_not_match : String? = nil,
      predefined_acl : String? = nil,
      projection : String? = nil,
      user_project : String? = nil,
      object2 : GoogleCloudStorage::Object? = nil
    ) : GoogleCloudStorage::Object
      data, _status_code, _headers = patch_with_http_info(bucket: bucket, object: object, alt: alt, fields: fields, key: key, oauth_token: oauth_token, pretty_print: pretty_print, quota_user: quota_user, upload_type: upload_type, user_ip: user_ip, generation: generation, if_generation_match: if_generation_match, if_generation_not_match: if_generation_not_match, if_metageneration_match: if_metageneration_match, if_metageneration_not_match: if_metageneration_not_match, predefined_acl: predefined_acl, projection: projection, user_project: user_project, object2: object2)
      data
    end

    # Patches an object&#39;s metadata.
    # @required @param bucket [String?] Name of the bucket in which the object resides.
    # @required @param object [String?] Name of the object. For information about how to URL encode object names to be path safe, see Encoding URI Path Parts.
    # @optional @param alt [String?] Data format for the response.
    # @optional @param fields [String?] Selector specifying which fields to include in a partial response.
    # @optional @param key [String?] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    # @optional @param oauth_token [String?] OAuth 2.0 token for the current user.
    # @optional @param pretty_print [Bool?] Returns response with indentations and line breaks.
    # @optional @param quota_user [String?] An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
    # @optional @param upload_type [String?] Upload protocol for media (e.g. \"media\", \"multipart\", \"resumable\").
    # @optional @param user_ip [String?] Deprecated. Please use quotaUser instead.
    # @optional @param generation [String?] If present, selects a specific revision of this object (as opposed to the latest version, the default).
    # @optional @param if_generation_match [String?] Makes the operation conditional on whether the object's current generation matches the given value. Setting to 0 makes the operation succeed only if there are no live versions of the object.
    # @optional @param if_generation_not_match [String?] Makes the operation conditional on whether the object's current generation does not match the given value. If no live object exists, the precondition fails. Setting to 0 makes the operation succeed only if there is a live version of the object.
    # @optional @param if_metageneration_match [String?] Makes the operation conditional on whether the object's current metageneration matches the given value.
    # @optional @param if_metageneration_not_match [String?] Makes the operation conditional on whether the object's current metageneration does not match the given value.
    # @optional @param predefined_acl [String?] Apply a predefined set of access controls to this object.
    # @optional @param projection [String?] Set of properties to return. Defaults to full.
    # @optional @param user_project [String?] The project to be billed for this request, for Requester Pays buckets.
    # @optional @param object2 [GoogleCloudStorage::Object?]
    # @return [Tuple(GoogleCloudStorage::Object, Integer, Hash)] GoogleCloudStorage::Object, response status code and response headers
    def patch_with_http_info(
      *,
      bucket : String? = nil,
      object : String? = nil,
      alt : String? = nil,
      fields : String? = nil,
      key : String? = nil,
      oauth_token : String? = nil,
      pretty_print : Bool? = nil,
      quota_user : String? = nil,
      upload_type : String? = nil,
      user_ip : String? = nil,
      generation : String? = nil,
      if_generation_match : String? = nil,
      if_generation_not_match : String? = nil,
      if_metageneration_match : String? = nil,
      if_metageneration_not_match : String? = nil,
      predefined_acl : String? = nil,
      projection : String? = nil,
      user_project : String? = nil,
      object2 : GoogleCloudStorage::Object? = nil
    ) : Tuple(GoogleCloudStorage::Object, Int32, Hash(String, Array(String) | String))
      request = build_api_request_for_patch(bucket: bucket, object: object, alt: alt, fields: fields, key: key, oauth_token: oauth_token, pretty_print: pretty_print, quota_user: quota_user, upload_type: upload_type, user_ip: user_ip, generation: generation, if_generation_match: if_generation_match, if_generation_not_match: if_generation_not_match, if_metageneration_match: if_metageneration_match, if_metageneration_not_match: if_metageneration_not_match, predefined_acl: predefined_acl, projection: projection, user_project: user_project, object2: object2)

      body, status_code, headers = @api_client.execute_api_request(request)

      if debugging?
        Log.debug { "API called: ObjectsApi#patch\nBody: #{body.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      Tuple.new(GoogleCloudStorage::Object.from_json(body), status_code, headers)
    end

    # Patches an object&#39;s metadata.
    # @required @param bucket [String?] Name of the bucket in which the object resides.
    # @required @param object [String?] Name of the object. For information about how to URL encode object names to be path safe, see Encoding URI Path Parts.
    # @optional @param alt [String?] Data format for the response.
    # @optional @param fields [String?] Selector specifying which fields to include in a partial response.
    # @optional @param key [String?] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    # @optional @param oauth_token [String?] OAuth 2.0 token for the current user.
    # @optional @param pretty_print [Bool?] Returns response with indentations and line breaks.
    # @optional @param quota_user [String?] An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
    # @optional @param upload_type [String?] Upload protocol for media (e.g. \"media\", \"multipart\", \"resumable\").
    # @optional @param user_ip [String?] Deprecated. Please use quotaUser instead.
    # @optional @param generation [String?] If present, selects a specific revision of this object (as opposed to the latest version, the default).
    # @optional @param if_generation_match [String?] Makes the operation conditional on whether the object's current generation matches the given value. Setting to 0 makes the operation succeed only if there are no live versions of the object.
    # @optional @param if_generation_not_match [String?] Makes the operation conditional on whether the object's current generation does not match the given value. If no live object exists, the precondition fails. Setting to 0 makes the operation succeed only if there is a live version of the object.
    # @optional @param if_metageneration_match [String?] Makes the operation conditional on whether the object's current metageneration matches the given value.
    # @optional @param if_metageneration_not_match [String?] Makes the operation conditional on whether the object's current metageneration does not match the given value.
    # @optional @param predefined_acl [String?] Apply a predefined set of access controls to this object.
    # @optional @param projection [String?] Set of properties to return. Defaults to full.
    # @optional @param user_project [String?] The project to be billed for this request, for Requester Pays buckets.
    # @optional @param object2 [GoogleCloudStorage::Object?]
    # @return nil
    def patch(
      *,
      bucket : String? = nil,
      object : String? = nil,
      alt : String? = nil,
      fields : String? = nil,
      key : String? = nil,
      oauth_token : String? = nil,
      pretty_print : Bool? = nil,
      quota_user : String? = nil,
      upload_type : String? = nil,
      user_ip : String? = nil,
      generation : String? = nil,
      if_generation_match : String? = nil,
      if_generation_not_match : String? = nil,
      if_metageneration_match : String? = nil,
      if_metageneration_not_match : String? = nil,
      predefined_acl : String? = nil,
      projection : String? = nil,
      user_project : String? = nil,
      object2 : GoogleCloudStorage::Object? = nil,
      &block : Crest::Response ->
    ) : Nil
      build_api_request_for_patch(bucket: bucket, object: object, alt: alt, fields: fields, key: key, oauth_token: oauth_token, pretty_print: pretty_print, quota_user: quota_user, upload_type: upload_type, user_ip: user_ip, generation: generation, if_generation_match: if_generation_match, if_generation_not_match: if_generation_not_match, if_metageneration_match: if_metageneration_match, if_metageneration_not_match: if_metageneration_not_match, predefined_acl: predefined_acl, projection: projection, user_project: user_project, object2: object2).execute(&block)
    end

    STORAGE_OBJECTS_PATCH_VALID_VALUES_FOR_ALT            = String.static_array("json", "media")
    STORAGE_OBJECTS_PATCH_VALID_VALUES_FOR_PREDEFINED_ACL = String.static_array("authenticatedRead", "bucketOwnerFullControl", "bucketOwnerRead", "private", "projectPrivate", "publicRead")
    STORAGE_OBJECTS_PATCH_VALID_VALUES_FOR_PROJECTION     = String.static_array("full", "noAcl")

    # @return Crest::Request
    def build_api_request_for_patch(
      *,
      bucket : String? = nil,
      object : String? = nil,
      alt : String? = nil,
      fields : String? = nil,
      key : String? = nil,
      oauth_token : String? = nil,
      pretty_print : Bool? = nil,
      quota_user : String? = nil,
      upload_type : String? = nil,
      user_ip : String? = nil,
      generation : String? = nil,
      if_generation_match : String? = nil,
      if_generation_not_match : String? = nil,
      if_metageneration_match : String? = nil,
      if_metageneration_not_match : String? = nil,
      predefined_acl : String? = nil,
      projection : String? = nil,
      user_project : String? = nil,
      object2 : GoogleCloudStorage::Object? = nil
    ) : Crest::Request
      if debugging?
        Log.debug { "Calling API: ObjectsApi.patch ..." }
      end

      if client_side_validation?
        raise ArgumentError.new("\"bucket\" is required and cannot be null") if bucket.nil?
        unless (_bucket = bucket).nil?
        end
        raise ArgumentError.new("\"object\" is required and cannot be null") if object.nil?
        unless (_object = object).nil?
        end
        unless (_alt = alt).nil?
          OpenApi::EnumValidator.validate("alt", _alt, STORAGE_OBJECTS_PATCH_VALID_VALUES_FOR_ALT)
        end
        unless (_fields = fields).nil?
        end
        unless (_key = key).nil?
        end
        unless (_oauth_token = oauth_token).nil?
        end
        unless (_pretty_print = pretty_print).nil?
        end
        unless (_quota_user = quota_user).nil?
        end
        unless (_upload_type = upload_type).nil?
        end
        unless (_user_ip = user_ip).nil?
        end
        unless (_generation = generation).nil?
        end
        unless (_if_generation_match = if_generation_match).nil?
        end
        unless (_if_generation_not_match = if_generation_not_match).nil?
        end
        unless (_if_metageneration_match = if_metageneration_match).nil?
        end
        unless (_if_metageneration_not_match = if_metageneration_not_match).nil?
        end
        unless (_predefined_acl = predefined_acl).nil?
          OpenApi::EnumValidator.validate("predefined_acl", _predefined_acl, STORAGE_OBJECTS_PATCH_VALID_VALUES_FOR_PREDEFINED_ACL)
        end
        unless (_projection = projection).nil?
          OpenApi::EnumValidator.validate("projection", _projection, STORAGE_OBJECTS_PATCH_VALID_VALUES_FOR_PROJECTION)
        end
        unless (_user_project = user_project).nil?
        end
        unless (_object2 = object2).nil?
          _object2.validate if _object2.is_a?(OpenApi::Validatable)
        end
      end

      # resource path
      local_var_path = "/storage/v1/b/{bucket}/o/{object}".sub("{" + "bucket" + "}", URI.encode_path(bucket.to_s)).sub("{" + "object" + "}", URI.encode_path(object.to_s))

      # header parameters
      header_params : Hash(String, String) = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])
      # HTTP header "Content-Type"
      header_params["Content-Type"] = @api_client.select_header_content_type(["application/json"])

      # cookie parameters
      cookie_params : Hash(String, String) = Hash(String, String).new

      # query parameters
      query_params : Hash(String, (String | Array(String) | JSON::Any)) = Hash(String, (String | Array(String) | JSON::Any)).new
      query_params["alt"] = alt.to_s if !alt.nil?
      query_params["fields"] = fields.to_s if !fields.nil?
      query_params["key"] = key.to_s if !key.nil?
      query_params["oauth_token"] = oauth_token.to_s if !oauth_token.nil?
      query_params["prettyPrint"] = pretty_print.to_s if !pretty_print.nil?
      query_params["quotaUser"] = quota_user.to_s if !quota_user.nil?
      query_params["uploadType"] = upload_type.to_s if !upload_type.nil?
      query_params["userIp"] = user_ip.to_s if !user_ip.nil?
      query_params["generation"] = generation.to_s if !generation.nil?
      query_params["ifGenerationMatch"] = if_generation_match.to_s if !if_generation_match.nil?
      query_params["ifGenerationNotMatch"] = if_generation_not_match.to_s if !if_generation_not_match.nil?
      query_params["ifMetagenerationMatch"] = if_metageneration_match.to_s if !if_metageneration_match.nil?
      query_params["ifMetagenerationNotMatch"] = if_metageneration_not_match.to_s if !if_metageneration_not_match.nil?
      query_params["predefinedAcl"] = predefined_acl.to_s if !predefined_acl.nil?
      query_params["projection"] = projection.to_s if !projection.nil?
      query_params["userProject"] = user_project.to_s if !user_project.nil?

      # form parameters
      form_params : Array(Tuple(String, Crest::ParamsValue)) | Nil = nil

      # http body (model)
      post_body : IO | String | Nil = @api_client.encode(body: object2, content_type: header_params["Content-Type"]?) if !object2.nil?

      # auth_names
      auth_names = ["Oauth2c", "Oauth2"]

      @api_client.build_api_request(
        http_method: :"PATCH",
        path: local_var_path,
        operation: "ObjectsApi.storage_objects_patch",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        cookie_params: cookie_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    # Rewrites a source object to a destination object. Optionally overrides metadata.
    # @required @param source_bucket [String?] Name of the bucket in which to find the source object.
    # @required @param source_object [String?] Name of the source object. For information about how to URL encode object names to be path safe, see Encoding URI Path Parts.
    # @required @param destination_bucket [String?] Name of the bucket in which to store the new object. Overrides the provided object metadata's bucket value, if any.
    # @required @param destination_object [String?] Name of the new object. Required when the object metadata is not otherwise provided. Overrides the object metadata's name value, if any. For information about how to URL encode object names to be path safe, see Encoding URI Path Parts.
    # @optional @param alt [String?] Data format for the response.
    # @optional @param fields [String?] Selector specifying which fields to include in a partial response.
    # @optional @param key [String?] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    # @optional @param oauth_token [String?] OAuth 2.0 token for the current user.
    # @optional @param pretty_print [Bool?] Returns response with indentations and line breaks.
    # @optional @param quota_user [String?] An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
    # @optional @param upload_type [String?] Upload protocol for media (e.g. \"media\", \"multipart\", \"resumable\").
    # @optional @param user_ip [String?] Deprecated. Please use quotaUser instead.
    # @optional @param destination_kms_key_name [String?] Resource name of the Cloud KMS key, of the form projects/my-project/locations/global/keyRings/my-kr/cryptoKeys/my-key, that will be used to encrypt the object. Overrides the object metadata's kms_key_name value, if any.
    # @optional @param destination_predefined_acl [String?] Apply a predefined set of access controls to the destination object.
    # @optional @param if_generation_match [String?] Makes the operation conditional on whether the object's current generation matches the given value. Setting to 0 makes the operation succeed only if there are no live versions of the object.
    # @optional @param if_generation_not_match [String?] Makes the operation conditional on whether the object's current generation does not match the given value. If no live object exists, the precondition fails. Setting to 0 makes the operation succeed only if there is a live version of the object.
    # @optional @param if_metageneration_match [String?] Makes the operation conditional on whether the destination object's current metageneration matches the given value.
    # @optional @param if_metageneration_not_match [String?] Makes the operation conditional on whether the destination object's current metageneration does not match the given value.
    # @optional @param if_source_generation_match [String?] Makes the operation conditional on whether the source object's current generation matches the given value.
    # @optional @param if_source_generation_not_match [String?] Makes the operation conditional on whether the source object's current generation does not match the given value.
    # @optional @param if_source_metageneration_match [String?] Makes the operation conditional on whether the source object's current metageneration matches the given value.
    # @optional @param if_source_metageneration_not_match [String?] Makes the operation conditional on whether the source object's current metageneration does not match the given value.
    # @optional @param max_bytes_rewritten_per_call [String?] The maximum number of bytes that will be rewritten per rewrite request. Most callers shouldn't need to specify this parameter - it is primarily in place to support testing. If specified the value must be an integral multiple of 1 MiB (1048576). Also, this only applies to requests where the source and destination span locations and/or storage classes. Finally, this value must not change across rewrite calls else you'll get an error that the rewriteToken is invalid.
    # @optional @param projection [String?] Set of properties to return. Defaults to noAcl, unless the object resource specifies the acl property, when it defaults to full.
    # @optional @param rewrite_token [String?] Include this field (from the previous rewrite response) on each rewrite request after the first one, until the rewrite response 'done' flag is true. Calls that provide a rewriteToken can omit all other request fields, but if included those fields must match the values provided in the first rewrite request.
    # @optional @param source_generation [String?] If present, selects a specific revision of the source object (as opposed to the latest version, the default).
    # @optional @param user_project [String?] The project to be billed for this request. Required for Requester Pays buckets.
    # @optional @param object [GoogleCloudStorage::Object?]
    # @return [GoogleCloudStorage::RewriteResponse]
    def rewrite(
      *,
      source_bucket : String? = nil,
      source_object : String? = nil,
      destination_bucket : String? = nil,
      destination_object : String? = nil,
      alt : String? = nil,
      fields : String? = nil,
      key : String? = nil,
      oauth_token : String? = nil,
      pretty_print : Bool? = nil,
      quota_user : String? = nil,
      upload_type : String? = nil,
      user_ip : String? = nil,
      destination_kms_key_name : String? = nil,
      destination_predefined_acl : String? = nil,
      if_generation_match : String? = nil,
      if_generation_not_match : String? = nil,
      if_metageneration_match : String? = nil,
      if_metageneration_not_match : String? = nil,
      if_source_generation_match : String? = nil,
      if_source_generation_not_match : String? = nil,
      if_source_metageneration_match : String? = nil,
      if_source_metageneration_not_match : String? = nil,
      max_bytes_rewritten_per_call : String? = nil,
      projection : String? = nil,
      rewrite_token : String? = nil,
      source_generation : String? = nil,
      user_project : String? = nil,
      object : GoogleCloudStorage::Object? = nil
    ) : GoogleCloudStorage::RewriteResponse
      data, _status_code, _headers = rewrite_with_http_info(source_bucket: source_bucket, source_object: source_object, destination_bucket: destination_bucket, destination_object: destination_object, alt: alt, fields: fields, key: key, oauth_token: oauth_token, pretty_print: pretty_print, quota_user: quota_user, upload_type: upload_type, user_ip: user_ip, destination_kms_key_name: destination_kms_key_name, destination_predefined_acl: destination_predefined_acl, if_generation_match: if_generation_match, if_generation_not_match: if_generation_not_match, if_metageneration_match: if_metageneration_match, if_metageneration_not_match: if_metageneration_not_match, if_source_generation_match: if_source_generation_match, if_source_generation_not_match: if_source_generation_not_match, if_source_metageneration_match: if_source_metageneration_match, if_source_metageneration_not_match: if_source_metageneration_not_match, max_bytes_rewritten_per_call: max_bytes_rewritten_per_call, projection: projection, rewrite_token: rewrite_token, source_generation: source_generation, user_project: user_project, object: object)
      data
    end

    # Rewrites a source object to a destination object. Optionally overrides metadata.
    # @required @param source_bucket [String?] Name of the bucket in which to find the source object.
    # @required @param source_object [String?] Name of the source object. For information about how to URL encode object names to be path safe, see Encoding URI Path Parts.
    # @required @param destination_bucket [String?] Name of the bucket in which to store the new object. Overrides the provided object metadata's bucket value, if any.
    # @required @param destination_object [String?] Name of the new object. Required when the object metadata is not otherwise provided. Overrides the object metadata's name value, if any. For information about how to URL encode object names to be path safe, see Encoding URI Path Parts.
    # @optional @param alt [String?] Data format for the response.
    # @optional @param fields [String?] Selector specifying which fields to include in a partial response.
    # @optional @param key [String?] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    # @optional @param oauth_token [String?] OAuth 2.0 token for the current user.
    # @optional @param pretty_print [Bool?] Returns response with indentations and line breaks.
    # @optional @param quota_user [String?] An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
    # @optional @param upload_type [String?] Upload protocol for media (e.g. \"media\", \"multipart\", \"resumable\").
    # @optional @param user_ip [String?] Deprecated. Please use quotaUser instead.
    # @optional @param destination_kms_key_name [String?] Resource name of the Cloud KMS key, of the form projects/my-project/locations/global/keyRings/my-kr/cryptoKeys/my-key, that will be used to encrypt the object. Overrides the object metadata's kms_key_name value, if any.
    # @optional @param destination_predefined_acl [String?] Apply a predefined set of access controls to the destination object.
    # @optional @param if_generation_match [String?] Makes the operation conditional on whether the object's current generation matches the given value. Setting to 0 makes the operation succeed only if there are no live versions of the object.
    # @optional @param if_generation_not_match [String?] Makes the operation conditional on whether the object's current generation does not match the given value. If no live object exists, the precondition fails. Setting to 0 makes the operation succeed only if there is a live version of the object.
    # @optional @param if_metageneration_match [String?] Makes the operation conditional on whether the destination object's current metageneration matches the given value.
    # @optional @param if_metageneration_not_match [String?] Makes the operation conditional on whether the destination object's current metageneration does not match the given value.
    # @optional @param if_source_generation_match [String?] Makes the operation conditional on whether the source object's current generation matches the given value.
    # @optional @param if_source_generation_not_match [String?] Makes the operation conditional on whether the source object's current generation does not match the given value.
    # @optional @param if_source_metageneration_match [String?] Makes the operation conditional on whether the source object's current metageneration matches the given value.
    # @optional @param if_source_metageneration_not_match [String?] Makes the operation conditional on whether the source object's current metageneration does not match the given value.
    # @optional @param max_bytes_rewritten_per_call [String?] The maximum number of bytes that will be rewritten per rewrite request. Most callers shouldn't need to specify this parameter - it is primarily in place to support testing. If specified the value must be an integral multiple of 1 MiB (1048576). Also, this only applies to requests where the source and destination span locations and/or storage classes. Finally, this value must not change across rewrite calls else you'll get an error that the rewriteToken is invalid.
    # @optional @param projection [String?] Set of properties to return. Defaults to noAcl, unless the object resource specifies the acl property, when it defaults to full.
    # @optional @param rewrite_token [String?] Include this field (from the previous rewrite response) on each rewrite request after the first one, until the rewrite response 'done' flag is true. Calls that provide a rewriteToken can omit all other request fields, but if included those fields must match the values provided in the first rewrite request.
    # @optional @param source_generation [String?] If present, selects a specific revision of the source object (as opposed to the latest version, the default).
    # @optional @param user_project [String?] The project to be billed for this request. Required for Requester Pays buckets.
    # @optional @param object [GoogleCloudStorage::Object?]
    # @return [Tuple(GoogleCloudStorage::RewriteResponse, Integer, Hash)] GoogleCloudStorage::RewriteResponse, response status code and response headers
    def rewrite_with_http_info(
      *,
      source_bucket : String? = nil,
      source_object : String? = nil,
      destination_bucket : String? = nil,
      destination_object : String? = nil,
      alt : String? = nil,
      fields : String? = nil,
      key : String? = nil,
      oauth_token : String? = nil,
      pretty_print : Bool? = nil,
      quota_user : String? = nil,
      upload_type : String? = nil,
      user_ip : String? = nil,
      destination_kms_key_name : String? = nil,
      destination_predefined_acl : String? = nil,
      if_generation_match : String? = nil,
      if_generation_not_match : String? = nil,
      if_metageneration_match : String? = nil,
      if_metageneration_not_match : String? = nil,
      if_source_generation_match : String? = nil,
      if_source_generation_not_match : String? = nil,
      if_source_metageneration_match : String? = nil,
      if_source_metageneration_not_match : String? = nil,
      max_bytes_rewritten_per_call : String? = nil,
      projection : String? = nil,
      rewrite_token : String? = nil,
      source_generation : String? = nil,
      user_project : String? = nil,
      object : GoogleCloudStorage::Object? = nil
    ) : Tuple(GoogleCloudStorage::RewriteResponse, Int32, Hash(String, Array(String) | String))
      request = build_api_request_for_rewrite(source_bucket: source_bucket, source_object: source_object, destination_bucket: destination_bucket, destination_object: destination_object, alt: alt, fields: fields, key: key, oauth_token: oauth_token, pretty_print: pretty_print, quota_user: quota_user, upload_type: upload_type, user_ip: user_ip, destination_kms_key_name: destination_kms_key_name, destination_predefined_acl: destination_predefined_acl, if_generation_match: if_generation_match, if_generation_not_match: if_generation_not_match, if_metageneration_match: if_metageneration_match, if_metageneration_not_match: if_metageneration_not_match, if_source_generation_match: if_source_generation_match, if_source_generation_not_match: if_source_generation_not_match, if_source_metageneration_match: if_source_metageneration_match, if_source_metageneration_not_match: if_source_metageneration_not_match, max_bytes_rewritten_per_call: max_bytes_rewritten_per_call, projection: projection, rewrite_token: rewrite_token, source_generation: source_generation, user_project: user_project, object: object)

      body, status_code, headers = @api_client.execute_api_request(request)

      if debugging?
        Log.debug { "API called: ObjectsApi#rewrite\nBody: #{body.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      Tuple.new(GoogleCloudStorage::RewriteResponse.from_json(body), status_code, headers)
    end

    # Rewrites a source object to a destination object. Optionally overrides metadata.
    # @required @param source_bucket [String?] Name of the bucket in which to find the source object.
    # @required @param source_object [String?] Name of the source object. For information about how to URL encode object names to be path safe, see Encoding URI Path Parts.
    # @required @param destination_bucket [String?] Name of the bucket in which to store the new object. Overrides the provided object metadata's bucket value, if any.
    # @required @param destination_object [String?] Name of the new object. Required when the object metadata is not otherwise provided. Overrides the object metadata's name value, if any. For information about how to URL encode object names to be path safe, see Encoding URI Path Parts.
    # @optional @param alt [String?] Data format for the response.
    # @optional @param fields [String?] Selector specifying which fields to include in a partial response.
    # @optional @param key [String?] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    # @optional @param oauth_token [String?] OAuth 2.0 token for the current user.
    # @optional @param pretty_print [Bool?] Returns response with indentations and line breaks.
    # @optional @param quota_user [String?] An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
    # @optional @param upload_type [String?] Upload protocol for media (e.g. \"media\", \"multipart\", \"resumable\").
    # @optional @param user_ip [String?] Deprecated. Please use quotaUser instead.
    # @optional @param destination_kms_key_name [String?] Resource name of the Cloud KMS key, of the form projects/my-project/locations/global/keyRings/my-kr/cryptoKeys/my-key, that will be used to encrypt the object. Overrides the object metadata's kms_key_name value, if any.
    # @optional @param destination_predefined_acl [String?] Apply a predefined set of access controls to the destination object.
    # @optional @param if_generation_match [String?] Makes the operation conditional on whether the object's current generation matches the given value. Setting to 0 makes the operation succeed only if there are no live versions of the object.
    # @optional @param if_generation_not_match [String?] Makes the operation conditional on whether the object's current generation does not match the given value. If no live object exists, the precondition fails. Setting to 0 makes the operation succeed only if there is a live version of the object.
    # @optional @param if_metageneration_match [String?] Makes the operation conditional on whether the destination object's current metageneration matches the given value.
    # @optional @param if_metageneration_not_match [String?] Makes the operation conditional on whether the destination object's current metageneration does not match the given value.
    # @optional @param if_source_generation_match [String?] Makes the operation conditional on whether the source object's current generation matches the given value.
    # @optional @param if_source_generation_not_match [String?] Makes the operation conditional on whether the source object's current generation does not match the given value.
    # @optional @param if_source_metageneration_match [String?] Makes the operation conditional on whether the source object's current metageneration matches the given value.
    # @optional @param if_source_metageneration_not_match [String?] Makes the operation conditional on whether the source object's current metageneration does not match the given value.
    # @optional @param max_bytes_rewritten_per_call [String?] The maximum number of bytes that will be rewritten per rewrite request. Most callers shouldn't need to specify this parameter - it is primarily in place to support testing. If specified the value must be an integral multiple of 1 MiB (1048576). Also, this only applies to requests where the source and destination span locations and/or storage classes. Finally, this value must not change across rewrite calls else you'll get an error that the rewriteToken is invalid.
    # @optional @param projection [String?] Set of properties to return. Defaults to noAcl, unless the object resource specifies the acl property, when it defaults to full.
    # @optional @param rewrite_token [String?] Include this field (from the previous rewrite response) on each rewrite request after the first one, until the rewrite response 'done' flag is true. Calls that provide a rewriteToken can omit all other request fields, but if included those fields must match the values provided in the first rewrite request.
    # @optional @param source_generation [String?] If present, selects a specific revision of the source object (as opposed to the latest version, the default).
    # @optional @param user_project [String?] The project to be billed for this request. Required for Requester Pays buckets.
    # @optional @param object [GoogleCloudStorage::Object?]
    # @return nil
    def rewrite(
      *,
      source_bucket : String? = nil,
      source_object : String? = nil,
      destination_bucket : String? = nil,
      destination_object : String? = nil,
      alt : String? = nil,
      fields : String? = nil,
      key : String? = nil,
      oauth_token : String? = nil,
      pretty_print : Bool? = nil,
      quota_user : String? = nil,
      upload_type : String? = nil,
      user_ip : String? = nil,
      destination_kms_key_name : String? = nil,
      destination_predefined_acl : String? = nil,
      if_generation_match : String? = nil,
      if_generation_not_match : String? = nil,
      if_metageneration_match : String? = nil,
      if_metageneration_not_match : String? = nil,
      if_source_generation_match : String? = nil,
      if_source_generation_not_match : String? = nil,
      if_source_metageneration_match : String? = nil,
      if_source_metageneration_not_match : String? = nil,
      max_bytes_rewritten_per_call : String? = nil,
      projection : String? = nil,
      rewrite_token : String? = nil,
      source_generation : String? = nil,
      user_project : String? = nil,
      object : GoogleCloudStorage::Object? = nil,
      &block : Crest::Response ->
    ) : Nil
      build_api_request_for_rewrite(source_bucket: source_bucket, source_object: source_object, destination_bucket: destination_bucket, destination_object: destination_object, alt: alt, fields: fields, key: key, oauth_token: oauth_token, pretty_print: pretty_print, quota_user: quota_user, upload_type: upload_type, user_ip: user_ip, destination_kms_key_name: destination_kms_key_name, destination_predefined_acl: destination_predefined_acl, if_generation_match: if_generation_match, if_generation_not_match: if_generation_not_match, if_metageneration_match: if_metageneration_match, if_metageneration_not_match: if_metageneration_not_match, if_source_generation_match: if_source_generation_match, if_source_generation_not_match: if_source_generation_not_match, if_source_metageneration_match: if_source_metageneration_match, if_source_metageneration_not_match: if_source_metageneration_not_match, max_bytes_rewritten_per_call: max_bytes_rewritten_per_call, projection: projection, rewrite_token: rewrite_token, source_generation: source_generation, user_project: user_project, object: object).execute(&block)
    end

    STORAGE_OBJECTS_REWRITE_VALID_VALUES_FOR_ALT                        = String.static_array("json", "media")
    STORAGE_OBJECTS_REWRITE_VALID_VALUES_FOR_DESTINATION_PREDEFINED_ACL = String.static_array("authenticatedRead", "bucketOwnerFullControl", "bucketOwnerRead", "private", "projectPrivate", "publicRead")
    STORAGE_OBJECTS_REWRITE_VALID_VALUES_FOR_PROJECTION                 = String.static_array("full", "noAcl")

    # @return Crest::Request
    def build_api_request_for_rewrite(
      *,
      source_bucket : String? = nil,
      source_object : String? = nil,
      destination_bucket : String? = nil,
      destination_object : String? = nil,
      alt : String? = nil,
      fields : String? = nil,
      key : String? = nil,
      oauth_token : String? = nil,
      pretty_print : Bool? = nil,
      quota_user : String? = nil,
      upload_type : String? = nil,
      user_ip : String? = nil,
      destination_kms_key_name : String? = nil,
      destination_predefined_acl : String? = nil,
      if_generation_match : String? = nil,
      if_generation_not_match : String? = nil,
      if_metageneration_match : String? = nil,
      if_metageneration_not_match : String? = nil,
      if_source_generation_match : String? = nil,
      if_source_generation_not_match : String? = nil,
      if_source_metageneration_match : String? = nil,
      if_source_metageneration_not_match : String? = nil,
      max_bytes_rewritten_per_call : String? = nil,
      projection : String? = nil,
      rewrite_token : String? = nil,
      source_generation : String? = nil,
      user_project : String? = nil,
      object : GoogleCloudStorage::Object? = nil
    ) : Crest::Request
      if debugging?
        Log.debug { "Calling API: ObjectsApi.rewrite ..." }
      end

      if client_side_validation?
        raise ArgumentError.new("\"source_bucket\" is required and cannot be null") if source_bucket.nil?
        unless (_source_bucket = source_bucket).nil?
        end
        raise ArgumentError.new("\"source_object\" is required and cannot be null") if source_object.nil?
        unless (_source_object = source_object).nil?
        end
        raise ArgumentError.new("\"destination_bucket\" is required and cannot be null") if destination_bucket.nil?
        unless (_destination_bucket = destination_bucket).nil?
        end
        raise ArgumentError.new("\"destination_object\" is required and cannot be null") if destination_object.nil?
        unless (_destination_object = destination_object).nil?
        end
        unless (_alt = alt).nil?
          OpenApi::EnumValidator.validate("alt", _alt, STORAGE_OBJECTS_REWRITE_VALID_VALUES_FOR_ALT)
        end
        unless (_fields = fields).nil?
        end
        unless (_key = key).nil?
        end
        unless (_oauth_token = oauth_token).nil?
        end
        unless (_pretty_print = pretty_print).nil?
        end
        unless (_quota_user = quota_user).nil?
        end
        unless (_upload_type = upload_type).nil?
        end
        unless (_user_ip = user_ip).nil?
        end
        unless (_destination_kms_key_name = destination_kms_key_name).nil?
        end
        unless (_destination_predefined_acl = destination_predefined_acl).nil?
          OpenApi::EnumValidator.validate("destination_predefined_acl", _destination_predefined_acl, STORAGE_OBJECTS_REWRITE_VALID_VALUES_FOR_DESTINATION_PREDEFINED_ACL)
        end
        unless (_if_generation_match = if_generation_match).nil?
        end
        unless (_if_generation_not_match = if_generation_not_match).nil?
        end
        unless (_if_metageneration_match = if_metageneration_match).nil?
        end
        unless (_if_metageneration_not_match = if_metageneration_not_match).nil?
        end
        unless (_if_source_generation_match = if_source_generation_match).nil?
        end
        unless (_if_source_generation_not_match = if_source_generation_not_match).nil?
        end
        unless (_if_source_metageneration_match = if_source_metageneration_match).nil?
        end
        unless (_if_source_metageneration_not_match = if_source_metageneration_not_match).nil?
        end
        unless (_max_bytes_rewritten_per_call = max_bytes_rewritten_per_call).nil?
        end
        unless (_projection = projection).nil?
          OpenApi::EnumValidator.validate("projection", _projection, STORAGE_OBJECTS_REWRITE_VALID_VALUES_FOR_PROJECTION)
        end
        unless (_rewrite_token = rewrite_token).nil?
        end
        unless (_source_generation = source_generation).nil?
        end
        unless (_user_project = user_project).nil?
        end
        unless (_object = object).nil?
          _object.validate if _object.is_a?(OpenApi::Validatable)
        end
      end

      # resource path
      local_var_path = "/storage/v1/b/{sourceBucket}/o/{sourceObject}/rewriteTo/b/{destinationBucket}/o/{destinationObject}".sub("{" + "sourceBucket" + "}", URI.encode_path(source_bucket.to_s)).sub("{" + "sourceObject" + "}", URI.encode_path(source_object.to_s)).sub("{" + "destinationBucket" + "}", URI.encode_path(destination_bucket.to_s)).sub("{" + "destinationObject" + "}", URI.encode_path(destination_object.to_s))

      # header parameters
      header_params : Hash(String, String) = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])
      # HTTP header "Content-Type"
      header_params["Content-Type"] = @api_client.select_header_content_type(["application/json"])

      # cookie parameters
      cookie_params : Hash(String, String) = Hash(String, String).new

      # query parameters
      query_params : Hash(String, (String | Array(String) | JSON::Any)) = Hash(String, (String | Array(String) | JSON::Any)).new
      query_params["alt"] = alt.to_s if !alt.nil?
      query_params["fields"] = fields.to_s if !fields.nil?
      query_params["key"] = key.to_s if !key.nil?
      query_params["oauth_token"] = oauth_token.to_s if !oauth_token.nil?
      query_params["prettyPrint"] = pretty_print.to_s if !pretty_print.nil?
      query_params["quotaUser"] = quota_user.to_s if !quota_user.nil?
      query_params["uploadType"] = upload_type.to_s if !upload_type.nil?
      query_params["userIp"] = user_ip.to_s if !user_ip.nil?
      query_params["destinationKmsKeyName"] = destination_kms_key_name.to_s if !destination_kms_key_name.nil?
      query_params["destinationPredefinedAcl"] = destination_predefined_acl.to_s if !destination_predefined_acl.nil?
      query_params["ifGenerationMatch"] = if_generation_match.to_s if !if_generation_match.nil?
      query_params["ifGenerationNotMatch"] = if_generation_not_match.to_s if !if_generation_not_match.nil?
      query_params["ifMetagenerationMatch"] = if_metageneration_match.to_s if !if_metageneration_match.nil?
      query_params["ifMetagenerationNotMatch"] = if_metageneration_not_match.to_s if !if_metageneration_not_match.nil?
      query_params["ifSourceGenerationMatch"] = if_source_generation_match.to_s if !if_source_generation_match.nil?
      query_params["ifSourceGenerationNotMatch"] = if_source_generation_not_match.to_s if !if_source_generation_not_match.nil?
      query_params["ifSourceMetagenerationMatch"] = if_source_metageneration_match.to_s if !if_source_metageneration_match.nil?
      query_params["ifSourceMetagenerationNotMatch"] = if_source_metageneration_not_match.to_s if !if_source_metageneration_not_match.nil?
      query_params["maxBytesRewrittenPerCall"] = max_bytes_rewritten_per_call.to_s if !max_bytes_rewritten_per_call.nil?
      query_params["projection"] = projection.to_s if !projection.nil?
      query_params["rewriteToken"] = rewrite_token.to_s if !rewrite_token.nil?
      query_params["sourceGeneration"] = source_generation.to_s if !source_generation.nil?
      query_params["userProject"] = user_project.to_s if !user_project.nil?

      # form parameters
      form_params : Array(Tuple(String, Crest::ParamsValue)) | Nil = nil

      # http body (model)
      post_body : IO | String | Nil = @api_client.encode(body: object, content_type: header_params["Content-Type"]?) if !object.nil?

      # auth_names
      auth_names = ["Oauth2c", "Oauth2"]

      @api_client.build_api_request(
        http_method: :"POST",
        path: local_var_path,
        operation: "ObjectsApi.storage_objects_rewrite",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        cookie_params: cookie_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    # Updates an IAM policy for the specified object.
    # @required @param bucket [String?] Name of the bucket in which the object resides.
    # @required @param object [String?] Name of the object. For information about how to URL encode object names to be path safe, see Encoding URI Path Parts.
    # @optional @param alt [String?] Data format for the response.
    # @optional @param fields [String?] Selector specifying which fields to include in a partial response.
    # @optional @param key [String?] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    # @optional @param oauth_token [String?] OAuth 2.0 token for the current user.
    # @optional @param pretty_print [Bool?] Returns response with indentations and line breaks.
    # @optional @param quota_user [String?] An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
    # @optional @param upload_type [String?] Upload protocol for media (e.g. \"media\", \"multipart\", \"resumable\").
    # @optional @param user_ip [String?] Deprecated. Please use quotaUser instead.
    # @optional @param generation [String?] If present, selects a specific revision of this object (as opposed to the latest version, the default).
    # @optional @param user_project [String?] The project to be billed for this request. Required for Requester Pays buckets.
    # @optional @param policy [GoogleCloudStorage::Policy?]
    # @return [GoogleCloudStorage::Policy]
    def set_iam_policy(
      *,
      bucket : String? = nil,
      object : String? = nil,
      alt : String? = nil,
      fields : String? = nil,
      key : String? = nil,
      oauth_token : String? = nil,
      pretty_print : Bool? = nil,
      quota_user : String? = nil,
      upload_type : String? = nil,
      user_ip : String? = nil,
      generation : String? = nil,
      user_project : String? = nil,
      policy : GoogleCloudStorage::Policy? = nil
    ) : GoogleCloudStorage::Policy
      data, _status_code, _headers = set_iam_policy_with_http_info(bucket: bucket, object: object, alt: alt, fields: fields, key: key, oauth_token: oauth_token, pretty_print: pretty_print, quota_user: quota_user, upload_type: upload_type, user_ip: user_ip, generation: generation, user_project: user_project, policy: policy)
      data
    end

    # Updates an IAM policy for the specified object.
    # @required @param bucket [String?] Name of the bucket in which the object resides.
    # @required @param object [String?] Name of the object. For information about how to URL encode object names to be path safe, see Encoding URI Path Parts.
    # @optional @param alt [String?] Data format for the response.
    # @optional @param fields [String?] Selector specifying which fields to include in a partial response.
    # @optional @param key [String?] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    # @optional @param oauth_token [String?] OAuth 2.0 token for the current user.
    # @optional @param pretty_print [Bool?] Returns response with indentations and line breaks.
    # @optional @param quota_user [String?] An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
    # @optional @param upload_type [String?] Upload protocol for media (e.g. \"media\", \"multipart\", \"resumable\").
    # @optional @param user_ip [String?] Deprecated. Please use quotaUser instead.
    # @optional @param generation [String?] If present, selects a specific revision of this object (as opposed to the latest version, the default).
    # @optional @param user_project [String?] The project to be billed for this request. Required for Requester Pays buckets.
    # @optional @param policy [GoogleCloudStorage::Policy?]
    # @return [Tuple(GoogleCloudStorage::Policy, Integer, Hash)] GoogleCloudStorage::Policy, response status code and response headers
    def set_iam_policy_with_http_info(
      *,
      bucket : String? = nil,
      object : String? = nil,
      alt : String? = nil,
      fields : String? = nil,
      key : String? = nil,
      oauth_token : String? = nil,
      pretty_print : Bool? = nil,
      quota_user : String? = nil,
      upload_type : String? = nil,
      user_ip : String? = nil,
      generation : String? = nil,
      user_project : String? = nil,
      policy : GoogleCloudStorage::Policy? = nil
    ) : Tuple(GoogleCloudStorage::Policy, Int32, Hash(String, Array(String) | String))
      request = build_api_request_for_set_iam_policy(bucket: bucket, object: object, alt: alt, fields: fields, key: key, oauth_token: oauth_token, pretty_print: pretty_print, quota_user: quota_user, upload_type: upload_type, user_ip: user_ip, generation: generation, user_project: user_project, policy: policy)

      body, status_code, headers = @api_client.execute_api_request(request)

      if debugging?
        Log.debug { "API called: ObjectsApi#set_iam_policy\nBody: #{body.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      Tuple.new(GoogleCloudStorage::Policy.from_json(body), status_code, headers)
    end

    # Updates an IAM policy for the specified object.
    # @required @param bucket [String?] Name of the bucket in which the object resides.
    # @required @param object [String?] Name of the object. For information about how to URL encode object names to be path safe, see Encoding URI Path Parts.
    # @optional @param alt [String?] Data format for the response.
    # @optional @param fields [String?] Selector specifying which fields to include in a partial response.
    # @optional @param key [String?] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    # @optional @param oauth_token [String?] OAuth 2.0 token for the current user.
    # @optional @param pretty_print [Bool?] Returns response with indentations and line breaks.
    # @optional @param quota_user [String?] An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
    # @optional @param upload_type [String?] Upload protocol for media (e.g. \"media\", \"multipart\", \"resumable\").
    # @optional @param user_ip [String?] Deprecated. Please use quotaUser instead.
    # @optional @param generation [String?] If present, selects a specific revision of this object (as opposed to the latest version, the default).
    # @optional @param user_project [String?] The project to be billed for this request. Required for Requester Pays buckets.
    # @optional @param policy [GoogleCloudStorage::Policy?]
    # @return nil
    def set_iam_policy(
      *,
      bucket : String? = nil,
      object : String? = nil,
      alt : String? = nil,
      fields : String? = nil,
      key : String? = nil,
      oauth_token : String? = nil,
      pretty_print : Bool? = nil,
      quota_user : String? = nil,
      upload_type : String? = nil,
      user_ip : String? = nil,
      generation : String? = nil,
      user_project : String? = nil,
      policy : GoogleCloudStorage::Policy? = nil,
      &block : Crest::Response ->
    ) : Nil
      build_api_request_for_set_iam_policy(bucket: bucket, object: object, alt: alt, fields: fields, key: key, oauth_token: oauth_token, pretty_print: pretty_print, quota_user: quota_user, upload_type: upload_type, user_ip: user_ip, generation: generation, user_project: user_project, policy: policy).execute(&block)
    end

    STORAGE_OBJECTS_SET_IAM_POLICY_VALID_VALUES_FOR_ALT = String.static_array("json", "media")

    # @return Crest::Request
    def build_api_request_for_set_iam_policy(
      *,
      bucket : String? = nil,
      object : String? = nil,
      alt : String? = nil,
      fields : String? = nil,
      key : String? = nil,
      oauth_token : String? = nil,
      pretty_print : Bool? = nil,
      quota_user : String? = nil,
      upload_type : String? = nil,
      user_ip : String? = nil,
      generation : String? = nil,
      user_project : String? = nil,
      policy : GoogleCloudStorage::Policy? = nil
    ) : Crest::Request
      if debugging?
        Log.debug { "Calling API: ObjectsApi.set_iam_policy ..." }
      end

      if client_side_validation?
        raise ArgumentError.new("\"bucket\" is required and cannot be null") if bucket.nil?
        unless (_bucket = bucket).nil?
        end
        raise ArgumentError.new("\"object\" is required and cannot be null") if object.nil?
        unless (_object = object).nil?
        end
        unless (_alt = alt).nil?
          OpenApi::EnumValidator.validate("alt", _alt, STORAGE_OBJECTS_SET_IAM_POLICY_VALID_VALUES_FOR_ALT)
        end
        unless (_fields = fields).nil?
        end
        unless (_key = key).nil?
        end
        unless (_oauth_token = oauth_token).nil?
        end
        unless (_pretty_print = pretty_print).nil?
        end
        unless (_quota_user = quota_user).nil?
        end
        unless (_upload_type = upload_type).nil?
        end
        unless (_user_ip = user_ip).nil?
        end
        unless (_generation = generation).nil?
        end
        unless (_user_project = user_project).nil?
        end
        unless (_policy = policy).nil?
          _policy.validate if _policy.is_a?(OpenApi::Validatable)
        end
      end

      # resource path
      local_var_path = "/storage/v1/b/{bucket}/o/{object}/iam".sub("{" + "bucket" + "}", URI.encode_path(bucket.to_s)).sub("{" + "object" + "}", URI.encode_path(object.to_s))

      # header parameters
      header_params : Hash(String, String) = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])
      # HTTP header "Content-Type"
      header_params["Content-Type"] = @api_client.select_header_content_type(["application/json"])

      # cookie parameters
      cookie_params : Hash(String, String) = Hash(String, String).new

      # query parameters
      query_params : Hash(String, (String | Array(String) | JSON::Any)) = Hash(String, (String | Array(String) | JSON::Any)).new
      query_params["alt"] = alt.to_s if !alt.nil?
      query_params["fields"] = fields.to_s if !fields.nil?
      query_params["key"] = key.to_s if !key.nil?
      query_params["oauth_token"] = oauth_token.to_s if !oauth_token.nil?
      query_params["prettyPrint"] = pretty_print.to_s if !pretty_print.nil?
      query_params["quotaUser"] = quota_user.to_s if !quota_user.nil?
      query_params["uploadType"] = upload_type.to_s if !upload_type.nil?
      query_params["userIp"] = user_ip.to_s if !user_ip.nil?
      query_params["generation"] = generation.to_s if !generation.nil?
      query_params["userProject"] = user_project.to_s if !user_project.nil?

      # form parameters
      form_params : Array(Tuple(String, Crest::ParamsValue)) | Nil = nil

      # http body (model)
      post_body : IO | String | Nil = @api_client.encode(body: policy, content_type: header_params["Content-Type"]?) if !policy.nil?

      # auth_names
      auth_names = ["Oauth2c", "Oauth2"]

      @api_client.build_api_request(
        http_method: :"PUT",
        path: local_var_path,
        operation: "ObjectsApi.storage_objects_set_iam_policy",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        cookie_params: cookie_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    # Tests a set of permissions on the given object to see which, if any, are held by the caller.
    # @required @param bucket [String?] Name of the bucket in which the object resides.
    # @required @param object [String?] Name of the object. For information about how to URL encode object names to be path safe, see Encoding URI Path Parts.
    # @required @param permissions [Array(String)?] Permissions to test.
    # @optional @param alt [String?] Data format for the response.
    # @optional @param fields [String?] Selector specifying which fields to include in a partial response.
    # @optional @param key [String?] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    # @optional @param oauth_token [String?] OAuth 2.0 token for the current user.
    # @optional @param pretty_print [Bool?] Returns response with indentations and line breaks.
    # @optional @param quota_user [String?] An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
    # @optional @param upload_type [String?] Upload protocol for media (e.g. \"media\", \"multipart\", \"resumable\").
    # @optional @param user_ip [String?] Deprecated. Please use quotaUser instead.
    # @optional @param generation [String?] If present, selects a specific revision of this object (as opposed to the latest version, the default).
    # @optional @param user_project [String?] The project to be billed for this request. Required for Requester Pays buckets.
    # @return [GoogleCloudStorage::TestIamPermissionsResponse]
    def test_iam_permissions(
      *,
      bucket : String? = nil,
      object : String? = nil,
      permissions : Array(String)? = nil,
      alt : String? = nil,
      fields : String? = nil,
      key : String? = nil,
      oauth_token : String? = nil,
      pretty_print : Bool? = nil,
      quota_user : String? = nil,
      upload_type : String? = nil,
      user_ip : String? = nil,
      generation : String? = nil,
      user_project : String? = nil
    ) : GoogleCloudStorage::TestIamPermissionsResponse
      data, _status_code, _headers = test_iam_permissions_with_http_info(bucket: bucket, object: object, permissions: permissions, alt: alt, fields: fields, key: key, oauth_token: oauth_token, pretty_print: pretty_print, quota_user: quota_user, upload_type: upload_type, user_ip: user_ip, generation: generation, user_project: user_project)
      data
    end

    # Tests a set of permissions on the given object to see which, if any, are held by the caller.
    # @required @param bucket [String?] Name of the bucket in which the object resides.
    # @required @param object [String?] Name of the object. For information about how to URL encode object names to be path safe, see Encoding URI Path Parts.
    # @required @param permissions [Array(String)?] Permissions to test.
    # @optional @param alt [String?] Data format for the response.
    # @optional @param fields [String?] Selector specifying which fields to include in a partial response.
    # @optional @param key [String?] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    # @optional @param oauth_token [String?] OAuth 2.0 token for the current user.
    # @optional @param pretty_print [Bool?] Returns response with indentations and line breaks.
    # @optional @param quota_user [String?] An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
    # @optional @param upload_type [String?] Upload protocol for media (e.g. \"media\", \"multipart\", \"resumable\").
    # @optional @param user_ip [String?] Deprecated. Please use quotaUser instead.
    # @optional @param generation [String?] If present, selects a specific revision of this object (as opposed to the latest version, the default).
    # @optional @param user_project [String?] The project to be billed for this request. Required for Requester Pays buckets.
    # @return [Tuple(GoogleCloudStorage::TestIamPermissionsResponse, Integer, Hash)] GoogleCloudStorage::TestIamPermissionsResponse, response status code and response headers
    def test_iam_permissions_with_http_info(
      *,
      bucket : String? = nil,
      object : String? = nil,
      permissions : Array(String)? = nil,
      alt : String? = nil,
      fields : String? = nil,
      key : String? = nil,
      oauth_token : String? = nil,
      pretty_print : Bool? = nil,
      quota_user : String? = nil,
      upload_type : String? = nil,
      user_ip : String? = nil,
      generation : String? = nil,
      user_project : String? = nil
    ) : Tuple(GoogleCloudStorage::TestIamPermissionsResponse, Int32, Hash(String, Array(String) | String))
      request = build_api_request_for_test_iam_permissions(bucket: bucket, object: object, permissions: permissions, alt: alt, fields: fields, key: key, oauth_token: oauth_token, pretty_print: pretty_print, quota_user: quota_user, upload_type: upload_type, user_ip: user_ip, generation: generation, user_project: user_project)

      body, status_code, headers = @api_client.execute_api_request(request)

      if debugging?
        Log.debug { "API called: ObjectsApi#test_iam_permissions\nBody: #{body.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      Tuple.new(GoogleCloudStorage::TestIamPermissionsResponse.from_json(body), status_code, headers)
    end

    # Tests a set of permissions on the given object to see which, if any, are held by the caller.
    # @required @param bucket [String?] Name of the bucket in which the object resides.
    # @required @param object [String?] Name of the object. For information about how to URL encode object names to be path safe, see Encoding URI Path Parts.
    # @required @param permissions [Array(String)?] Permissions to test.
    # @optional @param alt [String?] Data format for the response.
    # @optional @param fields [String?] Selector specifying which fields to include in a partial response.
    # @optional @param key [String?] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    # @optional @param oauth_token [String?] OAuth 2.0 token for the current user.
    # @optional @param pretty_print [Bool?] Returns response with indentations and line breaks.
    # @optional @param quota_user [String?] An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
    # @optional @param upload_type [String?] Upload protocol for media (e.g. \"media\", \"multipart\", \"resumable\").
    # @optional @param user_ip [String?] Deprecated. Please use quotaUser instead.
    # @optional @param generation [String?] If present, selects a specific revision of this object (as opposed to the latest version, the default).
    # @optional @param user_project [String?] The project to be billed for this request. Required for Requester Pays buckets.
    # @return nil
    def test_iam_permissions(
      *,
      bucket : String? = nil,
      object : String? = nil,
      permissions : Array(String)? = nil,
      alt : String? = nil,
      fields : String? = nil,
      key : String? = nil,
      oauth_token : String? = nil,
      pretty_print : Bool? = nil,
      quota_user : String? = nil,
      upload_type : String? = nil,
      user_ip : String? = nil,
      generation : String? = nil,
      user_project : String? = nil,
      &block : Crest::Response ->
    ) : Nil
      build_api_request_for_test_iam_permissions(bucket: bucket, object: object, permissions: permissions, alt: alt, fields: fields, key: key, oauth_token: oauth_token, pretty_print: pretty_print, quota_user: quota_user, upload_type: upload_type, user_ip: user_ip, generation: generation, user_project: user_project).execute(&block)
    end

    STORAGE_OBJECTS_TEST_IAM_PERMISSIONS_VALID_VALUES_FOR_ALT = String.static_array("json", "media")

    # @return Crest::Request
    def build_api_request_for_test_iam_permissions(
      *,
      bucket : String? = nil,
      object : String? = nil,
      permissions : Array(String)? = nil,
      alt : String? = nil,
      fields : String? = nil,
      key : String? = nil,
      oauth_token : String? = nil,
      pretty_print : Bool? = nil,
      quota_user : String? = nil,
      upload_type : String? = nil,
      user_ip : String? = nil,
      generation : String? = nil,
      user_project : String? = nil
    ) : Crest::Request
      if debugging?
        Log.debug { "Calling API: ObjectsApi.test_iam_permissions ..." }
      end

      if client_side_validation?
        raise ArgumentError.new("\"bucket\" is required and cannot be null") if bucket.nil?
        unless (_bucket = bucket).nil?
        end
        raise ArgumentError.new("\"object\" is required and cannot be null") if object.nil?
        unless (_object = object).nil?
        end
        raise ArgumentError.new("\"permissions\" is required and cannot be null") if permissions.nil?
        unless (_permissions = permissions).nil?
        end
        unless (_alt = alt).nil?
          OpenApi::EnumValidator.validate("alt", _alt, STORAGE_OBJECTS_TEST_IAM_PERMISSIONS_VALID_VALUES_FOR_ALT)
        end
        unless (_fields = fields).nil?
        end
        unless (_key = key).nil?
        end
        unless (_oauth_token = oauth_token).nil?
        end
        unless (_pretty_print = pretty_print).nil?
        end
        unless (_quota_user = quota_user).nil?
        end
        unless (_upload_type = upload_type).nil?
        end
        unless (_user_ip = user_ip).nil?
        end
        unless (_generation = generation).nil?
        end
        unless (_user_project = user_project).nil?
        end
      end

      # resource path
      local_var_path = "/storage/v1/b/{bucket}/o/{object}/iam/testPermissions".sub("{" + "bucket" + "}", URI.encode_path(bucket.to_s)).sub("{" + "object" + "}", URI.encode_path(object.to_s))

      # header parameters
      header_params : Hash(String, String) = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # cookie parameters
      cookie_params : Hash(String, String) = Hash(String, String).new

      # query parameters
      query_params : Hash(String, (String | Array(String) | JSON::Any)) = Hash(String, (String | Array(String) | JSON::Any)).new
      query_params["alt"] = alt.to_s if !alt.nil?
      query_params["fields"] = fields.to_s if !fields.nil?
      query_params["key"] = key.to_s if !key.nil?
      query_params["oauth_token"] = oauth_token.to_s if !oauth_token.nil?
      query_params["prettyPrint"] = pretty_print.to_s if !pretty_print.nil?
      query_params["quotaUser"] = quota_user.to_s if !quota_user.nil?
      query_params["uploadType"] = upload_type.to_s if !upload_type.nil?
      query_params["userIp"] = user_ip.to_s if !user_ip.nil?
      query_params["permissions"] = @api_client.build_collection_param(permissions, "multi") if !permissions.nil? && !permissions.empty?
      query_params["generation"] = generation.to_s if !generation.nil?
      query_params["userProject"] = user_project.to_s if !user_project.nil?

      # form parameters
      form_params : Array(Tuple(String, Crest::ParamsValue)) | Nil = nil

      # http body (model)
      post_body : IO | String | Nil = nil

      # auth_names
      auth_names = ["Oauth2c", "Oauth2"]

      @api_client.build_api_request(
        http_method: :"GET",
        path: local_var_path,
        operation: "ObjectsApi.storage_objects_test_iam_permissions",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        cookie_params: cookie_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    # Updates an object's metadata.
    # @required @param bucket [String?] Name of the bucket in which the object resides.
    # @required @param object [String?] Name of the object. For information about how to URL encode object names to be path safe, see Encoding URI Path Parts.
    # @optional @param alt [String?] Data format for the response.
    # @optional @param fields [String?] Selector specifying which fields to include in a partial response.
    # @optional @param key [String?] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    # @optional @param oauth_token [String?] OAuth 2.0 token for the current user.
    # @optional @param pretty_print [Bool?] Returns response with indentations and line breaks.
    # @optional @param quota_user [String?] An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
    # @optional @param upload_type [String?] Upload protocol for media (e.g. \"media\", \"multipart\", \"resumable\").
    # @optional @param user_ip [String?] Deprecated. Please use quotaUser instead.
    # @optional @param generation [String?] If present, selects a specific revision of this object (as opposed to the latest version, the default).
    # @optional @param if_generation_match [String?] Makes the operation conditional on whether the object's current generation matches the given value. Setting to 0 makes the operation succeed only if there are no live versions of the object.
    # @optional @param if_generation_not_match [String?] Makes the operation conditional on whether the object's current generation does not match the given value. If no live object exists, the precondition fails. Setting to 0 makes the operation succeed only if there is a live version of the object.
    # @optional @param if_metageneration_match [String?] Makes the operation conditional on whether the object's current metageneration matches the given value.
    # @optional @param if_metageneration_not_match [String?] Makes the operation conditional on whether the object's current metageneration does not match the given value.
    # @optional @param predefined_acl [String?] Apply a predefined set of access controls to this object.
    # @optional @param projection [String?] Set of properties to return. Defaults to full.
    # @optional @param user_project [String?] The project to be billed for this request. Required for Requester Pays buckets.
    # @optional @param object2 [GoogleCloudStorage::Object?]
    # @return [GoogleCloudStorage::Object]
    def update(
      *,
      bucket : String? = nil,
      object : String? = nil,
      alt : String? = nil,
      fields : String? = nil,
      key : String? = nil,
      oauth_token : String? = nil,
      pretty_print : Bool? = nil,
      quota_user : String? = nil,
      upload_type : String? = nil,
      user_ip : String? = nil,
      generation : String? = nil,
      if_generation_match : String? = nil,
      if_generation_not_match : String? = nil,
      if_metageneration_match : String? = nil,
      if_metageneration_not_match : String? = nil,
      predefined_acl : String? = nil,
      projection : String? = nil,
      user_project : String? = nil,
      object2 : GoogleCloudStorage::Object? = nil
    ) : GoogleCloudStorage::Object
      data, _status_code, _headers = update_with_http_info(bucket: bucket, object: object, alt: alt, fields: fields, key: key, oauth_token: oauth_token, pretty_print: pretty_print, quota_user: quota_user, upload_type: upload_type, user_ip: user_ip, generation: generation, if_generation_match: if_generation_match, if_generation_not_match: if_generation_not_match, if_metageneration_match: if_metageneration_match, if_metageneration_not_match: if_metageneration_not_match, predefined_acl: predefined_acl, projection: projection, user_project: user_project, object2: object2)
      data
    end

    # Updates an object&#39;s metadata.
    # @required @param bucket [String?] Name of the bucket in which the object resides.
    # @required @param object [String?] Name of the object. For information about how to URL encode object names to be path safe, see Encoding URI Path Parts.
    # @optional @param alt [String?] Data format for the response.
    # @optional @param fields [String?] Selector specifying which fields to include in a partial response.
    # @optional @param key [String?] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    # @optional @param oauth_token [String?] OAuth 2.0 token for the current user.
    # @optional @param pretty_print [Bool?] Returns response with indentations and line breaks.
    # @optional @param quota_user [String?] An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
    # @optional @param upload_type [String?] Upload protocol for media (e.g. \"media\", \"multipart\", \"resumable\").
    # @optional @param user_ip [String?] Deprecated. Please use quotaUser instead.
    # @optional @param generation [String?] If present, selects a specific revision of this object (as opposed to the latest version, the default).
    # @optional @param if_generation_match [String?] Makes the operation conditional on whether the object's current generation matches the given value. Setting to 0 makes the operation succeed only if there are no live versions of the object.
    # @optional @param if_generation_not_match [String?] Makes the operation conditional on whether the object's current generation does not match the given value. If no live object exists, the precondition fails. Setting to 0 makes the operation succeed only if there is a live version of the object.
    # @optional @param if_metageneration_match [String?] Makes the operation conditional on whether the object's current metageneration matches the given value.
    # @optional @param if_metageneration_not_match [String?] Makes the operation conditional on whether the object's current metageneration does not match the given value.
    # @optional @param predefined_acl [String?] Apply a predefined set of access controls to this object.
    # @optional @param projection [String?] Set of properties to return. Defaults to full.
    # @optional @param user_project [String?] The project to be billed for this request. Required for Requester Pays buckets.
    # @optional @param object2 [GoogleCloudStorage::Object?]
    # @return [Tuple(GoogleCloudStorage::Object, Integer, Hash)] GoogleCloudStorage::Object, response status code and response headers
    def update_with_http_info(
      *,
      bucket : String? = nil,
      object : String? = nil,
      alt : String? = nil,
      fields : String? = nil,
      key : String? = nil,
      oauth_token : String? = nil,
      pretty_print : Bool? = nil,
      quota_user : String? = nil,
      upload_type : String? = nil,
      user_ip : String? = nil,
      generation : String? = nil,
      if_generation_match : String? = nil,
      if_generation_not_match : String? = nil,
      if_metageneration_match : String? = nil,
      if_metageneration_not_match : String? = nil,
      predefined_acl : String? = nil,
      projection : String? = nil,
      user_project : String? = nil,
      object2 : GoogleCloudStorage::Object? = nil
    ) : Tuple(GoogleCloudStorage::Object, Int32, Hash(String, Array(String) | String))
      request = build_api_request_for_update(bucket: bucket, object: object, alt: alt, fields: fields, key: key, oauth_token: oauth_token, pretty_print: pretty_print, quota_user: quota_user, upload_type: upload_type, user_ip: user_ip, generation: generation, if_generation_match: if_generation_match, if_generation_not_match: if_generation_not_match, if_metageneration_match: if_metageneration_match, if_metageneration_not_match: if_metageneration_not_match, predefined_acl: predefined_acl, projection: projection, user_project: user_project, object2: object2)

      body, status_code, headers = @api_client.execute_api_request(request)

      if debugging?
        Log.debug { "API called: ObjectsApi#update\nBody: #{body.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      Tuple.new(GoogleCloudStorage::Object.from_json(body), status_code, headers)
    end

    # Updates an object&#39;s metadata.
    # @required @param bucket [String?] Name of the bucket in which the object resides.
    # @required @param object [String?] Name of the object. For information about how to URL encode object names to be path safe, see Encoding URI Path Parts.
    # @optional @param alt [String?] Data format for the response.
    # @optional @param fields [String?] Selector specifying which fields to include in a partial response.
    # @optional @param key [String?] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    # @optional @param oauth_token [String?] OAuth 2.0 token for the current user.
    # @optional @param pretty_print [Bool?] Returns response with indentations and line breaks.
    # @optional @param quota_user [String?] An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
    # @optional @param upload_type [String?] Upload protocol for media (e.g. \"media\", \"multipart\", \"resumable\").
    # @optional @param user_ip [String?] Deprecated. Please use quotaUser instead.
    # @optional @param generation [String?] If present, selects a specific revision of this object (as opposed to the latest version, the default).
    # @optional @param if_generation_match [String?] Makes the operation conditional on whether the object's current generation matches the given value. Setting to 0 makes the operation succeed only if there are no live versions of the object.
    # @optional @param if_generation_not_match [String?] Makes the operation conditional on whether the object's current generation does not match the given value. If no live object exists, the precondition fails. Setting to 0 makes the operation succeed only if there is a live version of the object.
    # @optional @param if_metageneration_match [String?] Makes the operation conditional on whether the object's current metageneration matches the given value.
    # @optional @param if_metageneration_not_match [String?] Makes the operation conditional on whether the object's current metageneration does not match the given value.
    # @optional @param predefined_acl [String?] Apply a predefined set of access controls to this object.
    # @optional @param projection [String?] Set of properties to return. Defaults to full.
    # @optional @param user_project [String?] The project to be billed for this request. Required for Requester Pays buckets.
    # @optional @param object2 [GoogleCloudStorage::Object?]
    # @return nil
    def update(
      *,
      bucket : String? = nil,
      object : String? = nil,
      alt : String? = nil,
      fields : String? = nil,
      key : String? = nil,
      oauth_token : String? = nil,
      pretty_print : Bool? = nil,
      quota_user : String? = nil,
      upload_type : String? = nil,
      user_ip : String? = nil,
      generation : String? = nil,
      if_generation_match : String? = nil,
      if_generation_not_match : String? = nil,
      if_metageneration_match : String? = nil,
      if_metageneration_not_match : String? = nil,
      predefined_acl : String? = nil,
      projection : String? = nil,
      user_project : String? = nil,
      object2 : GoogleCloudStorage::Object? = nil,
      &block : Crest::Response ->
    ) : Nil
      build_api_request_for_update(bucket: bucket, object: object, alt: alt, fields: fields, key: key, oauth_token: oauth_token, pretty_print: pretty_print, quota_user: quota_user, upload_type: upload_type, user_ip: user_ip, generation: generation, if_generation_match: if_generation_match, if_generation_not_match: if_generation_not_match, if_metageneration_match: if_metageneration_match, if_metageneration_not_match: if_metageneration_not_match, predefined_acl: predefined_acl, projection: projection, user_project: user_project, object2: object2).execute(&block)
    end

    STORAGE_OBJECTS_UPDATE_VALID_VALUES_FOR_ALT            = String.static_array("json", "media")
    STORAGE_OBJECTS_UPDATE_VALID_VALUES_FOR_PREDEFINED_ACL = String.static_array("authenticatedRead", "bucketOwnerFullControl", "bucketOwnerRead", "private", "projectPrivate", "publicRead")
    STORAGE_OBJECTS_UPDATE_VALID_VALUES_FOR_PROJECTION     = String.static_array("full", "noAcl")

    # @return Crest::Request
    def build_api_request_for_update(
      *,
      bucket : String? = nil,
      object : String? = nil,
      alt : String? = nil,
      fields : String? = nil,
      key : String? = nil,
      oauth_token : String? = nil,
      pretty_print : Bool? = nil,
      quota_user : String? = nil,
      upload_type : String? = nil,
      user_ip : String? = nil,
      generation : String? = nil,
      if_generation_match : String? = nil,
      if_generation_not_match : String? = nil,
      if_metageneration_match : String? = nil,
      if_metageneration_not_match : String? = nil,
      predefined_acl : String? = nil,
      projection : String? = nil,
      user_project : String? = nil,
      object2 : GoogleCloudStorage::Object? = nil
    ) : Crest::Request
      if debugging?
        Log.debug { "Calling API: ObjectsApi.update ..." }
      end

      if client_side_validation?
        raise ArgumentError.new("\"bucket\" is required and cannot be null") if bucket.nil?
        unless (_bucket = bucket).nil?
        end
        raise ArgumentError.new("\"object\" is required and cannot be null") if object.nil?
        unless (_object = object).nil?
        end
        unless (_alt = alt).nil?
          OpenApi::EnumValidator.validate("alt", _alt, STORAGE_OBJECTS_UPDATE_VALID_VALUES_FOR_ALT)
        end
        unless (_fields = fields).nil?
        end
        unless (_key = key).nil?
        end
        unless (_oauth_token = oauth_token).nil?
        end
        unless (_pretty_print = pretty_print).nil?
        end
        unless (_quota_user = quota_user).nil?
        end
        unless (_upload_type = upload_type).nil?
        end
        unless (_user_ip = user_ip).nil?
        end
        unless (_generation = generation).nil?
        end
        unless (_if_generation_match = if_generation_match).nil?
        end
        unless (_if_generation_not_match = if_generation_not_match).nil?
        end
        unless (_if_metageneration_match = if_metageneration_match).nil?
        end
        unless (_if_metageneration_not_match = if_metageneration_not_match).nil?
        end
        unless (_predefined_acl = predefined_acl).nil?
          OpenApi::EnumValidator.validate("predefined_acl", _predefined_acl, STORAGE_OBJECTS_UPDATE_VALID_VALUES_FOR_PREDEFINED_ACL)
        end
        unless (_projection = projection).nil?
          OpenApi::EnumValidator.validate("projection", _projection, STORAGE_OBJECTS_UPDATE_VALID_VALUES_FOR_PROJECTION)
        end
        unless (_user_project = user_project).nil?
        end
        unless (_object2 = object2).nil?
          _object2.validate if _object2.is_a?(OpenApi::Validatable)
        end
      end

      # resource path
      local_var_path = "/storage/v1/b/{bucket}/o/{object}".sub("{" + "bucket" + "}", URI.encode_path(bucket.to_s)).sub("{" + "object" + "}", URI.encode_path(object.to_s))

      # header parameters
      header_params : Hash(String, String) = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])
      # HTTP header "Content-Type"
      header_params["Content-Type"] = @api_client.select_header_content_type(["application/json"])

      # cookie parameters
      cookie_params : Hash(String, String) = Hash(String, String).new

      # query parameters
      query_params : Hash(String, (String | Array(String) | JSON::Any)) = Hash(String, (String | Array(String) | JSON::Any)).new
      query_params["alt"] = alt.to_s if !alt.nil?
      query_params["fields"] = fields.to_s if !fields.nil?
      query_params["key"] = key.to_s if !key.nil?
      query_params["oauth_token"] = oauth_token.to_s if !oauth_token.nil?
      query_params["prettyPrint"] = pretty_print.to_s if !pretty_print.nil?
      query_params["quotaUser"] = quota_user.to_s if !quota_user.nil?
      query_params["uploadType"] = upload_type.to_s if !upload_type.nil?
      query_params["userIp"] = user_ip.to_s if !user_ip.nil?
      query_params["generation"] = generation.to_s if !generation.nil?
      query_params["ifGenerationMatch"] = if_generation_match.to_s if !if_generation_match.nil?
      query_params["ifGenerationNotMatch"] = if_generation_not_match.to_s if !if_generation_not_match.nil?
      query_params["ifMetagenerationMatch"] = if_metageneration_match.to_s if !if_metageneration_match.nil?
      query_params["ifMetagenerationNotMatch"] = if_metageneration_not_match.to_s if !if_metageneration_not_match.nil?
      query_params["predefinedAcl"] = predefined_acl.to_s if !predefined_acl.nil?
      query_params["projection"] = projection.to_s if !projection.nil?
      query_params["userProject"] = user_project.to_s if !user_project.nil?

      # form parameters
      form_params : Array(Tuple(String, Crest::ParamsValue)) | Nil = nil

      # http body (model)
      post_body : IO | String | Nil = @api_client.encode(body: object2, content_type: header_params["Content-Type"]?) if !object2.nil?

      # auth_names
      auth_names = ["Oauth2c", "Oauth2"]

      @api_client.build_api_request(
        http_method: :"PUT",
        path: local_var_path,
        operation: "ObjectsApi.storage_objects_update",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        cookie_params: cookie_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    # Watch for changes on all objects in a bucket.
    # @required @param bucket [String?] Name of the bucket in which to look for objects.
    # @optional @param alt [String?] Data format for the response.
    # @optional @param fields [String?] Selector specifying which fields to include in a partial response.
    # @optional @param key [String?] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    # @optional @param oauth_token [String?] OAuth 2.0 token for the current user.
    # @optional @param pretty_print [Bool?] Returns response with indentations and line breaks.
    # @optional @param quota_user [String?] An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
    # @optional @param upload_type [String?] Upload protocol for media (e.g. \"media\", \"multipart\", \"resumable\").
    # @optional @param user_ip [String?] Deprecated. Please use quotaUser instead.
    # @optional @param delimiter [String?] Returns results in a directory-like mode. items will contain only objects whose names, aside from the prefix, do not contain delimiter. Objects whose names, aside from the prefix, contain delimiter will have their name, truncated after the delimiter, returned in prefixes. Duplicate prefixes are omitted.
    # @optional @param end_offset [String?] Filter results to objects whose names are lexicographically before endOffset. If startOffset is also set, the objects listed will have names between startOffset (inclusive) and endOffset (exclusive).
    # @optional @param include_trailing_delimiter [Bool?] If true, objects that end in exactly one instance of delimiter will have their metadata included in items in addition to prefixes.
    # @optional @param max_results [Int32?] Maximum number of items plus prefixes to return in a single page of responses. As duplicate prefixes are omitted, fewer total results may be returned than requested. The service will use this parameter or 1,000 items, whichever is smaller.
    # @optional @param page_token [String?] A previously-returned page token representing part of the larger set of results to view.
    # @optional @param prefix [String?] Filter results to objects whose names begin with this prefix.
    # @optional @param projection [String?] Set of properties to return. Defaults to noAcl.
    # @optional @param start_offset [String?] Filter results to objects whose names are lexicographically equal to or after startOffset. If endOffset is also set, the objects listed will have names between startOffset (inclusive) and endOffset (exclusive).
    # @optional @param user_project [String?] The project to be billed for this request. Required for Requester Pays buckets.
    # @optional @param versions [Bool?] If true, lists all versions of an object as distinct results. The default is false. For more information, see Object Versioning.
    # @optional @param channel [GoogleCloudStorage::Channel?]
    # @return [GoogleCloudStorage::Channel]
    def watch_all(
      *,
      bucket : String? = nil,
      alt : String? = nil,
      fields : String? = nil,
      key : String? = nil,
      oauth_token : String? = nil,
      pretty_print : Bool? = nil,
      quota_user : String? = nil,
      upload_type : String? = nil,
      user_ip : String? = nil,
      delimiter : String? = nil,
      end_offset : String? = nil,
      include_trailing_delimiter : Bool? = nil,
      max_results : Int32? = nil,
      page_token : String? = nil,
      prefix : String? = nil,
      projection : String? = nil,
      start_offset : String? = nil,
      user_project : String? = nil,
      versions : Bool? = nil,
      channel : GoogleCloudStorage::Channel? = nil
    ) : GoogleCloudStorage::Channel
      data, _status_code, _headers = watch_all_with_http_info(bucket: bucket, alt: alt, fields: fields, key: key, oauth_token: oauth_token, pretty_print: pretty_print, quota_user: quota_user, upload_type: upload_type, user_ip: user_ip, delimiter: delimiter, end_offset: end_offset, include_trailing_delimiter: include_trailing_delimiter, max_results: max_results, page_token: page_token, prefix: prefix, projection: projection, start_offset: start_offset, user_project: user_project, versions: versions, channel: channel)
      data
    end

    # Watch for changes on all objects in a bucket.
    # @required @param bucket [String?] Name of the bucket in which to look for objects.
    # @optional @param alt [String?] Data format for the response.
    # @optional @param fields [String?] Selector specifying which fields to include in a partial response.
    # @optional @param key [String?] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    # @optional @param oauth_token [String?] OAuth 2.0 token for the current user.
    # @optional @param pretty_print [Bool?] Returns response with indentations and line breaks.
    # @optional @param quota_user [String?] An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
    # @optional @param upload_type [String?] Upload protocol for media (e.g. \"media\", \"multipart\", \"resumable\").
    # @optional @param user_ip [String?] Deprecated. Please use quotaUser instead.
    # @optional @param delimiter [String?] Returns results in a directory-like mode. items will contain only objects whose names, aside from the prefix, do not contain delimiter. Objects whose names, aside from the prefix, contain delimiter will have their name, truncated after the delimiter, returned in prefixes. Duplicate prefixes are omitted.
    # @optional @param end_offset [String?] Filter results to objects whose names are lexicographically before endOffset. If startOffset is also set, the objects listed will have names between startOffset (inclusive) and endOffset (exclusive).
    # @optional @param include_trailing_delimiter [Bool?] If true, objects that end in exactly one instance of delimiter will have their metadata included in items in addition to prefixes.
    # @optional @param max_results [Int32?] Maximum number of items plus prefixes to return in a single page of responses. As duplicate prefixes are omitted, fewer total results may be returned than requested. The service will use this parameter or 1,000 items, whichever is smaller.
    # @optional @param page_token [String?] A previously-returned page token representing part of the larger set of results to view.
    # @optional @param prefix [String?] Filter results to objects whose names begin with this prefix.
    # @optional @param projection [String?] Set of properties to return. Defaults to noAcl.
    # @optional @param start_offset [String?] Filter results to objects whose names are lexicographically equal to or after startOffset. If endOffset is also set, the objects listed will have names between startOffset (inclusive) and endOffset (exclusive).
    # @optional @param user_project [String?] The project to be billed for this request. Required for Requester Pays buckets.
    # @optional @param versions [Bool?] If true, lists all versions of an object as distinct results. The default is false. For more information, see Object Versioning.
    # @optional @param channel [GoogleCloudStorage::Channel?]
    # @return [Tuple(GoogleCloudStorage::Channel, Integer, Hash)] GoogleCloudStorage::Channel, response status code and response headers
    def watch_all_with_http_info(
      *,
      bucket : String? = nil,
      alt : String? = nil,
      fields : String? = nil,
      key : String? = nil,
      oauth_token : String? = nil,
      pretty_print : Bool? = nil,
      quota_user : String? = nil,
      upload_type : String? = nil,
      user_ip : String? = nil,
      delimiter : String? = nil,
      end_offset : String? = nil,
      include_trailing_delimiter : Bool? = nil,
      max_results : Int32? = nil,
      page_token : String? = nil,
      prefix : String? = nil,
      projection : String? = nil,
      start_offset : String? = nil,
      user_project : String? = nil,
      versions : Bool? = nil,
      channel : GoogleCloudStorage::Channel? = nil
    ) : Tuple(GoogleCloudStorage::Channel, Int32, Hash(String, Array(String) | String))
      request = build_api_request_for_watch_all(bucket: bucket, alt: alt, fields: fields, key: key, oauth_token: oauth_token, pretty_print: pretty_print, quota_user: quota_user, upload_type: upload_type, user_ip: user_ip, delimiter: delimiter, end_offset: end_offset, include_trailing_delimiter: include_trailing_delimiter, max_results: max_results, page_token: page_token, prefix: prefix, projection: projection, start_offset: start_offset, user_project: user_project, versions: versions, channel: channel)

      body, status_code, headers = @api_client.execute_api_request(request)

      if debugging?
        Log.debug { "API called: ObjectsApi#watch_all\nBody: #{body.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      Tuple.new(GoogleCloudStorage::Channel.from_json(body), status_code, headers)
    end

    # Watch for changes on all objects in a bucket.
    # @required @param bucket [String?] Name of the bucket in which to look for objects.
    # @optional @param alt [String?] Data format for the response.
    # @optional @param fields [String?] Selector specifying which fields to include in a partial response.
    # @optional @param key [String?] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    # @optional @param oauth_token [String?] OAuth 2.0 token for the current user.
    # @optional @param pretty_print [Bool?] Returns response with indentations and line breaks.
    # @optional @param quota_user [String?] An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
    # @optional @param upload_type [String?] Upload protocol for media (e.g. \"media\", \"multipart\", \"resumable\").
    # @optional @param user_ip [String?] Deprecated. Please use quotaUser instead.
    # @optional @param delimiter [String?] Returns results in a directory-like mode. items will contain only objects whose names, aside from the prefix, do not contain delimiter. Objects whose names, aside from the prefix, contain delimiter will have their name, truncated after the delimiter, returned in prefixes. Duplicate prefixes are omitted.
    # @optional @param end_offset [String?] Filter results to objects whose names are lexicographically before endOffset. If startOffset is also set, the objects listed will have names between startOffset (inclusive) and endOffset (exclusive).
    # @optional @param include_trailing_delimiter [Bool?] If true, objects that end in exactly one instance of delimiter will have their metadata included in items in addition to prefixes.
    # @optional @param max_results [Int32?] Maximum number of items plus prefixes to return in a single page of responses. As duplicate prefixes are omitted, fewer total results may be returned than requested. The service will use this parameter or 1,000 items, whichever is smaller.
    # @optional @param page_token [String?] A previously-returned page token representing part of the larger set of results to view.
    # @optional @param prefix [String?] Filter results to objects whose names begin with this prefix.
    # @optional @param projection [String?] Set of properties to return. Defaults to noAcl.
    # @optional @param start_offset [String?] Filter results to objects whose names are lexicographically equal to or after startOffset. If endOffset is also set, the objects listed will have names between startOffset (inclusive) and endOffset (exclusive).
    # @optional @param user_project [String?] The project to be billed for this request. Required for Requester Pays buckets.
    # @optional @param versions [Bool?] If true, lists all versions of an object as distinct results. The default is false. For more information, see Object Versioning.
    # @optional @param channel [GoogleCloudStorage::Channel?]
    # @return nil
    def watch_all(
      *,
      bucket : String? = nil,
      alt : String? = nil,
      fields : String? = nil,
      key : String? = nil,
      oauth_token : String? = nil,
      pretty_print : Bool? = nil,
      quota_user : String? = nil,
      upload_type : String? = nil,
      user_ip : String? = nil,
      delimiter : String? = nil,
      end_offset : String? = nil,
      include_trailing_delimiter : Bool? = nil,
      max_results : Int32? = nil,
      page_token : String? = nil,
      prefix : String? = nil,
      projection : String? = nil,
      start_offset : String? = nil,
      user_project : String? = nil,
      versions : Bool? = nil,
      channel : GoogleCloudStorage::Channel? = nil,
      &block : Crest::Response ->
    ) : Nil
      build_api_request_for_watch_all(bucket: bucket, alt: alt, fields: fields, key: key, oauth_token: oauth_token, pretty_print: pretty_print, quota_user: quota_user, upload_type: upload_type, user_ip: user_ip, delimiter: delimiter, end_offset: end_offset, include_trailing_delimiter: include_trailing_delimiter, max_results: max_results, page_token: page_token, prefix: prefix, projection: projection, start_offset: start_offset, user_project: user_project, versions: versions, channel: channel).execute(&block)
    end

    STORAGE_OBJECTS_WATCH_ALL_VALID_VALUES_FOR_ALT        = String.static_array("json", "media")
    STORAGE_OBJECTS_WATCH_ALL_MIN_FOR_MAX_RESULTS         = Int32.new("0")
    STORAGE_OBJECTS_WATCH_ALL_VALID_VALUES_FOR_PROJECTION = String.static_array("full", "noAcl")

    # @return Crest::Request
    def build_api_request_for_watch_all(
      *,
      bucket : String? = nil,
      alt : String? = nil,
      fields : String? = nil,
      key : String? = nil,
      oauth_token : String? = nil,
      pretty_print : Bool? = nil,
      quota_user : String? = nil,
      upload_type : String? = nil,
      user_ip : String? = nil,
      delimiter : String? = nil,
      end_offset : String? = nil,
      include_trailing_delimiter : Bool? = nil,
      max_results : Int32? = nil,
      page_token : String? = nil,
      prefix : String? = nil,
      projection : String? = nil,
      start_offset : String? = nil,
      user_project : String? = nil,
      versions : Bool? = nil,
      channel : GoogleCloudStorage::Channel? = nil
    ) : Crest::Request
      if debugging?
        Log.debug { "Calling API: ObjectsApi.watch_all ..." }
      end

      if client_side_validation?
        raise ArgumentError.new("\"bucket\" is required and cannot be null") if bucket.nil?
        unless (_bucket = bucket).nil?
        end
        unless (_alt = alt).nil?
          OpenApi::EnumValidator.validate("alt", _alt, STORAGE_OBJECTS_WATCH_ALL_VALID_VALUES_FOR_ALT)
        end
        unless (_fields = fields).nil?
        end
        unless (_key = key).nil?
        end
        unless (_oauth_token = oauth_token).nil?
        end
        unless (_pretty_print = pretty_print).nil?
        end
        unless (_quota_user = quota_user).nil?
        end
        unless (_upload_type = upload_type).nil?
        end
        unless (_user_ip = user_ip).nil?
        end
        unless (_delimiter = delimiter).nil?
        end
        unless (_end_offset = end_offset).nil?
        end
        unless (_include_trailing_delimiter = include_trailing_delimiter).nil?
        end
        unless (_max_results = max_results).nil?
          OpenApi::PrimitiveValidator.validate_min_number("max_results", _max_results, STORAGE_OBJECTS_WATCH_ALL_MIN_FOR_MAX_RESULTS)
        end
        unless (_page_token = page_token).nil?
        end
        unless (_prefix = prefix).nil?
        end
        unless (_projection = projection).nil?
          OpenApi::EnumValidator.validate("projection", _projection, STORAGE_OBJECTS_WATCH_ALL_VALID_VALUES_FOR_PROJECTION)
        end
        unless (_start_offset = start_offset).nil?
        end
        unless (_user_project = user_project).nil?
        end
        unless (_versions = versions).nil?
        end
        unless (_channel = channel).nil?
          _channel.validate if _channel.is_a?(OpenApi::Validatable)
        end
      end

      # resource path
      local_var_path = "/storage/v1/b/{bucket}/o/watch".sub("{" + "bucket" + "}", URI.encode_path(bucket.to_s))

      # header parameters
      header_params : Hash(String, String) = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])
      # HTTP header "Content-Type"
      header_params["Content-Type"] = @api_client.select_header_content_type(["application/json"])

      # cookie parameters
      cookie_params : Hash(String, String) = Hash(String, String).new

      # query parameters
      query_params : Hash(String, (String | Array(String) | JSON::Any)) = Hash(String, (String | Array(String) | JSON::Any)).new
      query_params["alt"] = alt.to_s if !alt.nil?
      query_params["fields"] = fields.to_s if !fields.nil?
      query_params["key"] = key.to_s if !key.nil?
      query_params["oauth_token"] = oauth_token.to_s if !oauth_token.nil?
      query_params["prettyPrint"] = pretty_print.to_s if !pretty_print.nil?
      query_params["quotaUser"] = quota_user.to_s if !quota_user.nil?
      query_params["uploadType"] = upload_type.to_s if !upload_type.nil?
      query_params["userIp"] = user_ip.to_s if !user_ip.nil?
      query_params["delimiter"] = delimiter.to_s if !delimiter.nil?
      query_params["endOffset"] = end_offset.to_s if !end_offset.nil?
      query_params["includeTrailingDelimiter"] = include_trailing_delimiter.to_s if !include_trailing_delimiter.nil?
      query_params["maxResults"] = max_results.to_s if !max_results.nil?
      query_params["pageToken"] = page_token.to_s if !page_token.nil?
      query_params["prefix"] = prefix.to_s if !prefix.nil?
      query_params["projection"] = projection.to_s if !projection.nil?
      query_params["startOffset"] = start_offset.to_s if !start_offset.nil?
      query_params["userProject"] = user_project.to_s if !user_project.nil?
      query_params["versions"] = versions.to_s if !versions.nil?

      # form parameters
      form_params : Array(Tuple(String, Crest::ParamsValue)) | Nil = nil

      # http body (model)
      post_body : IO | String | Nil = @api_client.encode(body: channel, content_type: header_params["Content-Type"]?) if !channel.nil?

      # auth_names
      auth_names = ["Oauth2c", "Oauth2"]

      @api_client.build_api_request(
        http_method: :"POST",
        path: local_var_path,
        operation: "ObjectsApi.storage_objects_watch_all",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        cookie_params: cookie_params,
        query_params: query_params,
        form_params: form_params
      )
    end
  end
end
