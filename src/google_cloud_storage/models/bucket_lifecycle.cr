#  Cloud Storage JSON API
#
# Stores and retrieves potentially large, immutable data objects.
#
# The version of the OpenAPI document: v1
#
# Generated by: https://openapi-generator.tech
#

require "../../core"

require "./bucket_lifecycle_rule_inner"

module GoogleCloudStorage
  # The bucket's lifecycle configuration. See lifecycle management for more information.
  class BucketLifecycle
    include JSON::Serializable
    include JSON::Serializable::Unmapped
    include OpenApi::Validatable
    include OpenApi::Json

    # Optional Properties

    # A lifecycle management rule, which is made of an action to take and the condition(s) under which the action will be taken.
    @[JSON::Field(key: "rule", type: Array(GoogleCloudStorage::BucketLifecycleRuleInner)?, default: nil, required: false, nullable: false, emit_null: false)]
    getter rule : Array(GoogleCloudStorage::BucketLifecycleRuleInner)? = nil

    # Initializes the object
    # @param [Hash] attributes Model attributes in the form of hash
    def initialize(
      *,
      # Optional properties
      @rule : Array(GoogleCloudStorage::BucketLifecycleRuleInner)? = nil
    )
    end

    # Show invalid properties with the reasons. Usually used together with valid?
    # @return Array for valid properties with the reasons
    def list_invalid_properties : Array(String)
      invalid_properties = Array(String).new

      unless (_rule = @rule).nil?
        invalid_properties.concat(OpenApi::ContainerValidator.list_invalid_properties_for(key: "rule", container: _rule)) if _rule.is_a?(Array)
      end
      invalid_properties
    end

    # Check to see if the all the properties in the model are valid
    # @return true if the model is valid
    def valid? : Bool
      unless (_rule = @rule).nil?
        return false if _rule.is_a?(Array) && !OpenApi::ContainerValidator.valid?(container: _rule)
      end

      true
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] rule Object to be assigned
    def rule=(new_value : Array(GoogleCloudStorage::BucketLifecycleRuleInner)?)
      unless new_value.nil?
        OpenApi::ContainerValidator.validate(container: new_value) if new_value.is_a?(Array)
      end

      @rule = new_value
    end

    # Generates #hash and #== methods from all fields
    # #== @return [Bool]
    # #hash calculates hash code according to all attributes.
    # #hash @return [UInt64] Hash code
    def_equals_and_hash(@rule)
  end
end
