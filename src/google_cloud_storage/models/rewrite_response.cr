#  Cloud Storage JSON API
#
# Stores and retrieves potentially large, immutable data objects.
#
# The version of the OpenAPI document: v1
#
# Generated by: https://openapi-generator.tech
#

require "../../core"

module GoogleCloudStorage
  # A rewrite response.
  class RewriteResponse
    include JSON::Serializable
    include JSON::Serializable::Unmapped
    include OpenApi::Validatable
    include OpenApi::Json

    # Optional Properties

    # true if the copy is finished; otherwise, false if the copy is in progress. This property is always present in the response.
    @[JSON::Field(key: "done", type: Bool?, default: nil, required: false, nullable: false, emit_null: false)]
    getter done : Bool? = nil

    # The kind of item this is.
    @[JSON::Field(key: "kind", type: String?, default: "storage#rewriteResponse", required: false, nullable: false, emit_null: false)]
    getter kind : String? = "storage#rewriteResponse"

    # The total size of the object being copied in bytes. This property is always present in the response.
    @[JSON::Field(key: "objectSize", type: String?, default: nil, required: false, nullable: false, emit_null: false)]
    getter object_size : String? = nil

    @[JSON::Field(key: "resource", type: GoogleCloudStorage::Object?, default: nil, required: false, nullable: false, emit_null: false)]
    getter resource : GoogleCloudStorage::Object? = nil

    # A token to use in subsequent requests to continue copying data. This token is present in the response only when there is more data to copy.
    @[JSON::Field(key: "rewriteToken", type: String?, default: nil, required: false, nullable: false, emit_null: false)]
    getter rewrite_token : String? = nil

    # The total bytes written so far, which can be used to provide a waiting user with a progress indicator. This property is always present in the response.
    @[JSON::Field(key: "totalBytesRewritten", type: String?, default: nil, required: false, nullable: false, emit_null: false)]
    getter total_bytes_rewritten : String? = nil

    # Initializes the object
    # @param [Hash] attributes Model attributes in the form of hash
    def initialize(
      *,
      # Optional properties
      @done : Bool? = nil,
      @kind : String? = "storage#rewriteResponse",
      @object_size : String? = nil,
      @resource : GoogleCloudStorage::Object? = nil,
      @rewrite_token : String? = nil,
      @total_bytes_rewritten : String? = nil
    )
    end

    # Show invalid properties with the reasons. Usually used together with valid?
    # @return Array for valid properties with the reasons
    def list_invalid_properties : Array(String)
      invalid_properties = Array(String).new

      unless (_done = @done).nil?
      end
      unless (_kind = @kind).nil?
      end
      unless (_object_size = @object_size).nil?
      end
      unless (_resource = @resource).nil?
        invalid_properties.concat(_resource.list_invalid_properties_for("resource")) if _resource.is_a?(OpenApi::Validatable)
      end
      unless (_rewrite_token = @rewrite_token).nil?
      end
      unless (_total_bytes_rewritten = @total_bytes_rewritten).nil?
      end
      invalid_properties
    end

    # Check to see if the all the properties in the model are valid
    # @return true if the model is valid
    def valid? : Bool
      unless (_done = @done).nil?
      end

      unless (_kind = @kind).nil?
      end

      unless (_object_size = @object_size).nil?
      end

      unless (_resource = @resource).nil?
        return false if _resource.is_a?(OpenApi::Validatable) && !_resource.valid?
      end

      unless (_rewrite_token = @rewrite_token).nil?
      end

      unless (_total_bytes_rewritten = @total_bytes_rewritten).nil?
      end

      true
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] done Object to be assigned
    def done=(new_value : Bool?)
      unless new_value.nil?
      end

      @done = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] kind Object to be assigned
    def kind=(new_value : String?)
      unless new_value.nil?
      end

      @kind = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] object_size Object to be assigned
    def object_size=(new_value : String?)
      unless new_value.nil?
      end

      @object_size = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] resource Object to be assigned
    def resource=(new_value : GoogleCloudStorage::Object?)
      unless new_value.nil?
        new_value.validate if new_value.is_a?(OpenApi::Validatable)
      end

      @resource = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] rewrite_token Object to be assigned
    def rewrite_token=(new_value : String?)
      unless new_value.nil?
      end

      @rewrite_token = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] total_bytes_rewritten Object to be assigned
    def total_bytes_rewritten=(new_value : String?)
      unless new_value.nil?
      end

      @total_bytes_rewritten = new_value
    end

    # Generates #hash and #== methods from all fields
    # #== @return [Bool]
    # #hash calculates hash code according to all attributes.
    # #hash @return [UInt64] Hash code
    def_equals_and_hash(@done, @kind, @object_size, @resource, @rewrite_token, @total_bytes_rewritten)
  end
end
