#  Cloud Storage JSON API
#
# Stores and retrieves potentially large, immutable data objects.
#
# The version of the OpenAPI document: v1
#
# Generated by: https://openapi-generator.tech
#

require "../../core"

require "./compose_request_source_objects_inner_object_preconditions"

module GoogleCloudStorage
  class ComposeRequestSourceObjectsInner
    include JSON::Serializable
    include JSON::Serializable::Unmapped
    include OpenApi::Validatable
    include OpenApi::Json

    # Optional Properties

    # The generation of this object to use as the source.
    @[JSON::Field(key: "generation", type: String?, default: nil, required: false, nullable: false, emit_null: false)]
    getter generation : String? = nil

    # The source object's name. All source objects must reside in the same bucket.
    @[JSON::Field(key: "name", type: String?, default: nil, required: false, nullable: false, emit_null: false)]
    getter name : String? = nil

    @[JSON::Field(key: "objectPreconditions", type: GoogleCloudStorage::ComposeRequestSourceObjectsInnerObjectPreconditions?, default: nil, required: false, nullable: false, emit_null: false)]
    getter object_preconditions : GoogleCloudStorage::ComposeRequestSourceObjectsInnerObjectPreconditions? = nil

    # Initializes the object
    # @param [Hash] attributes Model attributes in the form of hash
    def initialize(
      *,
      # Optional properties
      @generation : String? = nil,
      @name : String? = nil,
      @object_preconditions : GoogleCloudStorage::ComposeRequestSourceObjectsInnerObjectPreconditions? = nil
    )
    end

    # Show invalid properties with the reasons. Usually used together with valid?
    # @return Array for valid properties with the reasons
    def list_invalid_properties : Array(String)
      invalid_properties = Array(String).new

      unless (_generation = @generation).nil?
      end
      unless (_name = @name).nil?
      end
      unless (_object_preconditions = @object_preconditions).nil?
        invalid_properties.concat(_object_preconditions.list_invalid_properties_for("object_preconditions")) if _object_preconditions.is_a?(OpenApi::Validatable)
      end
      invalid_properties
    end

    # Check to see if the all the properties in the model are valid
    # @return true if the model is valid
    def valid? : Bool
      unless (_generation = @generation).nil?
      end

      unless (_name = @name).nil?
      end

      unless (_object_preconditions = @object_preconditions).nil?
        return false if _object_preconditions.is_a?(OpenApi::Validatable) && !_object_preconditions.valid?
      end

      true
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] generation Object to be assigned
    def generation=(new_value : String?)
      unless new_value.nil?
      end

      @generation = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] name Object to be assigned
    def name=(new_value : String?)
      unless new_value.nil?
      end

      @name = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] object_preconditions Object to be assigned
    def object_preconditions=(new_value : GoogleCloudStorage::ComposeRequestSourceObjectsInnerObjectPreconditions?)
      unless new_value.nil?
        new_value.validate if new_value.is_a?(OpenApi::Validatable)
      end

      @object_preconditions = new_value
    end

    # Generates #hash and #== methods from all fields
    # #== @return [Bool]
    # #hash calculates hash code according to all attributes.
    # #hash @return [UInt64] Hash code
    def_equals_and_hash(@generation, @name, @object_preconditions)
  end
end
