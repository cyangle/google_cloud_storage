#  Cloud Storage JSON API
#
# Stores and retrieves potentially large, immutable data objects.
#
# The version of the OpenAPI document: v1
#
# Generated by: https://openapi-generator.tech
#

require "json"
require "time"
require "log"

module GoogleCloudStorage
  # The bucket's IAM configuration.
  @[JSON::Serializable::Options(emit_nulls: true)]
  class BucketIamConfiguration
    include JSON::Serializable
    include JSON::Serializable::Unmapped

    # Optional properties
    @[JSON::Field(key: "bucketPolicyOnly", type: BucketIamConfigurationBucketPolicyOnly?, presence: true, ignore_serialize: bucket_policy_only.nil? && !bucket_policy_only_present?)]
    property bucket_policy_only : BucketIamConfigurationBucketPolicyOnly?

    @[JSON::Field(ignore: true)]
    property? bucket_policy_only_present : Bool = false

    # The bucket's Public Access Prevention configuration. Currently, 'inherited' and 'enforced' are supported.
    @[JSON::Field(key: "publicAccessPrevention", type: String?, presence: true, ignore_serialize: public_access_prevention.nil? && !public_access_prevention_present?)]
    property public_access_prevention : String?

    @[JSON::Field(ignore: true)]
    property? public_access_prevention_present : Bool = false

    @[JSON::Field(key: "uniformBucketLevelAccess", type: BucketIamConfigurationUniformBucketLevelAccess?, presence: true, ignore_serialize: uniform_bucket_level_access.nil? && !uniform_bucket_level_access_present?)]
    property uniform_bucket_level_access : BucketIamConfigurationUniformBucketLevelAccess?

    @[JSON::Field(ignore: true)]
    property? uniform_bucket_level_access_present : Bool = false

    # Initializes the object
    # @param [Hash] attributes Model attributes in the form of hash
    def initialize(*, @bucket_policy_only : BucketIamConfigurationBucketPolicyOnly? = nil, @public_access_prevention : String? = nil, @uniform_bucket_level_access : BucketIamConfigurationUniformBucketLevelAccess? = nil)
    end

    # Show invalid properties with the reasons. Usually used together with valid?
    # @return Array for valid properties with the reasons
    def list_invalid_properties
      invalid_properties = Array(String).new

      invalid_properties
    end

    # Check to see if the all the properties in the model are valid
    # @return true if the model is valid
    def valid?
      true
    end

    # Checks equality by comparing each attribute.
    # @param [Object] Object to be compared
    def ==(o)
      return true if self.same?(o)
      self.class == o.class &&
        bucket_policy_only == o.bucket_policy_only &&
        public_access_prevention == o.public_access_prevention &&
        uniform_bucket_level_access == o.uniform_bucket_level_access
    end

    # @see the `==` method
    # @param [Object] Object to be compared
    def eql?(o)
      self == o
    end

    # Calculates hash code according to all attributes.
    # @return [UInt64] Hash code
    def_hash(@bucket_policy_only, @public_access_prevention, @uniform_bucket_level_access)
  end
end
