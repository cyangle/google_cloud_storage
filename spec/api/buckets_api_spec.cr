#  Cloud Storage JSON API
#
# Stores and retrieves potentially large, immutable data objects.
#
# The version of the OpenAPI document: v1
#
# Generated by: https://openapi-generator.tech
#

require "../spec_helper"

# Unit tests for GoogleCloudStorage::BucketsApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe "BucketsApi" do
  describe "test an instance of BucketsApi" do
    it "should create an instance of BucketsApi" do
      api_instance = GoogleCloudStorage::BucketsApi.new
      api_instance.should be_a(GoogleCloudStorage::BucketsApi)
    end
  end

  # unit tests for storage_buckets_delete
  # Permanently deletes an empty bucket.
  # @param bucket Name of a bucket.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :alt Data format for the response.
  # @option opts [String] :fields Selector specifying which fields to include in a partial response.
  # @option opts [String] :key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
  # @option opts [String] :oauth_token OAuth 2.0 token for the current user.
  # @option opts [Bool] :pretty_print Returns response with indentations and line breaks.
  # @option opts [String] :quota_user An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
  # @option opts [String] :upload_type Upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;, \&quot;resumable\&quot;).
  # @option opts [String] :user_ip Deprecated. Please use quotaUser instead.
  # @option opts [String] :if_metageneration_match If set, only deletes the bucket if its metageneration matches this value.
  # @option opts [String] :if_metageneration_not_match If set, only deletes the bucket if its metageneration does not match this value.
  # @option opts [String] :user_project The project to be billed for this request. Required for Requester Pays buckets.
  # @return [nil]
  describe "storage_buckets_delete test" do
    it "deletes empty bucket" do
      load_cassette("storage_buckets_delete") do
        buckets_api = GoogleCloudStorage::BucketsApi.new
        bucket_name = "crystal_empty_bucket_for_deletion"
        buckets_api.delete(bucket: bucket_name)
      end
    end

    it "returns status code 204" do
      load_cassette("storage_buckets_delete") do
        buckets_api = GoogleCloudStorage::BucketsApi.new
        bucket_name = "crystal_empty_bucket_for_deletion"
        response = buckets_api.build_api_request_for_delete(bucket: bucket_name).execute
        (response.status_code).should eq(204)
      end
    end
  end

  # unit tests for storage_buckets_get
  # Returns metadata for the specified bucket.
  # @param bucket Name of a bucket.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :alt Data format for the response.
  # @option opts [String] :fields Selector specifying which fields to include in a partial response.
  # @option opts [String] :key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
  # @option opts [String] :oauth_token OAuth 2.0 token for the current user.
  # @option opts [Bool] :pretty_print Returns response with indentations and line breaks.
  # @option opts [String] :quota_user An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
  # @option opts [String] :upload_type Upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;, \&quot;resumable\&quot;).
  # @option opts [String] :user_ip Deprecated. Please use quotaUser instead.
  # @option opts [String] :if_metageneration_match Makes the return of the bucket metadata conditional on whether the bucket&#39;s current metageneration matches the given value.
  # @option opts [String] :if_metageneration_not_match Makes the return of the bucket metadata conditional on whether the bucket&#39;s current metageneration does not match the given value.
  # @option opts [String] :projection Set of properties to return. Defaults to noAcl.
  # @option opts [String] :user_project The project to be billed for this request. Required for Requester Pays buckets.
  # @return [Bucket]
  describe "storage_buckets_get test" do
    it "returns bucket metadata as GoogleCloudStorage::Bucket" do
      load_cassette("storage_buckets_get") do
        buckets_api = GoogleCloudStorage::BucketsApi.new
        bucket = buckets_api.get(bucket: BUCKET_NAME)
        (bucket).should be_a(GoogleCloudStorage::Bucket)
        (bucket.name).should eq(BUCKET_NAME)
      end
    end
  end

  # unit tests for storage_buckets_get_iam_policy
  # Returns an IAM policy for the specified bucket.
  # @param bucket Name of a bucket.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :alt Data format for the response.
  # @option opts [String] :fields Selector specifying which fields to include in a partial response.
  # @option opts [String] :key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
  # @option opts [String] :oauth_token OAuth 2.0 token for the current user.
  # @option opts [Bool] :pretty_print Returns response with indentations and line breaks.
  # @option opts [String] :quota_user An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
  # @option opts [String] :upload_type Upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;, \&quot;resumable\&quot;).
  # @option opts [String] :user_ip Deprecated. Please use quotaUser instead.
  # @option opts [Int32] :options_requested_policy_version The IAM policy format version to be returned. If the optionsRequestedPolicyVersion is for an older version that doesn&#39;t support part of the requested IAM policy, the request fails.
  # @option opts [String] :user_project The project to be billed for this request. Required for Requester Pays buckets.
  # @return [Policy]
  describe "storage_buckets_get_iam_policy test" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  # unit tests for storage_buckets_insert
  # Creates a new bucket.
  # @param project A valid API project identifier.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :alt Data format for the response.
  # @option opts [String] :fields Selector specifying which fields to include in a partial response.
  # @option opts [String] :key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
  # @option opts [String] :oauth_token OAuth 2.0 token for the current user.
  # @option opts [Bool] :pretty_print Returns response with indentations and line breaks.
  # @option opts [String] :quota_user An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
  # @option opts [String] :upload_type Upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;, \&quot;resumable\&quot;).
  # @option opts [String] :user_ip Deprecated. Please use quotaUser instead.
  # @option opts [String] :predefined_acl Apply a predefined set of access controls to this bucket.
  # @option opts [String] :predefined_default_object_acl Apply a predefined set of default object access controls to this bucket.
  # @option opts [String] :projection Set of properties to return. Defaults to noAcl, unless the bucket resource specifies acl or defaultObjectAcl properties, when it defaults to full.
  # @option opts [String] :user_project The project to be billed for this request.
  # @option opts [Bucket] :bucket
  # @return [Bucket]
  describe "storage_buckets_insert test" do
    context "bucket already exists" do
      it "raises an error" do
        expect_raises(GoogleCloudStorage::ApiError, /The requested bucket name is not available/) do
          load_cassette("storage_buckets_insert") do
            buckets_api = GoogleCloudStorage::BucketsApi.new
            bucket_name = "crystal"
            bucket = GoogleCloudStorage::Bucket.new(name: bucket_name)
            buckets_api.insert(project: PROJECT_NAME, bucket: bucket)
          end
        end
      end
    end

    context "contains restricted keyword" do
      it "raises an error" do
        expect_raises(GoogleCloudStorage::ApiError, /Use of this bucket name is restricted/) do
          load_cassette("storage_buckets_insert") do
            buckets_api = GoogleCloudStorage::BucketsApi.new
            bucket_name = "google_cloud_storage_crystal_client_test"
            bucket = GoogleCloudStorage::Bucket.new(name: bucket_name)
            buckets_api.insert(project: PROJECT_NAME, bucket: bucket)
          end
        end
      end
    end

    context "with valid bucket name" do
      it "returns bucket" do
        load_cassette("storage_buckets_insert") do
          buckets_api = GoogleCloudStorage::BucketsApi.new
          bucket = GoogleCloudStorage::Bucket.new(name: BUCKET_NAME)
          result_bucket = buckets_api.insert(project: PROJECT_NAME, bucket: bucket)
          (result_bucket.name).should eq(BUCKET_NAME)
        end
      end
    end
  end

  # unit tests for storage_buckets_list
  # Retrieves a list of buckets for a given project.
  # @param project A valid API project identifier.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :alt Data format for the response.
  # @option opts [String] :fields Selector specifying which fields to include in a partial response.
  # @option opts [String] :key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
  # @option opts [String] :oauth_token OAuth 2.0 token for the current user.
  # @option opts [Bool] :pretty_print Returns response with indentations and line breaks.
  # @option opts [String] :quota_user An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
  # @option opts [String] :upload_type Upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;, \&quot;resumable\&quot;).
  # @option opts [String] :user_ip Deprecated. Please use quotaUser instead.
  # @option opts [Int32] :max_results Maximum number of buckets to return in a single response. The service will use this parameter or 1,000 items, whichever is smaller.
  # @option opts [String] :page_token A previously-returned page token representing part of the larger set of results to view.
  # @option opts [String] :prefix Filter results to buckets whose names begin with this prefix.
  # @option opts [String] :projection Set of properties to return. Defaults to noAcl.
  # @option opts [String] :user_project The project to be billed for this request.
  # @return [Buckets]
  describe "storage_buckets_list test" do
    it "returns a list of buckets" do
      load_cassette("storage_buckets_list") do
        buckets_api = GoogleCloudStorage::BucketsApi.new
        buckets = buckets_api.list(project: PROJECT_NAME)
        (buckets).should be_a(GoogleCloudStorage::Buckets)
        (buckets.items.not_nil!.map(&.name)).should eq(["cloud_storage_crystal_client_test", "cycoding_bucket_1"])
      end
    end
  end

  # unit tests for storage_buckets_lock_retention_policy
  # Locks retention policy on a bucket.
  # @param bucket Name of a bucket.
  # @param if_metageneration_match Makes the operation conditional on whether bucket&#39;s current metageneration matches the given value.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :alt Data format for the response.
  # @option opts [String] :fields Selector specifying which fields to include in a partial response.
  # @option opts [String] :key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
  # @option opts [String] :oauth_token OAuth 2.0 token for the current user.
  # @option opts [Bool] :pretty_print Returns response with indentations and line breaks.
  # @option opts [String] :quota_user An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
  # @option opts [String] :upload_type Upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;, \&quot;resumable\&quot;).
  # @option opts [String] :user_ip Deprecated. Please use quotaUser instead.
  # @option opts [String] :user_project The project to be billed for this request. Required for Requester Pays buckets.
  # @return [Bucket]
  describe "storage_buckets_lock_retention_policy test" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  # unit tests for storage_buckets_patch
  # Patches a bucket. Changes to the bucket will be readable immediately after writing, but configuration changes may take time to propagate.
  # @param bucket Name of a bucket.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :alt Data format for the response.
  # @option opts [String] :fields Selector specifying which fields to include in a partial response.
  # @option opts [String] :key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
  # @option opts [String] :oauth_token OAuth 2.0 token for the current user.
  # @option opts [Bool] :pretty_print Returns response with indentations and line breaks.
  # @option opts [String] :quota_user An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
  # @option opts [String] :upload_type Upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;, \&quot;resumable\&quot;).
  # @option opts [String] :user_ip Deprecated. Please use quotaUser instead.
  # @option opts [String] :if_metageneration_match Makes the return of the bucket metadata conditional on whether the bucket&#39;s current metageneration matches the given value.
  # @option opts [String] :if_metageneration_not_match Makes the return of the bucket metadata conditional on whether the bucket&#39;s current metageneration does not match the given value.
  # @option opts [String] :predefined_acl Apply a predefined set of access controls to this bucket.
  # @option opts [String] :predefined_default_object_acl Apply a predefined set of default object access controls to this bucket.
  # @option opts [String] :projection Set of properties to return. Defaults to full.
  # @option opts [String] :user_project The project to be billed for this request. Required for Requester Pays buckets.
  # @option opts [Bucket] :bucket2
  # @return [Bucket]
  describe "storage_buckets_patch test" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  # unit tests for storage_buckets_set_iam_policy
  # Updates an IAM policy for the specified bucket.
  # @param bucket Name of a bucket.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :alt Data format for the response.
  # @option opts [String] :fields Selector specifying which fields to include in a partial response.
  # @option opts [String] :key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
  # @option opts [String] :oauth_token OAuth 2.0 token for the current user.
  # @option opts [Bool] :pretty_print Returns response with indentations and line breaks.
  # @option opts [String] :quota_user An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
  # @option opts [String] :upload_type Upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;, \&quot;resumable\&quot;).
  # @option opts [String] :user_ip Deprecated. Please use quotaUser instead.
  # @option opts [String] :user_project The project to be billed for this request. Required for Requester Pays buckets.
  # @option opts [Policy] :policy
  # @return [Policy]
  describe "storage_buckets_set_iam_policy test" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  # unit tests for storage_buckets_test_iam_permissions
  # Tests a set of permissions on the given bucket to see which, if any, are held by the caller.
  # @param bucket Name of a bucket.
  # @param permissions Permissions to test.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :alt Data format for the response.
  # @option opts [String] :fields Selector specifying which fields to include in a partial response.
  # @option opts [String] :key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
  # @option opts [String] :oauth_token OAuth 2.0 token for the current user.
  # @option opts [Bool] :pretty_print Returns response with indentations and line breaks.
  # @option opts [String] :quota_user An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
  # @option opts [String] :upload_type Upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;, \&quot;resumable\&quot;).
  # @option opts [String] :user_ip Deprecated. Please use quotaUser instead.
  # @option opts [String] :user_project The project to be billed for this request. Required for Requester Pays buckets.
  # @return [TestIamPermissionsResponse]
  describe "storage_buckets_test_iam_permissions test" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  # unit tests for storage_buckets_update
  # Updates a bucket. Changes to the bucket will be readable immediately after writing, but configuration changes may take time to propagate.
  # @param bucket Name of a bucket.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :alt Data format for the response.
  # @option opts [String] :fields Selector specifying which fields to include in a partial response.
  # @option opts [String] :key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
  # @option opts [String] :oauth_token OAuth 2.0 token for the current user.
  # @option opts [Bool] :pretty_print Returns response with indentations and line breaks.
  # @option opts [String] :quota_user An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
  # @option opts [String] :upload_type Upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;, \&quot;resumable\&quot;).
  # @option opts [String] :user_ip Deprecated. Please use quotaUser instead.
  # @option opts [String] :if_metageneration_match Makes the return of the bucket metadata conditional on whether the bucket&#39;s current metageneration matches the given value.
  # @option opts [String] :if_metageneration_not_match Makes the return of the bucket metadata conditional on whether the bucket&#39;s current metageneration does not match the given value.
  # @option opts [String] :predefined_acl Apply a predefined set of access controls to this bucket.
  # @option opts [String] :predefined_default_object_acl Apply a predefined set of default object access controls to this bucket.
  # @option opts [String] :projection Set of properties to return. Defaults to full.
  # @option opts [String] :user_project The project to be billed for this request. Required for Requester Pays buckets.
  # @option opts [Bucket] :bucket2
  # @return [Bucket]
  describe "storage_buckets_update test" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end
end
