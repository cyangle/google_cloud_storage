#  Cloud Storage JSON API
#
# Stores and retrieves potentially large, immutable data objects.
#
# The version of the OpenAPI document: v1
#
# Generated by: https://openapi-generator.tech
#

require "../../core"

require "./bucket_access_control_project_team"

module GoogleCloudStorage
  # An access-control entry.
  class ObjectAccessControl
    include JSON::Serializable
    include JSON::Serializable::Unmapped
    include OpenApi::Validatable
    include OpenApi::Json

    # Optional Properties

    # The name of the bucket.
    @[JSON::Field(key: "bucket", type: String?, default: nil, required: false, nullable: false, emit_null: false)]
    getter bucket : String? = nil

    # The domain associated with the entity, if any.
    @[JSON::Field(key: "domain", type: String?, default: nil, required: false, nullable: false, emit_null: false)]
    getter domain : String? = nil

    # The email address associated with the entity, if any.
    @[JSON::Field(key: "email", type: String?, default: nil, required: false, nullable: false, emit_null: false)]
    getter email : String? = nil

    # The entity holding the permission, in one of the following forms:  - user-userId  - user-email  - group-groupId  - group-email  - domain-domain  - project-team-projectId  - allUsers  - allAuthenticatedUsers Examples:  - The user liz@example.com would be user-liz@example.com.  - The group example@googlegroups.com would be group-example@googlegroups.com.  - To refer to all members of the Google Apps for Business domain example.com, the entity would be domain-example.com.
    @[JSON::Field(key: "entity", type: String?, default: nil, required: false, nullable: false, emit_null: false)]
    getter entity : String? = nil

    # The ID for the entity, if any.
    @[JSON::Field(key: "entityId", type: String?, default: nil, required: false, nullable: false, emit_null: false)]
    getter entity_id : String? = nil

    # HTTP 1.1 Entity tag for the access-control entry.
    @[JSON::Field(key: "etag", type: String?, default: nil, required: false, nullable: false, emit_null: false)]
    getter etag : String? = nil

    # The content generation of the object, if applied to an object.
    @[JSON::Field(key: "generation", type: String?, default: nil, required: false, nullable: false, emit_null: false)]
    getter generation : String? = nil

    # The ID of the access-control entry.
    @[JSON::Field(key: "id", type: String?, default: nil, required: false, nullable: false, emit_null: false)]
    getter id : String? = nil

    # The kind of item this is. For object access control entries, this is always storage#objectAccessControl.
    @[JSON::Field(key: "kind", type: String?, default: "storage#objectAccessControl", required: false, nullable: false, emit_null: false)]
    getter kind : String? = "storage#objectAccessControl"

    # The name of the object, if applied to an object.
    @[JSON::Field(key: "object", type: String?, default: nil, required: false, nullable: false, emit_null: false)]
    getter object : String? = nil

    @[JSON::Field(key: "projectTeam", type: GoogleCloudStorage::BucketAccessControlProjectTeam?, default: nil, required: false, nullable: false, emit_null: false)]
    getter project_team : GoogleCloudStorage::BucketAccessControlProjectTeam? = nil

    # The access permission for the entity.
    @[JSON::Field(key: "role", type: String?, default: nil, required: false, nullable: false, emit_null: false)]
    getter role : String? = nil

    # The link to this access-control entry.
    @[JSON::Field(key: "selfLink", type: String?, default: nil, required: false, nullable: false, emit_null: false)]
    getter self_link : String? = nil

    # Initializes the object
    # @param [Hash] attributes Model attributes in the form of hash
    def initialize(
      *,
      # Optional properties
      @bucket : String? = nil,
      @domain : String? = nil,
      @email : String? = nil,
      @entity : String? = nil,
      @entity_id : String? = nil,
      @etag : String? = nil,
      @generation : String? = nil,
      @id : String? = nil,
      @kind : String? = "storage#objectAccessControl",
      @object : String? = nil,
      @project_team : GoogleCloudStorage::BucketAccessControlProjectTeam? = nil,
      @role : String? = nil,
      @self_link : String? = nil
    )
    end

    # Show invalid properties with the reasons. Usually used together with valid?
    # @return Array for valid properties with the reasons
    def list_invalid_properties : Array(String)
      invalid_properties = Array(String).new

      unless (_project_team = @project_team).nil?
        invalid_properties.concat(_project_team.list_invalid_properties_for("project_team")) if _project_team.is_a?(OpenApi::Validatable)
      end

      invalid_properties
    end

    # Check to see if the all the properties in the model are valid
    # @return true if the model is valid
    def valid? : Bool
      unless (_project_team = @project_team).nil?
        return false if _project_team.is_a?(OpenApi::Validatable) && !_project_team.valid?
      end

      true
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] bucket Object to be assigned
    def bucket=(new_value : String?)
      @bucket = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] domain Object to be assigned
    def domain=(new_value : String?)
      @domain = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] email Object to be assigned
    def email=(new_value : String?)
      @email = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] entity Object to be assigned
    def entity=(new_value : String?)
      @entity = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] entity_id Object to be assigned
    def entity_id=(new_value : String?)
      @entity_id = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] etag Object to be assigned
    def etag=(new_value : String?)
      @etag = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] generation Object to be assigned
    def generation=(new_value : String?)
      @generation = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] id Object to be assigned
    def id=(new_value : String?)
      @id = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] kind Object to be assigned
    def kind=(new_value : String?)
      @kind = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] object Object to be assigned
    def object=(new_value : String?)
      @object = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] project_team Object to be assigned
    def project_team=(new_value : GoogleCloudStorage::BucketAccessControlProjectTeam?)
      unless new_value.nil?
        new_value.validate if new_value.is_a?(OpenApi::Validatable)
      end

      @project_team = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] role Object to be assigned
    def role=(new_value : String?)
      @role = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] self_link Object to be assigned
    def self_link=(new_value : String?)
      @self_link = new_value
    end

    # Generates #hash and #== methods from all fields
    # #== @return [Bool]
    # #hash calculates hash code according to all attributes.
    # #hash @return [UInt64] Hash code
    def_equals_and_hash(@bucket, @domain, @email, @entity, @entity_id, @etag, @generation, @id, @kind, @object, @project_team, @role, @self_link)
  end
end
